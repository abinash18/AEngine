{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/net.abi.abis_engine.components._camera.html": {
    "href": "api/net.abi.abis_engine.components._camera.html",
    "title": "Class Camera",
    "keywords": "Class Camera Inheritance java.lang.Object SceneComponent Camera Inherited Members SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.init() SceneComponent.render(Shader shader, RenderingEngine engine) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class Camera extends SceneComponent Constructors Camera(float fov, float aspectRatio, float zNear, float zFar, String name) Declaration public Camera(float fov, float aspectRatio, float zNear, float zFar, String name) Parameters Type Name Description float fov float aspectRatio float zNear float zFar String name Camera(float left, float right, float bottom, float top, float zNear, float zFar, String name) Declaration public Camera(float left, float right, float bottom, float top, float zNear, float zFar, String name) Parameters Type Name Description float left float right float bottom float top float zNear float zFar String name Camera(Vector3f pos, Vector3f forward, Vector3f up, String name) Declaration public Camera(Vector3f pos, Vector3f forward, Vector3f up, String name) Parameters Type Name Description Vector3f pos Vector3f forward Vector3f up String name Methods addToScene() Declaration public void addToScene() getLeft() Declaration public Vector3f getLeft() Returns Type Description Vector3f getProjection() Declaration public Matrix4f getProjection() Returns Type Description Matrix4f getRight() Declaration public Vector3f getRight() Returns Type Description Vector3f getViewOrthographic() Declaration public Matrix4f getViewOrthographic() Returns Type Description Matrix4f getViewProjection() Declaration public Matrix4f getViewProjection() Returns Type Description Matrix4f input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta setProjection(Matrix4f projection) Declaration public void setProjection(Matrix4f projection) Parameters Type Name Description Matrix4f projection"
  },
  "api/net.abi.abis_engine.components._directional_light.html": {
    "href": "api/net.abi.abis_engine.components._directional_light.html",
    "title": "Class DirectionalLight",
    "keywords": "Class DirectionalLight Inheritance java.lang.Object SceneComponent Light DirectionalLight Inherited Members Light.addToScene() Light.getColor() Light.getIntensity() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() Light.getShader() SceneComponent.getTransform() SceneComponent.init() SceneComponent.input(float delta) Light.Light(Vector3f color, float intensity) SceneComponent.render(Shader shader, RenderingEngine engine) Light.setColor(Vector3f color) Light.setIntensity(float intensity) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) Light.setShader(Shader shader) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class DirectionalLight extends Light Constructors DirectionalLight(Vector3f color, float intensity) Declaration public DirectionalLight(Vector3f color, float intensity) Parameters Type Name Description Vector3f color float intensity Methods getDirection() Declaration public Vector3f getDirection() Returns Type Description Vector3f"
  },
  "api/net.abi.abis_engine.components._free_look.html": {
    "href": "api/net.abi.abis_engine.components._free_look.html",
    "title": "Class FreeLook",
    "keywords": "Class FreeLook Inheritance java.lang.Object SceneComponent FreeLook Inherited Members SceneComponent.addToScene() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.init() SceneComponent.render(Shader shader, RenderingEngine engine) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class FreeLook extends SceneComponent Constructors FreeLook(float sensitivity) Declaration public FreeLook(float sensitivity) Parameters Type Name Description float sensitivity FreeLook(float sensitivity, int unlockMouseKey) Declaration public FreeLook(float sensitivity, int unlockMouseKey) Parameters Type Name Description float sensitivity int unlockMouseKey Methods input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.components._free_move.html": {
    "href": "api/net.abi.abis_engine.components._free_move.html",
    "title": "Class FreeMove",
    "keywords": "Class FreeMove Inheritance java.lang.Object SceneComponent FreeMove Inherited Members SceneComponent.addToScene() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.init() SceneComponent.render(Shader shader, RenderingEngine engine) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class FreeMove extends SceneComponent Constructors FreeMove(float speed) Declaration public FreeMove(float speed) Parameters Type Name Description float speed FreeMove(int forwardKey, int backKey, int leftKey, int rightKey, float speed) Declaration public FreeMove(int forwardKey, int backKey, int leftKey, int rightKey, float speed) Parameters Type Name Description int forwardKey int backKey int leftKey int rightKey float speed Methods getBackKey() Declaration public int getBackKey() Returns Type Description int getForwardKey() Declaration public int getForwardKey() Returns Type Description int getLeftKey() Declaration public int getLeftKey() Returns Type Description int getRightKey() Declaration public int getRightKey() Returns Type Description int getSpeed() Declaration public float getSpeed() Returns Type Description float input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta move(Vector3f dir, float amt) Declaration public void move(Vector3f dir, float amt) Parameters Type Name Description Vector3f dir float amt setBackKey(int backKey) Declaration public void setBackKey(int backKey) Parameters Type Name Description int backKey setForwardKey(int forwardKey) Declaration public void setForwardKey(int forwardKey) Parameters Type Name Description int forwardKey setLeftKey(int leftKey) Declaration public void setLeftKey(int leftKey) Parameters Type Name Description int leftKey setRightKey(int rightKey) Declaration public void setRightKey(int rightKey) Parameters Type Name Description int rightKey setSpeed(float speed) Declaration public void setSpeed(float speed) Parameters Type Name Description float speed"
  },
  "api/net.abi.abis_engine.components._light.html": {
    "href": "api/net.abi.abis_engine.components._light.html",
    "title": "Class Light",
    "keywords": "Class Light Inheritance java.lang.Object SceneComponent Light Inherited Members SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.init() SceneComponent.input(float delta) SceneComponent.render(Shader shader, RenderingEngine engine) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class Light extends SceneComponent Constructors Light(Vector3f color, float intensity) Declaration public Light(Vector3f color, float intensity) Parameters Type Name Description Vector3f color float intensity Methods addToScene() Declaration public void addToScene() getColor() Declaration public Vector3f getColor() Returns Type Description Vector3f getIntensity() Declaration public float getIntensity() Returns Type Description float getShader() Declaration public Shader getShader() Returns Type Description Shader setColor(Vector3f color) Declaration public void setColor(Vector3f color) Parameters Type Name Description Vector3f color setIntensity(float intensity) Declaration public void setIntensity(float intensity) Parameters Type Name Description float intensity setShader(Shader shader) Declaration public void setShader(Shader shader) Parameters Type Name Description Shader shader"
  },
  "api/net.abi.abis_engine.components._lock_view.html": {
    "href": "api/net.abi.abis_engine.components._lock_view.html",
    "title": "Class LockView",
    "keywords": "Class LockView Inheritance java.lang.Object SceneComponent LockView Inherited Members SceneComponent.addToScene() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.init() SceneComponent.input(float delta) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) Namespace : Assembly : .dll Syntax public class LockView extends SceneComponent Methods render(Shader shader, RenderingEngine engine) Declaration public void render(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader RenderingEngine engine update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.components._mesh_renderer.html": {
    "href": "api/net.abi.abis_engine.components._mesh_renderer.html",
    "title": "Class MeshRenderer",
    "keywords": "Class MeshRenderer Inheritance java.lang.Object SceneComponent MeshRenderer Inherited Members SceneComponent.addToScene() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() SceneComponent.getTransform() SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) Namespace : Assembly : .dll Syntax public class MeshRenderer extends SceneComponent Constructors MeshRenderer(Mesh mesh, Material mat) Declaration public MeshRenderer(Mesh mesh, Material mat) Parameters Type Name Description Mesh mesh Material mat Fields drawNormals Declaration public static boolean drawNormals= false Field Value Type Description boolean Methods init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta render(Shader shader, RenderingEngine engine) Declaration public void render(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader RenderingEngine engine toggleWireFrames() Declaration public static void toggleWireFrames() update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.components._point_light.html": {
    "href": "api/net.abi.abis_engine.components._point_light.html",
    "title": "Class PointLight",
    "keywords": "Class PointLight Inheritance java.lang.Object SceneComponent Light PointLight Inherited Members Light.addToScene() Light.getColor() Light.getIntensity() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() Light.getShader() SceneComponent.getTransform() SceneComponent.init() SceneComponent.input(float delta) Light.Light(Vector3f color, float intensity) SceneComponent.render(Shader shader, RenderingEngine engine) Light.setColor(Vector3f color) Light.setIntensity(float intensity) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) Light.setShader(Shader shader) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class PointLight extends Light Constructors PointLight(Vector3f color, float intensity, Attenuation attenuation) Declaration public PointLight(Vector3f color, float intensity, Attenuation attenuation) Parameters Type Name Description Vector3f color float intensity Attenuation attenuation x is constant, y is linear, z is exponent in a Vector3f PointLight(Vector3f color, float intensity, float constant, float linear, float exponent) Declaration public PointLight(Vector3f color, float intensity, float constant, float linear, float exponent) Parameters Type Name Description Vector3f color float intensity float constant float linear float exponent Methods getAttenuation() Declaration public Attenuation getAttenuation() Returns Type Description Attenuation getRange() Declaration public float getRange() Returns Type Description float setAttenuation(Attenuation attenuation) Declaration public void setAttenuation(Attenuation attenuation) Parameters Type Name Description Attenuation attenuation setRange(float range) Declaration public void setRange(float range) Parameters Type Name Description float range"
  },
  "api/net.abi.abis_engine.components._scene_component.html": {
    "href": "api/net.abi.abis_engine.components._scene_component.html",
    "title": "Class SceneComponent",
    "keywords": "Class SceneComponent Inheritance java.lang.Object SceneComponent Namespace : Assembly : .dll Syntax public class SceneComponent Methods addToScene() Declaration public void addToScene() getName() Declaration public String getName() Returns Type Description String getParent() Declaration public Entity getParent() Returns Type Description Entity getParentScene() Declaration public Scene getParentScene() Returns Type Description Scene getTransform() Declaration public Transform getTransform() Returns Type Description Transform init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta render(Shader shader, RenderingEngine engine) Declaration public void render(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader RenderingEngine engine setName(String name) Declaration public void setName(String name) Parameters Type Name Description String name setParent(Entity parent) Declaration public void setParent(Entity parent) Parameters Type Name Description Entity parent update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.components._spot_light.html": {
    "href": "api/net.abi.abis_engine.components._spot_light.html",
    "title": "Class SpotLight",
    "keywords": "Class SpotLight Inheritance java.lang.Object SceneComponent Light PointLight SpotLight Inherited Members Light.addToScene() PointLight.getAttenuation() Light.getColor() Light.getIntensity() SceneComponent.getName() SceneComponent.getParent() SceneComponent.getParentScene() PointLight.getRange() Light.getShader() SceneComponent.getTransform() SceneComponent.init() SceneComponent.input(float delta) Light.Light(Vector3f color, float intensity) PointLight.PointLight(Vector3f color, float intensity, float constant, float linear, float exponent) PointLight.PointLight(Vector3f color, float intensity, Attenuation attenuation) SceneComponent.render(Shader shader, RenderingEngine engine) PointLight.setAttenuation(Attenuation attenuation) Light.setColor(Vector3f color) Light.setIntensity(float intensity) SceneComponent.setName(String name) SceneComponent.setParent(Entity parent) PointLight.setRange(float range) Light.setShader(Shader shader) SceneComponent.update(float delta) Namespace : Assembly : .dll Syntax public class SpotLight extends PointLight Constructors SpotLight(Vector3f color, float intensity, Attenuation attenuation, float cutoff) Declaration public SpotLight(Vector3f color, float intensity, Attenuation attenuation, float cutoff) Parameters Type Name Description Vector3f color float intensity Attenuation attenuation float cutoff Methods getCutoff() Declaration public float getCutoff() Returns Type Description float getDirection() Declaration public Vector3f getDirection() Returns Type Description Vector3f setCutoff(float cutoff) Declaration public void setCutoff(float cutoff) Parameters Type Name Description float cutoff"
  },
  "api/net.abi.abis_engine.components.html": {
    "href": "api/net.abi.abis_engine.components.html",
    "title": "Namespace net.abi.abisEngine.components",
    "keywords": "Namespace net.abi.abisEngine.components Classes Camera DirectionalLight FreeLook FreeMove Light LockView MeshRenderer PointLight SceneComponent SpotLight"
  },
  "api/net.abi.abis_engine.core._core_engine.html": {
    "href": "api/net.abi.abis_engine.core._core_engine.html",
    "title": "Class CoreEngine",
    "keywords": "Class CoreEngine Inheritance java.lang.Object CoreEngine Namespace : Assembly : .dll Syntax public class CoreEngine Constructors CoreEngine(double framerate) Declaration public CoreEngine(double framerate) Parameters Type Name Description double framerate Methods exit(int exitCode) Declaration public void exit(int exitCode) Parameters Type Name Description int exitCode getFrameRate() Declaration public double getFrameRate() Returns Type Description double getFrameTime() Declaration public double getFrameTime() Returns Type Description double getWindowManager() Declaration public GLFWWindowManager getWindowManager() Returns Type Description GLFWWindowManager initGLFW() Declaration public void initGLFW() isRunning() Declaration public boolean isRunning() Returns Type Description boolean openLoadingWindow() Specifies the entry point to the engine. Declaration protected void openLoadingWindow() setFrameRate(double frameRate) Declaration public void setFrameRate(double frameRate) Parameters Type Name Description double frameRate start() Starts the engine. And if it is already running dose nothing. Declaration public void start() stop() Declaration public void stop()"
  },
  "api/net.abi.abis_engine.core._main.html": {
    "href": "api/net.abi.abis_engine.core._main.html",
    "title": "Class Main",
    "keywords": "Class Main Inheritance java.lang.Object Main Namespace : Assembly : .dll Syntax public class Main Methods openStartingWindow(CoreEngine e) Declaration protected abstract void openStartingWindow(CoreEngine e) Parameters Type Name Description CoreEngine e Returns Type Description abstract void run(String[] args) Declaration public void run(String[] args) Parameters Type Name Description String [] args"
  },
  "api/net.abi.abis_engine.core._time.html": {
    "href": "api/net.abi.abis_engine.core._time.html",
    "title": "Class Time",
    "keywords": "Class Time Inheritance java.lang.Object Time Namespace : Assembly : .dll Syntax public class Time Methods getDelta() Declaration public static double getDelta() Returns Type Description double getTime() Declaration public static double getTime() Returns Type Description double setDelta(double delta) Declaration public static void setDelta(double delta) Parameters Type Name Description double delta"
  },
  "api/net.abi.abis_engine.core.html": {
    "href": "api/net.abi.abis_engine.core.html",
    "title": "Namespace net.abi.abisEngine.core",
    "keywords": "Namespace net.abi.abisEngine.core The Core Engine. All API References And Classes Are Stored Here For The Core Scene Engine. Classes CoreEngine Main Time"
  },
  "api/net.abi.abis_engine.entities._entity.html": {
    "href": "api/net.abi.abis_engine.entities._entity.html",
    "title": "Class Entity",
    "keywords": "Class Entity Inheritance java.lang.Object EntityI Entity Namespace : Assembly : .dll Syntax public class Entity implements EntityI Constructors Entity() Declaration public Entity() Methods addChild(Entity child) Declaration public Entity addChild(Entity child) Parameters Type Name Description Entity child Returns Type Description Entity addComponent(SceneComponent gameComponent) Declaration public Entity addComponent(SceneComponent gameComponent) Parameters Type Name Description SceneComponent gameComponent Returns Type Description Entity addToScene() Declaration public void addToScene() getAllAttached() Declaration public ArrayList<Entity> getAllAttached() Returns Type Description ArrayList< Entity > getChildren() Declaration public ArrayList<Entity> getChildren() Returns Type Description ArrayList< Entity > getComponents() Declaration public ArrayList<SceneComponent> getComponents() Returns Type Description ArrayList< SceneComponent > getParentScene() Declaration public Scene getParentScene() Returns Type Description Scene getTransform() Returns The Transform For The Entity Used To Manipulate The Entity . Declaration public Transform getTransform() Returns Type Description Transform Transform Object. Overrides EntityI.getTransform() init() Initialize All Scene Objects And Components Attached. Declaration public void init() Overrides EntityI.init() input(float delta) Only Update The Inputs For This Object. Declaration public void input(float delta) Parameters Type Name Description float delta Overrides EntityI.input(float delta) inputAll(float delta) Update Inputs For All Scene Objects And Components Attached. Declaration public void inputAll(float delta) Parameters Type Name Description float delta render(Shader shader, RenderingEngine engine) Only Render This Scene Object. Declaration public void render(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader RenderingEngine engine Overrides EntityI.render(Shader shader, RenderingEngine engine) renderAll(Shader shader, RenderingEngine engine) Declaration public void renderAll(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader RenderingEngine engine setChildren(ArrayList<Entity> children) Declaration public void setChildren(ArrayList<Entity> children) Parameters Type Name Description ArrayList< Entity > children setComponents(ArrayList<SceneComponent> components) Declaration public void setComponents(ArrayList<SceneComponent> components) Parameters Type Name Description ArrayList< SceneComponent > components setParentScene(Scene prntScene) Declaration public void setParentScene(Scene prntScene) Parameters Type Name Description Scene prntScene setTransform(Transform transform) Sets The Entity 's Transform To The Transform Provided. Declaration public void setTransform(Transform transform) Parameters Type Name Description Transform trnsfrm Overrides EntityI.setTransform(Transform trnsfrm) update(float delta) Only Update This Scene Object. Declaration public void update(float delta) Parameters Type Name Description float delta Overrides EntityI.update(float delta) updateAll(float delta) Update This And All Scene Objects And Components Attached. Declaration public void updateAll(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.entities._entity_i.html": {
    "href": "api/net.abi.abis_engine.entities._entity_i.html",
    "title": "Interface EntityI",
    "keywords": "Interface EntityI Namespace : Assembly : .dll Syntax public interface EntityI Methods getTransform() Returns The Transform For The Entity Used To Manipulate The Entity . Declaration public Transform getTransform() Returns Type Description Transform Transform Object. init() Initializes The Entity Before The First Frame Of The Scene That Is Being Rendered. Declaration public void init() input(float delta) This Function Is Intended For Updating All Input Mechanics For The Entity . Declaration public void input(float delta) Parameters Type Name Description float delta The Difference In Time. This Parameter Is Usually Requested Directly From The Core Engine. render(Shader shader, RenderingEngine engine) This Function Renders The Entity With The Given Shader, And With The Supplied Rendering Engine. Declaration public void render(Shader shader, RenderingEngine engine) Parameters Type Name Description Shader shader Shader That Is Used To Render The Entity . RenderingEngine engine The Engine Used To Render The Entity . setTransform(Transform trnsfrm) Sets The Entity 's Transform To The Transform Provided. Declaration public void setTransform(Transform trnsfrm) Parameters Type Name Description Transform trnsfrm update(float delta) This Function Is Intended For Updating The Entity (Ex. Animations And Movements) Declaration public void update(float delta) Parameters Type Name Description float delta The Difference In Time. This Parameter Is Usually Requested Directly From The Core Engine."
  },
  "api/net.abi.abis_engine.entities.html": {
    "href": "api/net.abi.abis_engine.entities.html",
    "title": "Namespace net.abi.abisEngine.entities",
    "keywords": "Namespace net.abi.abisEngine.entities Classes Entity Interfaces EntityI"
  },
  "api/net.abi.abis_engine.handlers.file._file_handler.html": {
    "href": "api/net.abi.abis_engine.handlers.file._file_handler.html",
    "title": "Class FileHandler",
    "keywords": "Class FileHandler Inheritance java.lang.Object FileHandler Namespace : Assembly : .dll Syntax public class FileHandler Constructors FileHandler(String fileName, String filePath) Declaration public FileHandler(String fileName, String filePath) Parameters Type Name Description String fileName Needs to have the name of the file with the file extension included String filePath The complete path to the file or relative ./ Exceptions Type Condition IOException Fields out Declaration public PrintWriter out Field Value Type Description PrintWriter Methods checkFileExists() Declaration public boolean checkFileExists() Returns Type Description boolean destroy() Declaration public void destroy() finalize() Declaration public void finalize() getMaxLines() Declaration public int getMaxLines() Returns Type Description int initializeReader() Declaration public synchronized void initializeReader() Returns Type Description synchronized void initializeWriter(boolean autoFlush) setAppend Needs To Be Called Before Initializing Writer If The File Already Exists. Otherwise It Will Overwrite The End Of The File. Declaration public synchronized void initializeWriter(boolean autoFlush) Parameters Type Name Description boolean autoFlush Returns Type Description synchronized void Exceptions Type Condition IOException initializeWriter(boolean autoFlush, int maxLines) setAppend Needs To Be Called Before Initializing Writer If The File Already Exists. Otherwise It Will Overwrite The End Of The File. Declaration public synchronized void initializeWriter(boolean autoFlush, int maxLines) Parameters Type Name Description boolean autoFlush int maxLines Returns Type Description synchronized void Exceptions Type Condition IOException isAppend() Declaration public boolean isAppend() Returns Type Description boolean readLine() Declaration public String readLine() Returns Type Description String setAppend(boolean append) Declaration public void setAppend(boolean append) Parameters Type Name Description boolean append"
  },
  "api/net.abi.abis_engine.handlers.file._path_handle.html": {
    "href": "api/net.abi.abis_engine.handlers.file._path_handle.html",
    "title": "Class PathHandle",
    "keywords": "Class PathHandle Inheritance java.lang.Object PathHandle Inherited Members net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle net.abi.abisEngine.handlers.file.PathHandle Namespace : Assembly : .dll Syntax public class PathHandle Constructors PathHandle(Path path) Declaration public PathHandle(Path path) Parameters Type Name Description Path path PathHandle(Path path, PathType pathType) Declaration public PathHandle(Path path, PathType pathType) Parameters Type Name Description Path path PathType pathType PathHandle(String path) Declaration public PathHandle(String path) Parameters Type Name Description String path PathHandle(String path, PathType pathType) Declaration public PathHandle(String path, PathType pathType) Parameters Type Name Description String path PathType pathType Methods getExtension() Declaration public String getExtension() Returns Type Description String getFileInstance() Declaration public File getFileInstance() Returns Type Description File getName() Declaration public String getName() Returns Type Description String getNameWithoutExtension() Declaration public String getNameWithoutExtension() Returns Type Description String getPath() Declaration public String getPath() Returns Type Description String getPathType() Declaration public PathType getPathType() Returns Type Description PathType getPathWithoutExtension() Declaration public String getPathWithoutExtension() Returns Type Description String isAbsolute() Declaration public boolean isAbsolute() Returns Type Description boolean isDirectory() Declaration public boolean isDirectory() Returns Type Description boolean"
  },
  "api/net.abi.abis_engine.handlers.file._path_resolve_i.html": {
    "href": "api/net.abi.abis_engine.handlers.file._path_resolve_i.html",
    "title": "Interface PathResolveI",
    "keywords": "Interface PathResolveI Namespace : Assembly : .dll Syntax public interface PathResolveI Methods resolve(String path, PathType type) Returns a PathHandle that is bound to the file or directory provided. Declaration public PathHandle resolve(String path, PathType type) Parameters Type Name Description String path PathType type Returns Type Description PathHandle resolveAbsolute(String path) Returns a PathHandle that is bound to the file or directory provided that the path is fully qualified and absolute. Declaration public PathHandle resolveAbsolute(String path) Parameters Type Name Description String path Returns Type Description PathHandle resolveAssets(String path) Declaration public PathHandle resolveAssets(String path) Parameters Type Name Description String path Returns Type Description PathHandle resolveClasspath(String path) Returns a PathHandle that is bound to the file or directory provided in the ClassPath. Declaration public PathHandle resolveClasspath(String path) Parameters Type Name Description String path Returns Type Description PathHandle resolveExternal(String path) Returns a PathHandle that is bound to the file or directory present in the home directory of the current user on the desktop. Declaration public PathHandle resolveExternal(String path) Parameters Type Name Description String path Returns Type Description PathHandle"
  },
  "api/net.abi.abis_engine.handlers.file._path_type.html": {
    "href": "api/net.abi.abis_engine.handlers.file._path_type.html",
    "title": "Enum PathType",
    "keywords": "Enum PathType Namespace : Assembly : .dll Syntax public enum PathType Fields Name Description Absolute Absolute path in the file system. Assets File path to the engines default assets directory. ClassPath Path to the root of the Class path, these files are always read only. Directory Specifies the path to be a directory so it can be manipulated accordingly. Internal The path relative to the directory of the Application."
  },
  "api/net.abi.abis_engine.handlers.file.html": {
    "href": "api/net.abi.abis_engine.handlers.file.html",
    "title": "Namespace net.abi.abisEngine.handlers.file",
    "keywords": "Namespace net.abi.abisEngine.handlers.file Provides a handle to a specified path which can then be manipulated to create/delete/read/write directory's and files. Classes FileHandler PathHandle Interfaces PathResolveI Enums PathType"
  },
  "api/net.abi.abis_engine.handlers.logging._log_level.html": {
    "href": "api/net.abi.abis_engine.handlers.logging._log_level.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace : Assembly : .dll Syntax public enum LogLevel Fields Name Description ALL DEBUG ERROR FINE FINEST INFO WARNING"
  },
  "api/net.abi.abis_engine.handlers.logging._log_manager.html": {
    "href": "api/net.abi.abis_engine.handlers.logging._log_manager.html",
    "title": "Class LogManager",
    "keywords": "Class LogManager Inheritance java.lang.Object LogManager Namespace : Assembly : .dll Syntax public class LogManager Fields fileHandler Declaration public static FileHandler fileHandler Field Value Type Description FileHandler Methods addAllowedLevel(LogLevel l) Declaration public static synchronized void addAllowedLevel(LogLevel l) Parameters Type Name Description LogLevel l Returns Type Description synchronized void addFileHandler(int maxLines) Declaration public static synchronized void addFileHandler(int maxLines) Parameters Type Name Description int maxLines Returns Type Description synchronized void getCurrentLevel() Declaration public static LogLevel getCurrentLevel() Returns Type Description LogLevel getCurrentTimeAndDate() Declaration public static String getCurrentTimeAndDate() Returns Type Description String getLogger(Class<T> s) Declaration public static synchronized<T> Logger getLogger(Class<T> s) Parameters Type Name Description Class<T> s Returns Type Description synchronized<T> Logger getLogger(String className) Declaration public static synchronized Logger getLogger(String className) Parameters Type Name Description String className Returns Type Description synchronized Logger getLoggers() Declaration public static Map<String, Logger> getLoggers() Returns Type Description Map<String, Logger > isLevelAllowed(LogLevel l) Declaration public static synchronized boolean isLevelAllowed(LogLevel l) Parameters Type Name Description LogLevel l Returns Type Description synchronized boolean removeAllowedLevel(LogLevel l) Declaration public static synchronized void removeAllowedLevel(LogLevel l) Parameters Type Name Description LogLevel l Returns Type Description synchronized void setCurrentLevel(LogLevel currentLevel) Declaration public static void setCurrentLevel(LogLevel currentLevel) Parameters Type Name Description LogLevel currentLevel setFileHandler(FileHandler fileHandler) Declaration public static void setFileHandler(FileHandler fileHandler) Parameters Type Name Description FileHandler fileHandler setLoggers(HashMap<String, Logger> loggers) Declaration public static void setLoggers(HashMap<String, Logger> loggers) Parameters Type Name Description HashMap<String, Logger > loggers setLogLevel(LogLevel l) Declaration public static void setLogLevel(LogLevel l) Parameters Type Name Description LogLevel l"
  },
  "api/net.abi.abis_engine.handlers.logging._logger.html": {
    "href": "api/net.abi.abis_engine.handlers.logging._logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance java.lang.Object Logger Namespace : Assembly : .dll Syntax public class Logger Constructors Logger(String name) Declaration public Logger(String name) Parameters Type Name Description String name Logger(String name, FileHandler fileHandler) Declaration public Logger(String name, FileHandler fileHandler) Parameters Type Name Description String name FileHandler fileHandler Methods debug(String msg) Declaration public synchronized boolean debug(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean debug(String msg, Throwable e) Declaration public synchronized void debug(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void error(String msg) Declaration public synchronized boolean error(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean error(String msg, Throwable e) Declaration public synchronized void error(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void fine(String msg) Declaration public synchronized boolean fine(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean fine(String msg, Throwable e) Declaration public synchronized void fine(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void finest(String msg) Declaration public synchronized boolean finest(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean finest(String msg, Throwable e) Declaration public synchronized void finest(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void info(String msg) Declaration public synchronized boolean info(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean info(String msg, Throwable e) Declaration public synchronized void info(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void log(LogLevel l, String msg) Declaration public synchronized void log(LogLevel l, String msg) Parameters Type Name Description LogLevel l String msg Returns Type Description synchronized void log(LogLevel l, String msg, Throwable e) Declaration public synchronized void log(LogLevel l, String msg, Throwable e) Parameters Type Name Description LogLevel l String msg Throwable e Returns Type Description synchronized void setClassName(String className) Declaration public void setClassName(String className) Parameters Type Name Description String className setOutputForLogFile(PrintWriter out) Declaration public void setOutputForLogFile(PrintWriter out) Parameters Type Name Description PrintWriter out warning(String msg) Declaration public synchronized boolean warning(String msg) Parameters Type Name Description String msg Returns Type Description synchronized boolean warning(String msg, Throwable e) Declaration public synchronized void warning(String msg, Throwable e) Parameters Type Name Description String msg Throwable e Returns Type Description synchronized void"
  },
  "api/net.abi.abis_engine.handlers.logging.html": {
    "href": "api/net.abi.abis_engine.handlers.logging.html",
    "title": "Namespace net.abi.abisEngine.handlers.logging",
    "keywords": "Namespace net.abi.abisEngine.handlers.logging Classes LogManager Logger Enums LogLevel"
  },
  "api/net.abi.abis_engine.input._g_l_f_w_input.html": {
    "href": "api/net.abi.abis_engine.input._g_l_f_w_input.html",
    "title": "Class GLFWInput",
    "keywords": "Class GLFWInput Inheritance java.lang.Object GLFWInput Namespace : Assembly : .dll Syntax public class GLFWInput Fields GLFW_ARROW_CURSOR Standard cursor shapes. See standard cursor creation for how these are used. Declaration public static final int GLFW_ARROW_CURSOR= 0x36001 Field Value Type Description final int GLFW_CURSOR Input options. Declaration public static final int GLFW_CURSOR= 0x33001 Field Value Type Description final int GLFW_CURSOR_NORMAL Cursor state. Declaration public static final int GLFW_CURSOR_NORMAL= 0x34001 Field Value Type Description final int GLFW_GAMEPAD_AXIS_LEFT_X Gamepad axes. See gamepad for how these are used. Declaration public static final int GLFW_GAMEPAD_AXIS_LEFT_X= 0 Field Value Type Description final int GLFW_GAMEPAD_BUTTON_A Gamepad buttons. See gamepad for how these are used. Declaration public static final int GLFW_GAMEPAD_BUTTON_A= 0 Field Value Type Description final int glfw_Handle Declaration protected long glfw_Handle Field Value Type Description long GLFW_JOYSTICK_1 Joysticks. See joystick input for how these are used. Declaration public static final int GLFW_JOYSTICK_1= 0 Field Value Type Description final int GLFW_KEY_ESCAPE Function keys. Declaration public static final int GLFW_KEY_ESCAPE= 256 Field Value Type Description final int GLFW_KEY_SPACE Printable keys. Declaration public static final int GLFW_KEY_SPACE= 32 Field Value Type Description final int GLFW_MOD_ALT If this bit is set one or more Alt keys were held down. Declaration public static final int GLFW_MOD_ALT= 0x4 Field Value Type Description final int GLFW_MOD_CAPS_LOCK If this bit is set the Caps Lock key is enabled and the LOCK_KEY_MODS input mode is set. Declaration public static final int GLFW_MOD_CAPS_LOCK= 0x10 Field Value Type Description final int GLFW_MOD_CONTROL If this bit is set one or more Control keys were held down. Declaration public static final int GLFW_MOD_CONTROL= 0x2 Field Value Type Description final int GLFW_MOD_NUM_LOCK If this bit is set the Num Lock key is enabled and the LOCK_KEY_MODS input mode is set. Declaration public static final int GLFW_MOD_NUM_LOCK= 0x20 Field Value Type Description final int GLFW_MOD_SHIFT If this bit is set one or more Shift keys were held down. Declaration public static final int GLFW_MOD_SHIFT= 0x1 Field Value Type Description final int GLFW_MOD_SUPER If this bit is set one or more Super keys were held down. Declaration public static final int GLFW_MOD_SUPER= 0x8 Field Value Type Description final int GLFW_MOUSE_BUTTON_1 Mouse buttons. See mouse button input for how these are used. Declaration public static final int GLFW_MOUSE_BUTTON_1= 0 Field Value Type Description final int GLFW_PRESS The key or button was pressed. Declaration public static final int GLFW_PRESS= 1 Field Value Type Description final int GLFW_RELEASE The key or button was released. Declaration public static final int GLFW_RELEASE= 0 Field Value Type Description final int GLFW_REPEAT The key was held down until it repeated. Declaration public static final int GLFW_REPEAT= 2 Field Value Type Description final int GLFW_TRUE Boolean values. Declaration public static final int GLFW_TRUE= 1 Field Value Type Description final int Methods destroySafe() Safely destroys the callbacks created. This function is safe to use before calling glfwDestroyCallbacks. Declaration public abstract void destroySafe() Returns Type Description abstract void initInput(long hndl) Declaration public abstract void initInput(long hndl) Parameters Type Name Description long hndl Returns Type Description abstract void update() Declaration public void update()"
  },
  "api/net.abi.abis_engine.input._g_l_f_w_mouse_and_keyboard_input.html": {
    "href": "api/net.abi.abis_engine.input._g_l_f_w_mouse_and_keyboard_input.html",
    "title": "Class GLFWMouseAndKeyboardInput",
    "keywords": "Class GLFWMouseAndKeyboardInput Inheritance java.lang.Object GLFWInput GLFWMouseAndKeyboardInput Inherited Members GLFWInput.GLFW_ARROW_CURSOR GLFWInput.GLFW_CURSOR GLFWInput.GLFW_CURSOR_NORMAL GLFWInput.GLFW_GAMEPAD_AXIS_LEFT_X GLFWInput.GLFW_GAMEPAD_BUTTON_A GLFWInput.glfw_Handle GLFWInput.GLFW_JOYSTICK_1 GLFWInput.GLFW_KEY_ESCAPE GLFWInput.GLFW_KEY_SPACE GLFWInput.GLFW_MOD_ALT GLFWInput.GLFW_MOD_CAPS_LOCK GLFWInput.GLFW_MOD_CONTROL GLFWInput.GLFW_MOD_NUM_LOCK GLFWInput.GLFW_MOD_SHIFT GLFWInput.GLFW_MOD_SUPER GLFWInput.GLFW_MOUSE_BUTTON_1 GLFWInput.GLFW_PRESS GLFWInput.GLFW_RELEASE GLFWInput.GLFW_REPEAT GLFWInput.GLFW_TRUE Namespace : Assembly : .dll Syntax public class GLFWMouseAndKeyboardInput extends GLFWInput Constructors GLFWMouseAndKeyboardInput() Declaration public GLFWMouseAndKeyboardInput() Methods destroy() Destroys The Call Backs Created. Note: -Will Cause Crash If Called Right Before Calling glfwFreeCallbacks(Use destroySafe() ;). Declaration public void destroy() destroySafe() Safely destroys the callbacks created. This function is safe to use before calling glfwDestroyCallbacks. Declaration public void destroySafe() getCrsNtrClbk() Declaration public GLFWCursorEnterCallback getCrsNtrClbk() Returns Type Description GLFWCursorEnterCallback getCursorPos() Declaration public Vector2f getCursorPos() Returns Type Description Vector2f getScrollOffset() Declaration public float getScrollOffset() Returns Type Description float initInput(long hndl) Declaration public void initInput(long hndl) Parameters Type Name Description long hndl isCursorInWindow() Declaration public boolean isCursorInWindow() Returns Type Description boolean isKeyDown(int key) Declaration public boolean isKeyDown(int key) Parameters Type Name Description int key Returns Type Description boolean isKeyHeldDown(int key) Declaration public boolean isKeyHeldDown(int key) Parameters Type Name Description int key Returns Type Description boolean isKeyUp(int key) Declaration public boolean isKeyUp(int key) Parameters Type Name Description int key Returns Type Description boolean isMouseButtonDown(int btn) Declaration public boolean isMouseButtonDown(int btn) Parameters Type Name Description int btn Returns Type Description boolean isMouseButtonHeldDown(int btn) Declaration public boolean isMouseButtonHeldDown(int btn) Parameters Type Name Description int btn Returns Type Description boolean isMouseButtonUp(int btn) Declaration public boolean isMouseButtonUp(int btn) Parameters Type Name Description int btn Returns Type Description boolean isMouseHidden() Declaration public boolean isMouseHidden() Returns Type Description boolean isMouseHiddenAndGrabbed() Declaration public boolean isMouseHiddenAndGrabbed() Returns Type Description boolean setCursorMode(int mode) Declaration public void setCursorMode(int mode) Parameters Type Name Description int mode setCursorPos(float x, float y) Declaration public void setCursorPos(float x, float y) Parameters Type Name Description float x float y setCursorPos(Vector2f newPos) Declaration public void setCursorPos(Vector2f newPos) Parameters Type Name Description Vector2f newPos setScrollOffset(float offset) Declaration public void setScrollOffset(float offset) Parameters Type Name Description float offset update() Declaration public void update()"
  },
  "api/net.abi.abis_engine.input.html": {
    "href": "api/net.abi.abis_engine.input.html",
    "title": "Namespace net.abi.abisEngine.input",
    "keywords": "Namespace net.abi.abisEngine.input Classes GLFWInput GLFWMouseAndKeyboardInput"
  },
  "api/net.abi.abis_engine.math._math.html": {
    "href": "api/net.abi.abis_engine.math._math.html",
    "title": "Class Math",
    "keywords": "Class Math Inheritance java.lang.Object Math Namespace : Assembly : .dll Syntax public class Math Fields PI Declaration public static final double PI= java.lang.Math.PI Field Value Type Description final double Methods abs(double r) Declaration public static double abs(double r) Parameters Type Name Description double r Returns Type Description double abs(float r) Declaration public static float abs(float r) Parameters Type Name Description float r Returns Type Description float abs(int r) Declaration public static int abs(int r) Parameters Type Name Description int r Returns Type Description int acos(double r) Declaration public static double acos(double r) Parameters Type Name Description double r Returns Type Description double asin(double r) Declaration public static double asin(double r) Parameters Type Name Description double r Returns Type Description double atan2(double y, double x) Declaration public static double atan2(double y, double x) Parameters Type Name Description double y double x Returns Type Description double ceil(double v) Declaration public static double ceil(double v) Parameters Type Name Description double v Returns Type Description double ceil(float v) Declaration public static float ceil(float v) Parameters Type Name Description float v Returns Type Description float cos(double rad) Declaration public static double cos(double rad) Parameters Type Name Description double rad Returns Type Description double cosFromSin(double sin, double angle) Declaration public static double cosFromSin(double sin, double angle) Parameters Type Name Description double sin double angle Returns Type Description double exp(double a) Declaration public static double exp(double a) Parameters Type Name Description double a Returns Type Description double floor(double v) Declaration public static double floor(double v) Parameters Type Name Description double v Returns Type Description double floor(float v) Declaration public static float floor(float v) Parameters Type Name Description float v Returns Type Description float isFinite(double d) Declaration public static boolean isFinite(double d) Parameters Type Name Description double d Returns Type Description boolean isFinite(float f) Declaration public static boolean isFinite(float f) Parameters Type Name Description float f Returns Type Description boolean max(double a, double b) Declaration public static double max(double a, double b) Parameters Type Name Description double a double b Returns Type Description double max(float a, float b) Declaration public static float max(float a, float b) Parameters Type Name Description float a float b Returns Type Description float max(int x, int y) Declaration public static int max(int x, int y) Parameters Type Name Description int x int y Returns Type Description int min(double a, double b) Declaration public static double min(double a, double b) Parameters Type Name Description double a double b Returns Type Description double min(float a, float b) Declaration public static float min(float a, float b) Parameters Type Name Description float a float b Returns Type Description float min(int x, int y) Declaration public static int min(int x, int y) Parameters Type Name Description int x int y Returns Type Description int round(double v) Declaration public static long round(double v) Parameters Type Name Description double v Returns Type Description long round(float v) Declaration public static int round(float v) Parameters Type Name Description float v Returns Type Description int sin(double rad) Declaration public static double sin(double rad) Parameters Type Name Description double rad Returns Type Description double sqrt(double r) Declaration public static double sqrt(double r) Parameters Type Name Description double r Returns Type Description double tan(double r) Declaration public static double tan(double r) Parameters Type Name Description double r Returns Type Description double toDegrees(double angles) Declaration public static double toDegrees(double angles) Parameters Type Name Description double angles Returns Type Description double toRadians(double angles) Declaration public static double toRadians(double angles) Parameters Type Name Description double angles Returns Type Description double"
  },
  "api/net.abi.abis_engine.math._matrix.html": {
    "href": "api/net.abi.abis_engine.math._matrix.html",
    "title": "Interface Matrix",
    "keywords": "Interface Matrix Namespace : Assembly : .dll Syntax public interface Matrix Methods get(int i, int j) Declaration public float get(int i, int j) Parameters Type Name Description int i int j Returns Type Description float getCols() Declaration public int getCols() Returns Type Description int getRows() Declaration public int getRows() Returns Type Description int"
  },
  "api/net.abi.abis_engine.math._matrix4f.html": {
    "href": "api/net.abi.abis_engine.math._matrix4f.html",
    "title": "Class Matrix4f",
    "keywords": "Class Matrix4f Inheritance java.lang.Object Matrix Matrix4f Namespace : Assembly : .dll Syntax public class Matrix4f implements Matrix Constructors Matrix4f() Declaration public Matrix4f() Matrix4f(float[][] _m) Declaration public Matrix4f(float[][] _m) Parameters Type Name Description float _m Methods get() Declaration public float [][] get() Returns Type Description float [][] get(int x, int y) Declaration public float get(int x, int y) Parameters Type Name Description int x int y Returns Type Description float Overrides Matrix.get(int i, int j) getCols() Declaration public int getCols() Returns Type Description int Overrides Matrix.getCols() getRows() Declaration public int getRows() Returns Type Description int Overrides Matrix.getRows() initIdentity() Declaration public Matrix4f initIdentity() Returns Type Description Matrix4f initOrthographic(float left, float right, float bottom, float top, float near, float far) Declaration public Matrix4f initOrthographic(float left, float right, float bottom, float top, float near, float far) Parameters Type Name Description float left float right float bottom float top float near float far Returns Type Description Matrix4f initPerspective(float fov, float width, float height, float zNear, float zFar) Initializes The Perspective. Declaration public Matrix4f initPerspective(float fov, float width, float height, float zNear, float zFar) Parameters Type Name Description float fov float width float height float zNear float zFar Returns Type Description Matrix4f initProjection(float fov, float aspectRatio, float zNear, float zFar) Declaration public Matrix4f initProjection(float fov, float aspectRatio, float zNear, float zFar) Parameters Type Name Description float fov float aspectRatio float zNear float zFar Returns Type Description Matrix4f initRotation(float x, float y, float z) Declaration public Matrix4f initRotation(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Matrix4f initRotation(Vector3f forward, Vector3f up) Declaration public Matrix4f initRotation(Vector3f forward, Vector3f up) Parameters Type Name Description Vector3f forward Vector3f up Returns Type Description Matrix4f initRotation(Vector3f forward, Vector3f up, Vector3f right) Declaration public Matrix4f initRotation(Vector3f forward, Vector3f up, Vector3f right) Parameters Type Name Description Vector3f forward Vector3f up Vector3f right Returns Type Description Matrix4f initScale(float x, float y, float z) Declaration public Matrix4f initScale(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Matrix4f initTranslation(float x, float y, float z) Declaration public Matrix4f initTranslation(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Matrix4f invertGeneric() Declaration public Matrix4f invertGeneric() Returns Type Description Matrix4f invertGeneric(Matrix4f dest) Declaration public Matrix4f invertGeneric(Matrix4f dest) Parameters Type Name Description Matrix4f dest Returns Type Description Matrix4f invertPerspective(Matrix4f dest) Declaration public Matrix4f invertPerspective(Matrix4f dest) Parameters Type Name Description Matrix4f dest Returns Type Description Matrix4f mul(Matrix4f r) Declaration public Matrix4f mul(Matrix4f r) Parameters Type Name Description Matrix4f r Returns Type Description Matrix4f set(float[][] m) Declaration public Matrix4f set(float[][] m) Parameters Type Name Description float m Returns Type Description Matrix4f set(int x, int y, float value) Declaration public void set(int x, int y, float value) Parameters Type Name Description int x int y float value transform(Vector3f other) Declaration public Vector3f transform(Vector3f other) Parameters Type Name Description Vector3f other Returns Type Description Vector3f transpose() Transpose the current matrix and return it in a new one. Declaration public Matrix4f transpose() Returns Type Description Matrix4f transpose(Matrix4f dest) Declaration public Matrix4f transpose(Matrix4f dest) Parameters Type Name Description Matrix4f dest Returns Type Description Matrix4f"
  },
  "api/net.abi.abis_engine.math._quaternion.html": {
    "href": "api/net.abi.abis_engine.math._quaternion.html",
    "title": "Class Quaternion",
    "keywords": "Class Quaternion Inheritance java.lang.Object Quaternion Namespace : Assembly : .dll Syntax public class Quaternion Constructors Quaternion() Declaration public Quaternion() Quaternion(float x, float y, float z, float w) Declaration public Quaternion(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Quaternion(Matrix4f rot) Declaration public Quaternion(Matrix4f rot) Parameters Type Name Description Matrix4f rot Quaternion(Quaternion r) Declaration public Quaternion(Quaternion r) Parameters Type Name Description Quaternion r Quaternion(Vector3f axis, float anglerad) Declaration public Quaternion(Vector3f axis, float anglerad) Parameters Type Name Description Vector3f axis float anglerad Methods add(float x, float y, float z, float w) Declaration public Quaternion add(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description Quaternion add(Quaternion r) Declaration public Quaternion add(Quaternion r) Parameters Type Name Description Quaternion r Returns Type Description Quaternion conjugate() Declaration public Quaternion conjugate() Returns Type Description Quaternion dot(float x, float y, float z, float w) Declaration public float dot(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float dot(Quaternion r) Declaration public float dot(Quaternion r) Parameters Type Name Description Quaternion r Returns Type Description float equals(Quaternion r) Declaration public boolean equals(Quaternion r) Parameters Type Name Description Quaternion r Returns Type Description boolean getBack() Declaration public Vector3f getBack() Returns Type Description Vector3f getDown() Declaration public Vector3f getDown() Returns Type Description Vector3f getForward() Declaration public Vector3f getForward() Returns Type Description Vector3f getLeft() Declaration public Vector3f getLeft() Returns Type Description Vector3f getRight() Declaration public Vector3f getRight() Returns Type Description Vector3f getUp() Declaration public Vector3f getUp() Returns Type Description Vector3f getW() Declaration public float getW() Returns Type Description float getX() Declaration public float getX() Returns Type Description float getY() Declaration public float getY() Returns Type Description float getZ() Declaration public float getZ() Returns Type Description float initRotationRad(Vector3f axis, float angleInRadians) Declaration public Quaternion initRotationRad(Vector3f axis, float angleInRadians) Parameters Type Name Description Vector3f axis float angleInRadians Returns Type Description Quaternion length() Declaration public float length() Returns Type Description float mul(float r) Declaration public Quaternion mul(float r) Parameters Type Name Description float r Returns Type Description Quaternion mul(Quaternion r) Declaration public Quaternion mul(Quaternion r) Parameters Type Name Description Quaternion r Returns Type Description Quaternion mul(Vector3f r) Declaration public Quaternion mul(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Quaternion mul(Vector3i r) Declaration public Quaternion mul(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Quaternion nlerp(Quaternion dest, float lerpFactor, boolean shortest) Declaration public Quaternion nlerp(Quaternion dest, float lerpFactor, boolean shortest) Parameters Type Name Description Quaternion dest float lerpFactor boolean shortest Returns Type Description Quaternion normalize() Declaration public Quaternion normalize() Returns Type Description Quaternion rotate(Vector3f axis, float angleRad) Declaration public Quaternion rotate(Vector3f axis, float angleRad) Parameters Type Name Description Vector3f axis float angleRad Returns Type Description Quaternion set(float x, float y, float z, float w) Declaration public Quaternion set(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description Quaternion set(Quaternion other) Declaration public Quaternion set(Quaternion other) Parameters Type Name Description Quaternion other Returns Type Description Quaternion setW(float w) Declaration public void setW(float w) Parameters Type Name Description float w setX(float x) Declaration public void setX(float x) Parameters Type Name Description float x setY(float y) Declaration public void setY(float y) Parameters Type Name Description float y setZ(float z) Declaration public void setZ(float z) Parameters Type Name Description float z slerp(Quaternion dest, float lerpFactor, boolean shortest) Declaration public Quaternion slerp(Quaternion dest, float lerpFactor, boolean shortest) Parameters Type Name Description Quaternion dest float lerpFactor boolean shortest Returns Type Description Quaternion sub(float x, float y, float z, float w) Declaration public Quaternion sub(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description Quaternion sub(Quaternion r) Declaration public Quaternion sub(Quaternion r) Parameters Type Name Description Quaternion r Returns Type Description Quaternion toRotationMatrix() Declaration public Matrix4f toRotationMatrix() Returns Type Description Matrix4f"
  },
  "api/net.abi.abis_engine.math._transform.html": {
    "href": "api/net.abi.abis_engine.math._transform.html",
    "title": "Class Transform",
    "keywords": "Class Transform Inheritance java.lang.Object Transform Namespace : Assembly : .dll Syntax public class Transform Constructors Transform() Declaration public Transform() Fields X_AXIS Declaration public static final Vector3f X_AXIS= new Vector3f(1, 0, 0) Field Value Type Description final Vector3f XY_AXIS Declaration public static final Vector3f XY_AXIS= new Vector3f(1, 1, 0) Field Value Type Description final Vector3f XYZ_AXIS Declaration public static final Vector3f XYZ_AXIS= new Vector3f(1, 1, 1) Field Value Type Description final Vector3f Y_AXIS Declaration public static final Vector3f Y_AXIS= new Vector3f(0, 1, 0) Field Value Type Description final Vector3f YZ_AXIS Declaration public static final Vector3f YZ_AXIS= new Vector3f(0, 1, 1) Field Value Type Description final Vector3f Z_AXIS Declaration public static final Vector3f Z_AXIS= new Vector3f(0, 0, 1) Field Value Type Description final Vector3f ZX_AXIS Declaration public static final Vector3f ZX_AXIS= new Vector3f(1, 0, 1) Field Value Type Description final Vector3f Methods getFov() Declaration public static float getFov() Returns Type Description float getHeight() Declaration public static float getHeight() Returns Type Description float getLookAtDirection(Vector3f point, Vector3f up) Declaration public Quaternion getLookAtDirection(Vector3f point, Vector3f up) Parameters Type Name Description Vector3f point Vector3f up Returns Type Description Quaternion getParent() Declaration public Transform getParent() Returns Type Description Transform getPosition() Declaration public Vector3f getPosition() Returns Type Description Vector3f getRotation() Declaration public Quaternion getRotation() Returns Type Description Quaternion getScale() Declaration public Vector3f getScale() Returns Type Description Vector3f getTransformation() Declaration public Matrix4f getTransformation() Returns Type Description Matrix4f getTransformedPosition() Declaration public Vector3f getTransformedPosition() Returns Type Description Vector3f getTransformedRotation() Declaration public Quaternion getTransformedRotation() Returns Type Description Quaternion getWidth() Declaration public static float getWidth() Returns Type Description float getzFar() Declaration public static float getzFar() Returns Type Description float getzNear() Declaration public static float getzNear() Returns Type Description float hasChanged() Declaration public boolean hasChanged() Returns Type Description boolean lookAt(Vector3f point, Vector3f up) Declaration public void lookAt(Vector3f point, Vector3f up) Parameters Type Name Description Vector3f point Vector3f up rotate(Vector3f axis, float anglerad) Declaration public void rotate(Vector3f axis, float anglerad) Parameters Type Name Description Vector3f axis float anglerad setFov(float fov) Declaration public static void setFov(float fov) Parameters Type Name Description float fov setHeight(float height) Declaration public static void setHeight(float height) Parameters Type Name Description float height setParent(Transform parent) Declaration public void setParent(Transform parent) Parameters Type Name Description Transform parent setPosition(Vector3f translation) Declaration public void setPosition(Vector3f translation) Parameters Type Name Description Vector3f translation setRotation(float x, float y, float z, float w) Declaration public void setRotation(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w setRotation(Quaternion rotation) Declaration public void setRotation(Quaternion rotation) Parameters Type Name Description Quaternion rotation setScale(float scale) Declaration public void setScale(float scale) Parameters Type Name Description float scale setScale(float x, float y, float z) Declaration public void setScale(float x, float y, float z) Parameters Type Name Description float x float y float z setScale(Vector3f scale) Declaration public void setScale(Vector3f scale) Parameters Type Name Description Vector3f scale setTranslation(float x, float y, float z) Declaration public Transform setTranslation(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Transform setTranslation(Vector3f trs) Declaration public Transform setTranslation(Vector3f trs) Parameters Type Name Description Vector3f trs Returns Type Description Transform setWidth(float width) Declaration public static void setWidth(float width) Parameters Type Name Description float width setzFar(float zFar) Declaration public static void setzFar(float zFar) Parameters Type Name Description float zFar setzNear(float zNear) Declaration public static void setzNear(float zNear) Parameters Type Name Description float zNear update() Declaration public void update()"
  },
  "api/net.abi.abis_engine.math._vector2f.html": {
    "href": "api/net.abi.abis_engine.math._vector2f.html",
    "title": "Class Vector2f",
    "keywords": "Class Vector2f Inheritance java.lang.Object Vector2f Namespace : Assembly : .dll Syntax public class Vector2f Constructors Vector2f(float x, float y) Declaration public Vector2f(float x, float y) Parameters Type Name Description float x float y Fields x Declaration protected float x Field Value Type Description float y Declaration protected float y Field Value Type Description float Methods abs() Declaration public Vector2f abs() Returns Type Description Vector2f add(float r) Declaration public Vector2f add(float r) Parameters Type Name Description float r Returns Type Description Vector2f add(Vector2f r) Declaration public Vector2f add(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description Vector2f angle(Vector2f v) Declaration public float angle(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description float ceil() Declaration public Vector2f ceil() Returns Type Description Vector2f ceil(Vector2f dest) Declaration public Vector2f ceil(Vector2f dest) Parameters Type Name Description Vector2f dest Returns Type Description Vector2f cross(Vector3f r) Declaration public float cross(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description float distance(float x, float y) Declaration public float distance(float x, float y) Parameters Type Name Description float x float y Returns Type Description float distance(float x1, float y1, float x2, float y2) Declaration public static float distance(float x1, float y1, float x2, float y2) Parameters Type Name Description float x1 float y1 float x2 float y2 Returns Type Description float distance(Vector2f v) Declaration public float distance(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description float distanceSquared(float x, float y) Declaration public float distanceSquared(float x, float y) Parameters Type Name Description float x float y Returns Type Description float distanceSquared(float x1, float y1, float x2, float y2) Declaration public static float distanceSquared(float x1, float y1, float x2, float y2) Parameters Type Name Description float x1 float y1 float x2 float y2 Returns Type Description float distanceSquared(Vector2f v) Declaration public float distanceSquared(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description float div(float r) Declaration public Vector2f div(float r) Parameters Type Name Description float r Returns Type Description Vector2f div(Vector2f r) Declaration public Vector2f div(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description Vector2f dot(Vector2f r) Declaration public float dot(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description float equals(Vector2f r) Declaration public boolean equals(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description boolean floor() Declaration public Vector2f floor() Returns Type Description Vector2f floor(Vector2f dest) Declaration public Vector2f floor(Vector2f dest) Parameters Type Name Description Vector2f dest Returns Type Description Vector2f fma(float a, Vector2f b) Declaration public Vector2f fma(float a, Vector2f b) Parameters Type Name Description float a Vector2f b Returns Type Description Vector2f fma(float a, Vector2f b, Vector2f dest) Declaration public Vector2f fma(float a, Vector2f b, Vector2f dest) Parameters Type Name Description float a Vector2f b Vector2f dest Returns Type Description Vector2f fma(Vector2f a, Vector2f b) Declaration public Vector2f fma(Vector2f a, Vector2f b) Parameters Type Name Description Vector2f a Vector2f b Returns Type Description Vector2f fma(Vector2f a, Vector2f b, Vector2f dest) Declaration public Vector2f fma(Vector2f a, Vector2f b, Vector2f dest) Parameters Type Name Description Vector2f a Vector2f b Vector2f dest Returns Type Description Vector2f hashCode() Declaration public int hashCode() Returns Type Description int isFinite() Declaration public boolean isFinite() Returns Type Description boolean length() Declaration public float length() Returns Type Description float lerp(Vector2f dest, float lerpFactor) Declaration public Vector2f lerp(Vector2f dest, float lerpFactor) Parameters Type Name Description Vector2f dest float lerpFactor Returns Type Description Vector2f max() Declaration public float max() Returns Type Description float max(Vector2f v) Declaration public Vector2f max(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Vector2f max(Vector2f v, Vector2f dest) Declaration public Vector2f max(Vector2f v, Vector2f dest) Parameters Type Name Description Vector2f v Vector2f dest Returns Type Description Vector2f maxComponent() Declaration public int maxComponent() Returns Type Description int min(Vector2f v) Declaration public Vector2f min(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Vector2f min(Vector2f v, Vector2f dest) Declaration public Vector2f min(Vector2f v, Vector2f dest) Parameters Type Name Description Vector2f v Vector2f dest Returns Type Description Vector2f minComponent() Declaration public int minComponent() Returns Type Description int mul(float r) Declaration public Vector2f mul(float r) Parameters Type Name Description float r Returns Type Description Vector2f mul(Vector2f r) Declaration public Vector2f mul(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description Vector2f negate() Declaration public Vector2f negate() Returns Type Description Vector2f negate(Vector2f dest) Declaration public Vector2f negate(Vector2f dest) Parameters Type Name Description Vector2f dest Returns Type Description Vector2f normalize() Declaration public Vector2f normalize() Returns Type Description Vector2f rotate(float angle) Declaration public Vector2f rotate(float angle) Parameters Type Name Description float angle Returns Type Description Vector2f round() Declaration public Vector2f round() Returns Type Description Vector2f round(Vector2f dest) Declaration public Vector2f round(Vector2f dest) Parameters Type Name Description Vector2f dest Returns Type Description Vector2f set(float x, float y) Declaration public Vector2f set(float x, float y) Parameters Type Name Description float x float y Returns Type Description Vector2f set(Vector2f other) Declaration public Vector2f set(Vector2f other) Parameters Type Name Description Vector2f other Returns Type Description Vector2f setX(float x) Declaration public void setX(float x) Parameters Type Name Description float x setY(float y) Declaration public void setY(float y) Parameters Type Name Description float y sub(float r) Declaration public Vector2f sub(float r) Parameters Type Name Description float r Returns Type Description Vector2f sub(Vector2f r) Declaration public Vector2f sub(Vector2f r) Parameters Type Name Description Vector2f r Returns Type Description Vector2f toString() Declaration public String toString() Returns Type Description String x() Declaration public float x() Returns Type Description float y() Declaration public float y() Returns Type Description float zero() Declaration public Vector2f zero() Returns Type Description Vector2f"
  },
  "api/net.abi.abis_engine.math._vector2i.html": {
    "href": "api/net.abi.abis_engine.math._vector2i.html",
    "title": "Class Vector2i",
    "keywords": "Class Vector2i Inheritance java.lang.Object Vector2i Namespace : Assembly : .dll Syntax public class Vector2i Constructors Vector2i() Create a new Vector2i and initialize its components to zero. Declaration public Vector2i() Vector2i(int s) Create a new Vector2i and initialize both of its components with the given value. Declaration public Vector2i(int s) Parameters Type Name Description int s the value of both components Vector2i(int x, int y) Create a new Vector2i and initialize its components to the given values. Declaration public Vector2i(int x, int y) Parameters Type Name Description int x the x component int y the y component Vector2i(Vector2i v) Create a new Vector2i and initialize its components to the one of the given vector. Declaration public Vector2i(Vector2i v) Parameters Type Name Description Vector2i v the Vector2ic to copy the values from Methods add(int x, int y) Declaration public Vector2i add(int x, int y) Parameters Type Name Description int x int y Returns Type Description Vector2i add(Vector2i v) Declaration public Vector2i add(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i equals(int x, int y) Declaration public boolean equals(int x, int y) Parameters Type Name Description int x int y Returns Type Description boolean equals(Object obj) Declaration public boolean equals(Object obj) Parameters Type Name Description Object obj Returns Type Description boolean length() Declaration public double length() Returns Type Description double length(int x, int y) Declaration public static double length(int x, int y) Parameters Type Name Description int x int y Returns Type Description double lengthSquared() Declaration public long lengthSquared() Returns Type Description long lengthSquared(int x, int y) Declaration public static long lengthSquared(int x, int y) Parameters Type Name Description int x int y Returns Type Description long max(Vector2i v) Declaration public Vector2i max(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i maxComponent() Declaration public int maxComponent() Returns Type Description int min(Vector2i v) Declaration public Vector2i min(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i minComponent() Declaration public int minComponent() Returns Type Description int mul(int scalar) Declaration public Vector2i mul(int scalar) Parameters Type Name Description int scalar Returns Type Description Vector2i mul(Vector2i v) Declaration public Vector2i mul(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i negate() Negate this vector. Declaration public Vector2i negate() Returns Type Description Vector2i a vector holding the result negate(Vector2i dest) Declaration public Vector2i negate(Vector2i dest) Parameters Type Name Description Vector2i dest Returns Type Description Vector2i set(int s) Set the x and y components to the supplied value. Declaration public Vector2i set(int s) Parameters Type Name Description int s scalar value of both components Returns Type Description Vector2i this set(int x, int y) Declaration public Vector2i set(int x, int y) Parameters Type Name Description int x int y Returns Type Description Vector2i set(Vector2i v) Declaration public Vector2i set(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i setX(int x) Declaration public void setX(int x) Parameters Type Name Description int x setY(int y) Declaration public void setY(int y) Parameters Type Name Description int y sub(int x, int y) Declaration public Vector2i sub(int x, int y) Parameters Type Name Description int x int y Returns Type Description Vector2i toString() Declaration public String toString() Returns Type Description String x() Declaration public int x() Returns Type Description int y() Declaration public int y() Returns Type Description int zero() Set all components to zero. Declaration public Vector2i zero() Returns Type Description Vector2i a vector holding the result"
  },
  "api/net.abi.abis_engine.math._vector3f.html": {
    "href": "api/net.abi.abis_engine.math._vector3f.html",
    "title": "Class Vector3f",
    "keywords": "Class Vector3f Inheritance java.lang.Object Vector3f Namespace : Assembly : .dll Syntax public class Vector3f Constructors Vector3f(float x, float y, float z) Declaration public Vector3f(float x, float y, float z) Parameters Type Name Description float x float y float z Methods abs() Declaration public Vector3f abs() Returns Type Description Vector3f absolute() Declaration public Vector3f absolute() Returns Type Description Vector3f absolute(Vector3f dest) Declaration public Vector3f absolute(Vector3f dest) Parameters Type Name Description Vector3f dest Returns Type Description Vector3f add(float r) Declaration public Vector3f add(float r) Parameters Type Name Description float r Returns Type Description Vector3f add(float xr, float yr, float zr) Declaration public Vector3f add(float xr, float yr, float zr) Parameters Type Name Description float xr float yr float zr Returns Type Description Vector3f add(Vector3f r) Declaration public Vector3f add(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Vector3f angle(Vector3f v) Declaration public float angle(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description float angleCos(Vector3f v) Declaration public float angleCos(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description float angleSigned(float x, float y, float z, float nx, float ny, float nz) Declaration public float angleSigned(float x, float y, float z, float nx, float ny, float nz) Parameters Type Name Description float x float y float z float nx float ny float nz Returns Type Description float angleSigned(Vector3f v, Vector3f n) Declaration public float angleSigned(Vector3f v, Vector3f n) Parameters Type Name Description Vector3f v Vector3f n Returns Type Description float ceil() Declaration public Vector3f ceil() Returns Type Description Vector3f ceil(Vector3f dest) Declaration public Vector3f ceil(Vector3f dest) Parameters Type Name Description Vector3f dest Returns Type Description Vector3f cross(Vector3f r) Declaration public Vector3f cross(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Vector3f distance(float x, float y, float z) Declaration public float distance(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description float distance(float x1, float y1, float z1, float x2, float y2, float z2) Declaration public static float distance(float x1, float y1, float z1, float x2, float y2, float z2) Parameters Type Name Description float x1 float y1 float z1 float x2 float y2 float z2 Returns Type Description float distance(Vector3f v) Declaration public float distance(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description float distanceSquared(float x, float y, float z) Declaration public float distanceSquared(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description float distanceSquared(float x1, float y1, float z1, float x2, float y2, float z2) Declaration public static float distanceSquared(float x1, float y1, float z1, float x2, float y2, float z2) Parameters Type Name Description float x1 float y1 float z1 float x2 float y2 float z2 Returns Type Description float distanceSquared(Vector3f v) Declaration public float distanceSquared(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description float div(float r) Declaration public Vector3f div(float r) Parameters Type Name Description float r Returns Type Description Vector3f div(Vector3f r) Declaration public Vector3f div(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Vector3f dot(float x, float y, float z) Declaration public float dot(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description float dot(Vector3f r) Declaration public float dot(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description float equals(Vector3f r) Declaration public boolean equals(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description boolean floor() Declaration public Vector3f floor() Returns Type Description Vector3f floor(Vector3f dest) Declaration public Vector3f floor(Vector3f dest) Parameters Type Name Description Vector3f dest Returns Type Description Vector3f get(int component) Declaration public float get(int component) Parameters Type Name Description int component Returns Type Description float getXY() Declaration public Vector2f getXY() Returns Type Description Vector2f getXZ() Declaration public Vector2f getXZ() Returns Type Description Vector2f getYX() Declaration public Vector2f getYX() Returns Type Description Vector2f getYZ() Declaration public Vector2f getYZ() Returns Type Description Vector2f getZX() Declaration public Vector2f getZX() Returns Type Description Vector2f getZY() Declaration public Vector2f getZY() Returns Type Description Vector2f half(float x, float y, float z) Declaration public Vector3f half(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Vector3f half(float x, float y, float z, Vector3f dest) Declaration public Vector3f half(float x, float y, float z, Vector3f dest) Parameters Type Name Description float x float y float z Vector3f dest Returns Type Description Vector3f half(Vector3f other) Declaration public Vector3f half(Vector3f other) Parameters Type Name Description Vector3f other Returns Type Description Vector3f half(Vector3f other, Vector3f dest) Declaration public Vector3f half(Vector3f other, Vector3f dest) Parameters Type Name Description Vector3f other Vector3f dest Returns Type Description Vector3f hashCode() Declaration public int hashCode() Returns Type Description int hermite(Vector3f t0, Vector3f v1, Vector3f t1, float t, Vector3f dest) Declaration public Vector3f hermite(Vector3f t0, Vector3f v1, Vector3f t1, float t, Vector3f dest) Parameters Type Name Description Vector3f t0 Vector3f v1 Vector3f t1 float t Vector3f dest Returns Type Description Vector3f isFinite() Declaration public boolean isFinite() Returns Type Description boolean length() Declaration public float length() Returns Type Description float lengthSquared() Declaration public float lengthSquared() Returns Type Description float lengthSquared(float x, float y, float z) Declaration public static float lengthSquared(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description float lerp(Vector3f dest, float lerpFactor) Declaration public Vector3f lerp(Vector3f dest, float lerpFactor) Parameters Type Name Description Vector3f dest float lerpFactor Returns Type Description Vector3f max() Declaration public float max() Returns Type Description float maxComponent() Declaration public int maxComponent() Returns Type Description int min(Vector3f v) Declaration public float min(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description float minComponent() Declaration public int minComponent() Returns Type Description int mul(float r) Declaration public Vector3f mul(float r) Parameters Type Name Description float r Returns Type Description Vector3f mul(Vector3f r) Declaration public Vector3f mul(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Vector3f negate() Declaration public Vector3f negate() Returns Type Description Vector3f negate(Vector3f dest) Declaration public Vector3f negate(Vector3f dest) Parameters Type Name Description Vector3f dest Returns Type Description Vector3f normalize() Declaration public Vector3f normalize() Returns Type Description Vector3f orthogonalize(Vector3f v) Declaration public Vector3f orthogonalize(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f orthogonalize(Vector3f v, Vector3f dest) Declaration public Vector3f orthogonalize(Vector3f v, Vector3f dest) Parameters Type Name Description Vector3f v Vector3f dest Returns Type Description Vector3f orthogonalizeUnit(Vector3f v) Declaration public Vector3f orthogonalizeUnit(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f orthogonalizeUnit(Vector3f v, Vector3f dest) Declaration public Vector3f orthogonalizeUnit(Vector3f v, Vector3f dest) Parameters Type Name Description Vector3f v Vector3f dest Returns Type Description Vector3f reflect(float x, float y, float z) Declaration public Vector3f reflect(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Vector3f reflect(float x, float y, float z, Vector3f dest) Declaration public Vector3f reflect(float x, float y, float z, Vector3f dest) Parameters Type Name Description float x float y float z Vector3f dest Returns Type Description Vector3f reflect(Vector3f normal) Declaration public Vector3f reflect(Vector3f normal) Parameters Type Name Description Vector3f normal Returns Type Description Vector3f reflect(Vector3f normal, Vector3f dest) Declaration public Vector3f reflect(Vector3f normal, Vector3f dest) Parameters Type Name Description Vector3f normal Vector3f dest Returns Type Description Vector3f rotate(float angleInDegrees, Vector3f axis) Declaration public Vector3f rotate(float angleInDegrees, Vector3f axis) Parameters Type Name Description float angleInDegrees Vector3f axis Returns Type Description Vector3f rotate(Quaternion rotation) Declaration public Vector3f rotate(Quaternion rotation) Parameters Type Name Description Quaternion rotation Returns Type Description Vector3f rotateAxis(float angle, float aX, float aY, float aZ, Vector3f dest) Declaration public Vector3f rotateAxis(float angle, float aX, float aY, float aZ, Vector3f dest) Parameters Type Name Description float angle float aX float aY float aZ Vector3f dest Returns Type Description Vector3f rotateAxis(float angle, float x, float y, float z) Declaration public Vector3f rotateAxis(float angle, float x, float y, float z) Parameters Type Name Description float angle float x float y float z Returns Type Description Vector3f rotateX(float angle) Declaration public Vector3f rotateX(float angle) Parameters Type Name Description float angle Returns Type Description Vector3f rotateX(float angle, Vector3f dest) Declaration public Vector3f rotateX(float angle, Vector3f dest) Parameters Type Name Description float angle Vector3f dest Returns Type Description Vector3f rotateY(float angle) Declaration public Vector3f rotateY(float angle) Parameters Type Name Description float angle Returns Type Description Vector3f rotateY(float angle, Vector3f dest) Declaration public Vector3f rotateY(float angle, Vector3f dest) Parameters Type Name Description float angle Vector3f dest Returns Type Description Vector3f rotateZ(float angle) Declaration public Vector3f rotateZ(float angle) Parameters Type Name Description float angle Returns Type Description Vector3f rotateZ(float angle, Vector3f dest) Declaration public Vector3f rotateZ(float angle, Vector3f dest) Parameters Type Name Description float angle Vector3f dest Returns Type Description Vector3f round() Declaration public Vector3f round() Returns Type Description Vector3f round(Vector3f dest) Declaration public Vector3f round(Vector3f dest) Parameters Type Name Description Vector3f dest Returns Type Description Vector3f set(float x, float y, float z) Declaration public Vector3f set(float x, float y, float z) Parameters Type Name Description float x float y float z Returns Type Description Vector3f set(Vector3f other) Declaration public Vector3f set(Vector3f other) Parameters Type Name Description Vector3f other Returns Type Description Vector3f setX(float x) Declaration public void setX(float x) Parameters Type Name Description float x setY(float y) Declaration public void setY(float y) Parameters Type Name Description float y setZ(float z) Declaration public void setZ(float z) Parameters Type Name Description float z smoothStep(Vector3f v, float t, Vector3f dest) Declaration public Vector3f smoothStep(Vector3f v, float t, Vector3f dest) Parameters Type Name Description Vector3f v float t Vector3f dest Returns Type Description Vector3f sub(float r) Declaration public Vector3f sub(float r) Parameters Type Name Description float r Returns Type Description Vector3f sub(Vector3f r) Declaration public Vector3f sub(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description Vector3f toString() Declaration public String toString() Returns Type Description String x() Declaration public float x() Returns Type Description float y() Declaration public float y() Returns Type Description float z() Declaration public float z() Returns Type Description float zero() Declaration public Vector3f zero() Returns Type Description Vector3f"
  },
  "api/net.abi.abis_engine.math._vector3i.html": {
    "href": "api/net.abi.abis_engine.math._vector3i.html",
    "title": "Class Vector3i",
    "keywords": "Class Vector3i Inheritance java.lang.Object Vector3i Namespace : Assembly : .dll Syntax public class Vector3i Constructors Vector3i(int x, int y, int z) Declaration public Vector3i(int x, int y, int z) Parameters Type Name Description int x int y int z Methods abs() Declaration public Vector3i abs() Returns Type Description Vector3i add(int r) Declaration public Vector3i add(int r) Parameters Type Name Description int r Returns Type Description Vector3i add(Vector3i r) Declaration public Vector3i add(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Vector3i cross(Vector3i r) Declaration public Vector3i cross(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Vector3i div(int r) Declaration public Vector3i div(int r) Parameters Type Name Description int r Returns Type Description Vector3i div(Vector3i r) Declaration public Vector3i div(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Vector3i dot(Vector3i r) Declaration public float dot(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description float equals(Vector3i r) Declaration public boolean equals(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description boolean getX() Declaration public int getX() Returns Type Description int getXY() Declaration public Vector2f getXY() Returns Type Description Vector2f getXZ() Declaration public Vector2f getXZ() Returns Type Description Vector2f getY() Declaration public int getY() Returns Type Description int getYX() Declaration public Vector2f getYX() Returns Type Description Vector2f getYZ() Declaration public Vector2f getYZ() Returns Type Description Vector2f getZ() Declaration public int getZ() Returns Type Description int getZX() Declaration public Vector2f getZX() Returns Type Description Vector2f getZY() Declaration public Vector2f getZY() Returns Type Description Vector2f length() Declaration public float length() Returns Type Description float max() Declaration public float max() Returns Type Description float mul(int r) Declaration public Vector3i mul(int r) Parameters Type Name Description int r Returns Type Description Vector3i mul(Vector3i r) Declaration public Vector3i mul(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Vector3i normalize() Declaration public Vector3i normalize() Returns Type Description Vector3i set(int x, int y, int z) Declaration public Vector3i set(int x, int y, int z) Parameters Type Name Description int x int y int z Returns Type Description Vector3i set(Vector3i other) Declaration public Vector3i set(Vector3i other) Parameters Type Name Description Vector3i other Returns Type Description Vector3i setX(int x) Declaration public void setX(int x) Parameters Type Name Description int x setY(int y) Declaration public void setY(int y) Parameters Type Name Description int y setZ(int z) Declaration public void setZ(int z) Parameters Type Name Description int z sub(int r) Declaration public Vector3i sub(int r) Parameters Type Name Description int r Returns Type Description Vector3i sub(Vector3i r) Declaration public Vector3i sub(Vector3i r) Parameters Type Name Description Vector3i r Returns Type Description Vector3i toString() Declaration public String toString() Returns Type Description String"
  },
  "api/net.abi.abis_engine.math._vector4f.html": {
    "href": "api/net.abi.abis_engine.math._vector4f.html",
    "title": "Class Vector4f",
    "keywords": "Class Vector4f Inheritance java.lang.Object Vector4fI Vector4f Namespace : Assembly : .dll Syntax public class Vector4f implements Vector4fI Constructors Vector4f(float x, float y, float z, float w) Declaration public Vector4f(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Methods abs() Declaration public Vector4f abs() Returns Type Description Vector4f Overrides Vector4fI.abs() add(float r) Declaration public Vector4f add(float r) Parameters Type Name Description float r Returns Type Description Vector4f Overrides Vector4fI.add(float r) add(Vector4f r) Declaration public Vector4f add(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f Overrides Vector4fI.add(Vector4f r) angle(Vector4f v) Declaration public float angle(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float Overrides Vector4fI.angle(Vector4f v) angleCos(Vector4f v) Declaration public float angleCos(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float Overrides Vector4fI.angleCos(Vector4f v) ceil() Declaration public Vector4f ceil() Returns Type Description Vector4f ceil(Vector4f dest) Declaration public Vector4f ceil(Vector4f dest) Parameters Type Name Description Vector4f dest Returns Type Description Vector4f distance(float x, float y, float z, float w) Declaration public float distance(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float Overrides Vector4fI.distance(float x, float y, float z, float w) distance(Vector4f v) Declaration public float distance(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float Overrides Vector4fI.distance(Vector4f v) distanceSquared(float x, float y, float z, float w) Declaration public float distanceSquared(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float Overrides Vector4fI.distanceSquared(float x, float y, float z, float w) distanceSquared(Vector4f v) Declaration public float distanceSquared(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float Overrides Vector4fI.distanceSquared(Vector4f v) div(float r) Declaration public Vector4f div(float r) Parameters Type Name Description float r Returns Type Description Vector4f Overrides Vector4fI.div(float r) div(Vector4f r) Declaration public Vector4f div(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f Overrides Vector4fI.div(Vector4f r) dot(float x, float y, float z, float w) Declaration public float dot(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float Overrides Vector4fI.dot(float x, float y, float z, float w) dot(Vector4f r) Declaration public float dot(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description float Overrides Vector4fI.dot(Vector4f r) equals(Vector3f r) Declaration public boolean equals(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description boolean Overrides Vector4fI.equals(Vector3f r) floor() Declaration public Vector4f floor() Returns Type Description Vector4f floor(Vector4f dest) Declaration public Vector4f floor(Vector4f dest) Parameters Type Name Description Vector4f dest Returns Type Description Vector4f get(int component) Declaration public float get(int component) Parameters Type Name Description int component Returns Type Description float hashCode() Declaration public int hashCode() Returns Type Description int hermite(Vector4f t0, Vector4f v1, Vector4f t1, float t) Declaration public Vector4f hermite(Vector4f t0, Vector4f v1, Vector4f t1, float t) Parameters Type Name Description Vector4f t0 Vector4f v1 Vector4f t1 float t Returns Type Description Vector4f Overrides Vector4fI.hermite(Vector4f t0, Vector4f v1, Vector4f t1, float t) isFinite() Declaration public boolean isFinite() Returns Type Description boolean length3f() Declaration public float length3f() Returns Type Description float Overrides Vector4fI.length3f() length4f() Declaration public float length4f() Returns Type Description float Overrides Vector4fI.length4f() lerp(Vector4f dest, float lerpFactor) Declaration public Vector4f lerp(Vector4f dest, float lerpFactor) Parameters Type Name Description Vector4f dest float lerpFactor Returns Type Description Vector4f Overrides Vector4fI.lerp(Vector4f dest, float lerpFactor) max() Declaration public float max() Returns Type Description float Overrides Vector4fI.max() maxComponent() Declaration public int maxComponent() Returns Type Description int min() Declaration public float min() Returns Type Description float Overrides Vector4fI.min() minComponent() Declaration public int minComponent() Returns Type Description int mul(float r) Declaration public Vector4f mul(float r) Parameters Type Name Description float r Returns Type Description Vector4f Overrides Vector4fI.mul(float r) mul(Vector4f r) Declaration public Vector4f mul(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f Overrides Vector4fI.mul(Vector4f r) negate() Declaration public Vector4f negate() Returns Type Description Vector4f Overrides Vector4fI.negate() negate(Vector4f dest) Declaration public Vector4f negate(Vector4f dest) Parameters Type Name Description Vector4f dest Returns Type Description Vector4f Overrides Vector4fI.negate(Vector4f dest) normalize3f() Declaration public Vector3f normalize3f() Returns Type Description Vector3f Overrides Vector4fI.normalize3f() normalize4f() Declaration public Vector4f normalize4f() Returns Type Description Vector4f Overrides Vector4fI.normalize4f() rotateAxisInternal(float angle, float aX, float aY, float aZ) Declaration public Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ) Parameters Type Name Description float angle float aX float aY float aZ Returns Type Description Vector4f Overrides Vector4fI.rotateAxisInternal(float angle, float aX, float aY, float aZ) rotateAxisInternal(float angle, float aX, float aY, float aZ, Vector4f dest) Declaration public Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ, Vector4f dest) Parameters Type Name Description float angle float aX float aY float aZ Vector4f dest Returns Type Description Vector4f Overrides Vector4fI.rotateAxisInternal(float angle, float aX, float aY, float aZ, Vector4f dest) rotateX(float angle, Vector4f dest) Declaration public Vector4f rotateX(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f Overrides Vector4fI.rotateX(float angle, Vector4f dest) rotateY(float angle) Declaration public Vector4f rotateY(float angle) Parameters Type Name Description float angle Returns Type Description Vector4f Overrides Vector4fI.rotateY(float angle) rotateY(float angle, Vector4f dest) Declaration public Vector4f rotateY(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f Overrides Vector4fI.rotateY(float angle, Vector4f dest) rotateZ(float angle) Declaration public Vector4f rotateZ(float angle) Parameters Type Name Description float angle Returns Type Description Vector4f Overrides Vector4fI.rotateZ(float angle) rotateZ(float angle, Vector4f dest) Declaration public Vector4f rotateZ(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f Overrides Vector4fI.rotateZ(float angle, Vector4f dest) round() Declaration public Vector4f round() Returns Type Description Vector4f round(Vector4f dest) Declaration public Vector4f round(Vector4f dest) Parameters Type Name Description Vector4f dest Returns Type Description Vector4f set(float x, float y, float z, float w) Declaration public Vector4f set(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description Vector4f Overrides Vector4fI.set(float x, float y, float z, float w) set(Vector4f v) Declaration public Vector4f set(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description Vector4f Overrides Vector4fI.set(Vector4f v) setW(float w) Declaration public void setW(float w) Parameters Type Name Description float w Overrides Vector4fI.setW(float w) setX(float x) Declaration public void setX(float x) Parameters Type Name Description float x Overrides Vector4fI.setX(float x) setY(float y) Declaration public void setY(float y) Parameters Type Name Description float y Overrides Vector4fI.setY(float y) setZ(float z) Declaration public void setZ(float z) Parameters Type Name Description float z Overrides Vector4fI.setZ(float z) smoothStep(Vector4f v, float t) Declaration public Vector4f smoothStep(Vector4f v, float t) Parameters Type Name Description Vector4f v float t Returns Type Description Vector4f Overrides Vector4fI.smoothStep(Vector4f v, float t) sub(float r) Declaration public Vector4f sub(float r) Parameters Type Name Description float r Returns Type Description Vector4f Overrides Vector4fI.sub(float r) sub(Vector4f r) Declaration public Vector4f sub(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f Overrides Vector4fI.sub(Vector4f r) toString() Declaration public String toString() Returns Type Description String Overrides Vector4fI.toString() w() Declaration public float w() Returns Type Description float Overrides Vector4fI.w() x() Declaration public float x() Returns Type Description float Overrides Vector4fI.x() xy() Declaration public Vector2f xy() Returns Type Description Vector2f Overrides Vector4fI.xy() xz() Declaration public Vector2f xz() Returns Type Description Vector2f Overrides Vector4fI.xz() y() Declaration public float y() Returns Type Description float Overrides Vector4fI.y() yx() Declaration public Vector2f yx() Returns Type Description Vector2f Overrides Vector4fI.yx() yz() Declaration public Vector2f yz() Returns Type Description Vector2f Overrides Vector4fI.yz() z() Declaration public float z() Returns Type Description float Overrides Vector4fI.z() zero() Declaration public Vector4f zero() Returns Type Description Vector4f Overrides Vector4fI.zero() zx() Declaration public Vector2f zx() Returns Type Description Vector2f Overrides Vector4fI.zx() zy() Declaration public Vector2f zy() Returns Type Description Vector2f Overrides Vector4fI.zy()"
  },
  "api/net.abi.abis_engine.math._vector4f_i.html": {
    "href": "api/net.abi.abis_engine.math._vector4f_i.html",
    "title": "Interface Vector4fI",
    "keywords": "Interface Vector4fI Namespace : Assembly : .dll Syntax public interface Vector4fI Methods abs() Declaration public Vector4f abs() Returns Type Description Vector4f add(float r) Declaration public Vector4f add(float r) Parameters Type Name Description float r Returns Type Description Vector4f add(Vector4f r) Declaration public Vector4f add(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f angle(Vector4f v) Declaration public float angle(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float angleCos(Vector4f v) Declaration public float angleCos(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float distance(float x, float y, float z, float w) Declaration public float distance(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float distance(Vector4f v) Declaration public float distance(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float distanceSquared(float x, float y, float z, float w) Declaration public float distanceSquared(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float distanceSquared(Vector4f v) Declaration public float distanceSquared(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description float div(float r) Declaration public Vector4f div(float r) Parameters Type Name Description float r Returns Type Description Vector4f div(Vector4f r) Declaration public Vector4f div(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f dot(float x, float y, float z, float w) Declaration public float dot(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description float dot(Vector4f r) Declaration public float dot(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description float equals(Vector3f r) Declaration public boolean equals(Vector3f r) Parameters Type Name Description Vector3f r Returns Type Description boolean hermite(Vector4f t0, Vector4f v1, Vector4f t1, float t) Declaration public Vector4f hermite(Vector4f t0, Vector4f v1, Vector4f t1, float t) Parameters Type Name Description Vector4f t0 Vector4f v1 Vector4f t1 float t Returns Type Description Vector4f length3f() Declaration public float length3f() Returns Type Description float length4f() Declaration public float length4f() Returns Type Description float lerp(Vector4f dest, float lerpFactor) Declaration public Vector4f lerp(Vector4f dest, float lerpFactor) Parameters Type Name Description Vector4f dest float lerpFactor Returns Type Description Vector4f max() Declaration public float max() Returns Type Description float min() Declaration public float min() Returns Type Description float mul(float r) Declaration public Vector4f mul(float r) Parameters Type Name Description float r Returns Type Description Vector4f mul(Vector4f r) Declaration public Vector4f mul(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f negate() Declaration public Vector4f negate() Returns Type Description Vector4f negate(Vector4f dest) Declaration public Vector4f negate(Vector4f dest) Parameters Type Name Description Vector4f dest Returns Type Description Vector4f normalize3f() Declaration public Vector3f normalize3f() Returns Type Description Vector3f normalize4f() Declaration public Vector4f normalize4f() Returns Type Description Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ) Declaration public Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ) Parameters Type Name Description float angle float aX float aY float aZ Returns Type Description Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ, Vector4f dest) Declaration public Vector4f rotateAxisInternal(float angle, float aX, float aY, float aZ, Vector4f dest) Parameters Type Name Description float angle float aX float aY float aZ Vector4f dest Returns Type Description Vector4f rotateX(float angle, Vector4f dest) Declaration public Vector4f rotateX(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f rotateY(float angle) Declaration public Vector4f rotateY(float angle) Parameters Type Name Description float angle Returns Type Description Vector4f rotateY(float angle, Vector4f dest) Declaration public Vector4f rotateY(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f rotateZ(float angle) Declaration public Vector4f rotateZ(float angle) Parameters Type Name Description float angle Returns Type Description Vector4f rotateZ(float angle, Vector4f dest) Declaration public Vector4f rotateZ(float angle, Vector4f dest) Parameters Type Name Description float angle Vector4f dest Returns Type Description Vector4f set(float x, float y, float z, float w) Declaration public Vector4f set(float x, float y, float z, float w) Parameters Type Name Description float x float y float z float w Returns Type Description Vector4f set(Vector4f v) Declaration public Vector4f set(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description Vector4f setW(float w) Declaration public void setW(float w) Parameters Type Name Description float w setX(float x) Declaration public void setX(float x) Parameters Type Name Description float x setY(float y) Declaration public void setY(float y) Parameters Type Name Description float y setZ(float z) Declaration public void setZ(float z) Parameters Type Name Description float z smoothStep(Vector4f v, float t) Declaration public Vector4f smoothStep(Vector4f v, float t) Parameters Type Name Description Vector4f v float t Returns Type Description Vector4f sub(float r) Declaration public Vector4f sub(float r) Parameters Type Name Description float r Returns Type Description Vector4f sub(Vector4f r) Declaration public Vector4f sub(Vector4f r) Parameters Type Name Description Vector4f r Returns Type Description Vector4f toString() Declaration public String toString() Returns Type Description String w() Declaration public float w() Returns Type Description float x() Declaration public float x() Returns Type Description float xy() Declaration public Vector2f xy() Returns Type Description Vector2f xz() Declaration public Vector2f xz() Returns Type Description Vector2f y() Declaration public float y() Returns Type Description float yx() Declaration public Vector2f yx() Returns Type Description Vector2f yz() Declaration public Vector2f yz() Returns Type Description Vector2f z() Declaration public float z() Returns Type Description float zero() Declaration public Vector4f zero() Returns Type Description Vector4f zx() Declaration public Vector2f zx() Returns Type Description Vector2f zy() Declaration public Vector2f zy() Returns Type Description Vector2f"
  },
  "api/net.abi.abis_engine.math.html": {
    "href": "api/net.abi.abis_engine.math.html",
    "title": "Namespace net.abi.abisEngine.math",
    "keywords": "Namespace net.abi.abisEngine.math Classes Math Matrix4f Quaternion Transform Vector2f Vector2i Vector3f Vector3i Vector4f Interfaces Matrix Vector4fI"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_classifier.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_classifier.html",
    "title": "Class AssetClassifier<T>",
    "keywords": "Class AssetClassifier<T> Inheritance java.lang.Object AssetClassifier<T> Namespace : Assembly : .dll Syntax public class AssetClassifier<T> Type Parameters Name Description net_abi_abis_engine_rendering_asset__asset_classifier Constructors AssetClassifier(String fileName, Class<T> type) Declaration public AssetClassifier(String fileName, Class<T> type) Parameters Type Name Description String fileName Class<T> type AssetClassifier(String fileName, Class<T> type, AssetLoaderParameters<T> parameter) Declaration public AssetClassifier(String fileName, Class<T> type, AssetLoaderParameters<T> parameter) Parameters Type Name Description String fileName Class<T> type AssetLoaderParameters <T> parameter Methods getFileLocation() Declaration public String getFileLocation() Returns Type Description String getFileName() Declaration public String getFileName() Returns Type Description String getParameter() Declaration public AssetLoaderParameters<T> getParameter() Returns Type Description AssetLoaderParameters <T> getType() Declaration public Class<T> getType() Returns Type Description Class<T> setParameter(AssetLoaderParameters<T> parameter) Declaration public void setParameter(AssetLoaderParameters<T> parameter) Parameters Type Name Description AssetLoaderParameters <T> parameter"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_container.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_container.html",
    "title": "Class AssetContainer",
    "keywords": "Class AssetContainer Inheritance java.lang.Object Expendable AssetI AssetContainer Namespace : Assembly : .dll Syntax public class AssetContainer implements AssetI Constructors AssetContainer(Object object) Declaration public AssetContainer(Object object) Parameters Type Name Description Object object Methods decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() getObject(Class<T> type) Declaration public <T> T getObject(Class<T> type) Parameters Type Name Description Class<T> type Returns Type Description <T> T getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() setObject(Object asset) Declaration public void setObject(Object asset) Parameters Type Name Description Object asset setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_i.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_i.html",
    "title": "Interface AssetI",
    "keywords": "Interface AssetI Inherited Members Expendable.dispose() Namespace : Assembly : .dll Syntax public interface AssetI extends Expendable Methods decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int decRef() Decrements the asset's reference count by one. Declaration public void decRef() getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int incRef() Increments the asset's reference count by one. Declaration public void incRef()"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_load_task.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_load_task.html",
    "title": "Class AssetLoadTask",
    "keywords": "Class AssetLoadTask Inheritance java.lang.Object AsyncTask<T> AssetLoadTask Namespace : Assembly : .dll Syntax public class AssetLoadTask implements AsyncTask<Void> Constructors AssetLoadTask(AssetManager manager, AssetClassifier assetDesc, AssetLoader loader, AsyncThreadDispatcher threadPool) Declaration public AssetLoadTask(AssetManager manager, AssetClassifier assetDesc, AssetLoader loader, AsyncThreadDispatcher threadPool) Parameters Type Name Description AssetManager manager AssetClassifier<T> assetDesc AssetLoader<T,P> loader AsyncThreadDispatcher threadPool Methods call() Declaration public Void call() Overrides AsyncTask<T>.call() getAsset() Declaration public Object getAsset() Returns Type Description Object update() Declaration public boolean update() Returns Type Description boolean"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_loader_parameters._loaded_callback.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_loader_parameters._loaded_callback.html",
    "title": "Interface AssetLoaderParameters.LoadedCallback",
    "keywords": "Interface AssetLoaderParameters.LoadedCallback Namespace : Assembly : .dll Syntax public interface LoadedCallback Methods finishedLoading(AssetManager assetManager, String fileName, AssetContainer container) Declaration public void finishedLoading(AssetManager assetManager, String fileName, AssetContainer container) Parameters Type Name Description AssetManager assetManager String fileName AssetContainer container"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_loader_parameters.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_loader_parameters.html",
    "title": "Class AssetLoaderParameters<T>",
    "keywords": "Class AssetLoaderParameters<T> Inheritance java.lang.Object AssetLoaderParameters<T> Namespace : Assembly : .dll Syntax public class AssetLoaderParameters<T> Type Parameters Name Description net_abi_abis_engine_rendering_asset__asset_loader_parameters Fields loadedCallback Declaration public LoadedCallback loadedCallback Field Value Type Description AssetLoaderParameters.LoadedCallback"
  },
  "api/net.abi.abis_engine.rendering.asset._asset_manager.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_manager.html",
    "title": "Class AssetManager",
    "keywords": "Class AssetManager Inheritance java.lang.Object Expendable AssetManager Namespace : Assembly : .dll Syntax public class AssetManager implements Expendable Constructors AssetManager(long context) Creates a new AssetManager with all default loaders. Declaration public AssetManager(long context) Parameters Type Name Description long context AssetManager(String assetsDir, boolean defaultLoaders) Creates a new AssetManager with optionally all default loaders. If you don't add the default loaders then you do have to manually add the loaders you need, including any loaders they might depend on. Declaration public AssetManager(String assetsDir, boolean defaultLoaders) Parameters Type Name Description String assetsDir boolean defaultLoaders whether to add the default loaders Methods addAsset(final String fileName, Class<T> type, T asset) Adds an asset to this AssetManager Declaration protected <T> AssetContainer addAsset(final String fileName, Class<T> type, T asset) Parameters Type Name Description final String fileName Class<T> type T asset Returns Type Description <T> AssetContainer clear() Clears and disposes all assets and the preloading queue. Declaration public synchronized void clear() Returns Type Description synchronized void contains(String fileName) Returns true if an asset with the specified name is loading, queued to be loaded, or has been loaded. Declaration public synchronized boolean contains(String fileName) Parameters Type Name Description String fileName Returns Type Description synchronized boolean contains(String fileName, Class type) Returns true if an asset with the specified name and type is loading, queued to be loaded, or has been loaded. Declaration public synchronized boolean contains(String fileName, Class type) Parameters Type Name Description String fileName Class type Returns Type Description synchronized boolean containsAsset(String name) Declaration public synchronized<T> boolean containsAsset(String name) Parameters Type Name Description String name Returns Type Description synchronized<T> boolean whether the asset is contained in this manager dispose() Disposes all assets in the manager and stops all asynchronous loading. Declaration public synchronized void dispose() Returns Type Description synchronized void Overrides Expendable.dispose() finishLoading() Blocks until all assets are loaded. Declaration public void finishLoading() finishLoadingAsset(AssetClassifier assetDesc) Blocks until the specified asset is loaded. Declaration public <T> T finishLoadingAsset(AssetClassifier assetDesc) Parameters Type Name Description AssetClassifier<T> assetDesc the AssetClassifier of the asset Returns Type Description <T> T finishLoadingAsset(String fileName) Blocks until the specified asset is loaded. Declaration public synchronized<T> T finishLoadingAsset(String fileName) Parameters Type Name Description String fileName the file name (interpretation depends on AssetLoader ) Returns Type Description synchronized<T> T get(AssetClassifier<T> assetDescriptor) Declaration public synchronized<T> T get(AssetClassifier<T> assetDescriptor) Parameters Type Name Description AssetClassifier <T> assetDescriptor the asset descriptor Returns Type Description synchronized<T> T the asset get(String fileName) Declaration public synchronized<T> T get(String fileName) Parameters Type Name Description String fileName the asset file name Returns Type Description synchronized<T> T the asset get(String fileName, Class<T> type) Declaration public synchronized<T> T get(String fileName, Class<T> type) Parameters Type Name Description String fileName the asset file name Class<T> type the asset type Returns Type Description synchronized<T> T the asset getAll(Class<T> type) Declaration public synchronized<T> ArrayList<T> getAll(Class<T> type) Parameters Type Name Description Class<T> type the asset type Returns Type Description synchronized<T> ArrayList<T> all the assets matching the specified type getAssetsDir() Declaration public String getAssetsDir() Returns Type Description String getGlfw_handle() Declaration public long getGlfw_handle() Returns Type Description long getLoadedAssets() Declaration public synchronized int getLoadedAssets() Returns Type Description synchronized int the number of loaded assets getLoader(final Class<T> type) Returns the default loader for the given type Declaration public <T> AssetLoader getLoader(final Class<T> type) Parameters Type Name Description final Class<T> type The type of the loader to get Returns Type Description <T> AssetLoader The loader capable of loading the type, or null if none exists getLoader(final Class<T> type, final String fileName) Returns the loader for the given type and the specified filename. If no loader exists for the specific filename, the default loader for that type is returned. Declaration public <T> AssetLoader getLoader(final Class<T> type, final String fileName) Parameters Type Name Description final Class<T> type The type of the loader to get final String fileName The filename of the asset to get a loader for, or null to get the default loader Returns Type Description <T> AssetLoader The loader capable of loading the type and filename, or null if none exists getProgress() Declaration public synchronized float getProgress() Returns Type Description synchronized float the progress in percent of completion. getQueuedAssets() Declaration public synchronized int getQueuedAssets() Returns Type Description synchronized int the number of currently queued assets getReferenceCount(String fileName) Returns the reference count of an asset. Declaration public synchronized int getReferenceCount(String fileName) Parameters Type Name Description String fileName Returns Type Description synchronized int isFinished() Returns true when all assets are loaded. Can be called from any thread but note update() or related methods must be called to process tasks. Declaration public synchronized boolean isFinished() Returns Type Description synchronized boolean isLoaded(AssetClassifier assetDesc) Declaration public synchronized boolean isLoaded(AssetClassifier assetDesc) Parameters Type Name Description AssetClassifier<T> assetDesc the AssetClassifier of the asset Returns Type Description synchronized boolean the filename of the asset or null isLoaded(String fileName) Declaration public synchronized boolean isLoaded(String fileName) Parameters Type Name Description String fileName the file name of the asset Returns Type Description synchronized boolean whether the asset is loaded isLoaded(String fileName, Class type) Declaration public synchronized boolean isLoaded(String fileName, Class type) Parameters Type Name Description String fileName the file name of the asset Class type Returns Type Description synchronized boolean whether the asset is loaded load(AssetClassifier desc) Adds the given asset to the loading queue of the AssetManager . Declaration public synchronized void load(AssetClassifier desc) Parameters Type Name Description AssetClassifier<T> desc the AssetClassifier Returns Type Description synchronized void load(String fileName, Class<T> type) Adds the given asset to the loading queue of the AssetManager . Declaration public synchronized<T> void load(String fileName, Class<T> type) Parameters Type Name Description String fileName the file name (interpretation depends on AssetLoader ) Class<T> type the type of the asset. Returns Type Description synchronized<T> void load(String fileName, Class<T> type, AssetLoaderParameters<T> parameter) Adds the given asset to the loading queue of the AssetManager . Declaration public synchronized<T> void load(String fileName, Class<T> type, AssetLoaderParameters<T> parameter) Parameters Type Name Description String fileName the file name (interpretation depends on AssetLoader ) Class<T> type the type of the asset. AssetLoaderParameters <T> parameter parameters for the AssetLoader. Returns Type Description synchronized<T> void setLoader(Class<T> type, AssetLoader<T, P> loader) Sets a new AssetLoader for the given type. Declaration public synchronized<T, P extends AssetLoaderParameters<T>> void setLoader(Class<T> type, AssetLoader<T, P> loader) Parameters Type Name Description Class<T> type the type of the asset AssetLoader <T, P> loader the loader Returns Type Description synchronized<T, P extends AssetLoaderParameters <T>> void setLoader(Class<T> type, String suffix, AssetLoader<T, P> loader) Sets a new AssetLoader for the given type. Declaration public synchronized<T, P extends AssetLoaderParameters<T>> void setLoader(Class<T> type, String suffix, AssetLoader<T, P> loader) Parameters Type Name Description Class<T> type the type of the asset String suffix the suffix the filename must have for this loader to be used or null to specify the default loader. AssetLoader <T, P> loader the loader Returns Type Description synchronized<T, P extends AssetLoaderParameters <T>> void taskFailed(AssetClassifier assetDesc, RuntimeException ex) Called when a task throws an exception during loading. The default implementation rethrows the exception. A subclass may supress the default implementation when loading assets where loading failure is recoverable. Declaration protected void taskFailed(AssetClassifier assetDesc, RuntimeException ex) Parameters Type Name Description AssetClassifier<T> assetDesc RuntimeException ex unload(String fileName) Removes the asset and all its dependencies, if they are not used by other assets. Declaration public synchronized void unload(String fileName) Parameters Type Name Description String fileName the file name Returns Type Description synchronized void update() Updates the AssetManager for a single task. Returns if the current task is still being processed or there are no tasks, otherwise it finishes the current task and starts the next task. Declaration public synchronized boolean update() Returns Type Description synchronized boolean true if all loading is finished."
  },
  "api/net.abi.abis_engine.rendering.asset._asset_store.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._asset_store.html",
    "title": "Class AssetStore",
    "keywords": "Class AssetStore Inheritance java.lang.Object AssetStore Namespace : Assembly : .dll Syntax public class AssetStore Constructors AssetStore() Declaration public AssetStore() Fields assets The type of asset mapped to the list of suffix' mapped to their associate reference counted containers. Declaration public Map<Class, HashMap<String, AssetContainer>> assets Field Value Type Description Map<Class, HashMap<String, AssetContainer >> assetTypes Declaration public HashMap<String, Class> assetTypes Field Value Type Description HashMap<String, Class> Methods addAsset(Class type, String name, T asset) This adds the asset to the static list. It also protects from duplicates since there can be only one type. And when loading ModelScenes There can be many assets there. Declaration public synchronized<T> void addAsset(Class type, String name, T asset) Parameters Type Name Description Class type String name T asset Returns Type Description synchronized<T> void contains(Class type, String assetName) Declaration public boolean contains(Class type, String assetName) Parameters Type Name Description Class type String assetName Returns Type Description boolean contains(String assetName) Declaration public synchronized boolean contains(String assetName) Parameters Type Name Description String assetName Returns Type Description synchronized boolean get(Class type) Declaration public synchronized HashMap<String, AssetContainer> get(Class type) Parameters Type Name Description Class type Returns Type Description synchronized HashMap<String, AssetContainer > get(Class<T> type, String assetName) Gets the asset from the store using the name, either the file's name or the asset name defined in the file. i.e. Model uses the ModelSceneLoader wich loads all assets from the file which there can be multiple of. So the loader assigns the names as keys to find them. Declaration public synchronized<T> T get(Class<T> type, String assetName) Parameters Type Name Description Class<T> type String assetName Returns Type Description synchronized<T> T get(String fileName) Declaration public synchronized<T> T get(String fileName) Parameters Type Name Description String fileName Returns Type Description synchronized<T> T getAll(Class<T> type) Declaration public synchronized<T> ArrayList<T> getAll(Class<T> type) Parameters Type Name Description Class<T> type Returns Type Description synchronized<T> ArrayList<T> getAssetTypes() Declaration public HashMap<String, Class> getAssetTypes() Returns Type Description HashMap<String, Class> getContainer(Class<T> type, String assetName) Declaration public <T> AssetContainer getContainer(Class<T> type, String assetName) Parameters Type Name Description Class<T> type String assetName Returns Type Description <T> AssetContainer getType(String fileName) Declaration public synchronized<T> Class<T> getType(String fileName) Parameters Type Name Description String fileName Returns Type Description synchronized<T> Class<T> removeAsset(Class type, String assetName) Declaration public synchronized<T> void removeAsset(Class type, String assetName) Parameters Type Name Description Class type String assetName Returns Type Description synchronized<T> void removeAsset(String assetName) Declaration public synchronized<T> void removeAsset(String assetName) Parameters Type Name Description String assetName Returns Type Description synchronized<T> void"
  },
  "api/net.abi.abis_engine.rendering.asset._task_complete_handler.html": {
    "href": "api/net.abi.abis_engine.rendering.asset._task_complete_handler.html",
    "title": "Class TaskCompleteHandler",
    "keywords": "Class TaskCompleteHandler Inheritance java.lang.Object TaskCompleteHandler Namespace : Assembly : .dll Syntax public class TaskCompleteHandler"
  },
  "api/net.abi.abis_engine.rendering.asset.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.html",
    "title": "Namespace net.abi.abisEngine.rendering.asset",
    "keywords": "Namespace net.abi.abisEngine.rendering.asset Classes AssetClassifier<T> AssetContainer AssetLoadTask AssetLoaderParameters<T> AssetManager AssetStore TaskCompleteHandler Interfaces AssetI AssetLoaderParameters.LoadedCallback"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders._asset_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders._asset_loader.html",
    "title": "Class AssetLoader<T,P>",
    "keywords": "Class AssetLoader<T,P> Inheritance java.lang.Object AssetLoader<T,P> Namespace : Assembly : .dll Syntax public class AssetLoader<T,P extends AssetLoaderParameters<T>> Type Parameters Name Description net_abi_abis_engine_rendering_asset_loaders__asset_loader The type of asset this loads. net_abi_abis_engine_rendering_asset_loaders__asset_loader Constructors AssetLoader(String assetsDir) Declaration public AssetLoader(String assetsDir) Parameters Type Name Description String assetsDir Methods resolve(String fileName) Declaration public String resolve(String fileName) Parameters Type Name Description String fileName Returns Type Description String"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders._async_asset_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders._async_asset_loader.html",
    "title": "Class AsyncAssetLoader<T,P>",
    "keywords": "Class AsyncAssetLoader<T,P> Inheritance java.lang.Object AssetLoader<T,P> AsyncAssetLoader<T,P> Inherited Members AssetLoader<T,P>.AssetLoader(String assetsDir) AssetLoader<T,P>.resolve(String fileName) Namespace : Assembly : .dll Syntax public class AsyncAssetLoader<T,P extends AssetLoaderParameters<T>> extends AssetLoader<T, P> Type Parameters Name Description net_abi_abis_engine_rendering_asset_loaders__async_asset_loader net_abi_abis_engine_rendering_asset_loaders__async_asset_loader Constructors AsyncAssetLoader(String assetsDir) Declaration public AsyncAssetLoader(String assetsDir) Parameters Type Name Description String assetsDir Methods loadAsync(String fileName, AssetManager manager) Declaration public abstract void loadAsync(String fileName, AssetManager manager) Parameters Type Name Description String fileName AssetManager manager Returns Type Description abstract void loadSync(String fileName, AssetManager manager) Declaration public abstract T loadSync(String fileName, AssetManager manager) Parameters Type Name Description String fileName AssetManager manager Returns Type Description abstract T"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders._model_scene_loader._parameter.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders._model_scene_loader._parameter.html",
    "title": "Class ModelSceneLoader.Parameter",
    "keywords": "Class ModelSceneLoader.Parameter Inheritance java.lang.Object ModelSceneLoader.Parameter Inherited Members AssetLoaderParameters<T>.loadedCallback Namespace : Assembly : .dll Syntax public class Parameter extends AssetLoaderParameters<ModelScene>"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders._model_scene_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders._model_scene_loader.html",
    "title": "Class ModelSceneLoader",
    "keywords": "Class ModelSceneLoader Inheritance java.lang.Object AsyncAssetLoader<T,P> ModelSceneLoader Inherited Members AsyncAssetLoader<T,P>.AsyncAssetLoader(String assetsDir) Namespace : Assembly : .dll Syntax public class ModelSceneLoader extends AsyncAssetLoader<ModelScene, ModelSceneLoader.Parameter> Constructors ModelSceneLoader(String assetsDir) Declaration public ModelSceneLoader(String assetsDir) Parameters Type Name Description String assetsDir Methods loadAsync(String fileName, AssetManager manager) Declaration public void loadAsync(String fileName, AssetManager manager) Parameters Type Name Description String fileName AssetManager manager loadSync(String fileName, AssetManager manager) Declaration public ModelScene loadSync(String fileName, AssetManager manager) Parameters Type Name Description String fileName AssetManager manager Returns Type Description ModelScene"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders._sync_asset_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders._sync_asset_loader.html",
    "title": "Class SyncAssetLoader<T,P>",
    "keywords": "Class SyncAssetLoader<T,P> Inheritance java.lang.Object AssetLoader<T,P> SyncAssetLoader<T,P> Inherited Members AssetLoader<T,P>.AssetLoader(String assetsDir) AssetLoader<T,P>.resolve(String fileName) Namespace : Assembly : .dll Syntax public class SyncAssetLoader<T,P extends AssetLoaderParameters<T>> extends AssetLoader<T, P> Type Parameters Name Description net_abi_abis_engine_rendering_asset_loaders__sync_asset_loader net_abi_abis_engine_rendering_asset_loaders__sync_asset_loader Constructors SyncAssetLoader(String assetsDir) Declaration public SyncAssetLoader(String assetsDir) Parameters Type Name Description String assetsDir Methods loadSync(String fileName, AssetManager manager) Declaration public abstract T loadSync(String fileName, AssetManager manager) Parameters Type Name Description String fileName AssetManager manager Returns Type Description abstract T"
  },
  "api/net.abi.abis_engine.rendering.asset.loaders.html": {
    "href": "api/net.abi.abis_engine.rendering.asset.loaders.html",
    "title": "Namespace net.abi.abisEngine.rendering.asset.loaders",
    "keywords": "Namespace net.abi.abisEngine.rendering.asset.loaders Classes AssetLoader<T,P> AsyncAssetLoader<T,P> ModelSceneLoader ModelSceneLoader.Parameter SyncAssetLoader<T,P>"
  },
  "api/net.abi.abis_engine.rendering.image._a_e_image.html": {
    "href": "api/net.abi.abis_engine.rendering.image._a_e_image.html",
    "title": "Class AEImage",
    "keywords": "Class AEImage Inheritance java.lang.Object Expendable AssetI AEImage Namespace : Assembly : .dll Syntax public class AEImage implements AssetI Constructors AEImage(PathHandle file) Declaration public AEImage(PathHandle file) Parameters Type Name Description PathHandle file AEImage(PathHandle file, int w, int h, int channels, int format, ByteBuffer image) Declaration public AEImage(PathHandle file, int w, int h, int channels, int format, ByteBuffer image) Parameters Type Name Description PathHandle file int w int h int channels int format ByteBuffer image Methods decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() getData() Declaration public PixelMap getData() Returns Type Description PixelMap getImage() Declaration public PixelMap getImage() Returns Type Description PixelMap getImageMetaData() Declaration public ImageMetaData getImageMetaData() Returns Type Description ImageMetaData getLogger() Declaration public static Logger getLogger() Returns Type Description Logger getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() loadImage(PathHandle file) Declaration public static PixelMap loadImage(PathHandle file) Parameters Type Name Description PathHandle file Returns Type Description PixelMap premultiplyAlpha(PixelMap image) Declaration public static void premultiplyAlpha(PixelMap image) Parameters Type Name Description PixelMap image resize(AEImage src, int newW, int newH) Takes a AEImage as input and then returns a AEImage instance of the resized version on src. Declaration public static AEImage resize(AEImage src, int newW, int newH) Parameters Type Name Description AEImage src int newW int newH Returns Type Description AEImage setImage(PixelMap image) Declaration public void setImage(PixelMap image) Parameters Type Name Description PixelMap image setMd(ImageMetaData md) Declaration public void setMd(ImageMetaData md) Parameters Type Name Description ImageMetaData md"
  },
  "api/net.abi.abis_engine.rendering.image._image_meta_data.html": {
    "href": "api/net.abi.abis_engine.rendering.image._image_meta_data.html",
    "title": "Class ImageMetaData",
    "keywords": "Class ImageMetaData Inheritance java.lang.Object ImageMetaData Namespace : Assembly : .dll Syntax public class ImageMetaData Constructors ImageMetaData(PathHandle file, int width, int height, int channels, int format) Declaration public ImageMetaData(PathHandle file, int width, int height, int channels, int format) Parameters Type Name Description PathHandle file int width int height int channels int format Fields file Declaration public PathHandle file Field Value Type Description PathHandle width Declaration public int width Field Value Type Description int"
  },
  "api/net.abi.abis_engine.rendering.image._pixel_map.html": {
    "href": "api/net.abi.abis_engine.rendering.image._pixel_map.html",
    "title": "Class PixelMap",
    "keywords": "Class PixelMap Inheritance java.lang.Object Expendable AssetI PixelMap Namespace : Assembly : .dll Syntax public class PixelMap implements AssetI Constructors PixelMap(ByteBuffer image, ImageMetaData md) ./res/textures/ is automatically prepended. Declaration public PixelMap(ByteBuffer image, ImageMetaData md) Parameters Type Name Description ByteBuffer image ImageMetaData md Methods decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() getImageMetaData() Declaration public ImageMetaData getImageMetaData() Returns Type Description ImageMetaData getPixel(int x, int y) Declaration public Color getPixel(int x, int y) Parameters Type Name Description int x int y Returns Type Description Color getPixelsInByteBuffer() Declaration public ByteBuffer getPixelsInByteBuffer() Returns Type Description ByteBuffer getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() setData(ByteBuffer data) Declaration public void setData(ByteBuffer data) Parameters Type Name Description ByteBuffer data setPixel(int x, int y, Color c) Declaration public void setPixel(int x, int y, Color c) Parameters Type Name Description int x int y Color c"
  },
  "api/net.abi.abis_engine.rendering.image.html": {
    "href": "api/net.abi.abis_engine.rendering.image.html",
    "title": "Namespace net.abi.abisEngine.rendering.image",
    "keywords": "Namespace net.abi.abisEngine.rendering.image Classes AEImage ImageMetaData PixelMap"
  },
  "api/net.abi.abis_engine.rendering.material._material.html": {
    "href": "api/net.abi.abis_engine.rendering.material._material.html",
    "title": "Class Material",
    "keywords": "Class Material Inheritance java.lang.Object MappedValues Material Inherited Members MappedValues.addFloat(String name, float value) MappedValues.addVector3f(String name, Vector3f value) MappedValues.getFloat(String name) MappedValues.getVector3f(String name) MappedValues.MappedValues() Namespace : Assembly : .dll Syntax public class Material extends MappedValues Constructors Material() Declaration public Material() Fields DEFAULT_MATERIAL Declaration public static final Material DEFAULT_MATERIAL= new Material().addTexture(\"default\", new Texture(Material.DEFAULT_TEXTURE).load()) Field Value Type Description final Material DEFAULT_TEXTURE Declaration public static final String DEFAULT_TEXTURE= \"defaultModelTexture.png\" Field Value Type Description final String Methods addColor(String name, Color value) Declaration public void addColor(String name, Color value) Parameters Type Name Description String name Color value addTexture(String name, Texture texture) Declaration public Material addTexture(String name, Texture texture) Parameters Type Name Description String name Texture texture Returns Type Description Material getColor(String name) Declaration public Color getColor(String name) Parameters Type Name Description String name Returns Type Description Color getColorBinds() Declaration public Map<String, Color> getColorBinds() Returns Type Description Map<String, Color > getTexture(String name) Returns a texture if present and mapped to the name provided. Note: This can return a null value. Declaration public Texture getTexture(String name) Parameters Type Name Description String name Returns Type Description Texture getTextureBinds() Declaration public Map<String, Texture> getTextureBinds() Returns Type Description Map<String, Texture >"
  },
  "api/net.abi.abis_engine.rendering.material.html": {
    "href": "api/net.abi.abis_engine.rendering.material.html",
    "title": "Namespace net.abi.abisEngine.rendering.material",
    "keywords": "Namespace net.abi.abisEngine.rendering.material Classes Material"
  },
  "api/net.abi.abis_engine.rendering.mesh._a_i_mesh_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._a_i_mesh_loader.html",
    "title": "Class AIMeshLoader",
    "keywords": "Class AIMeshLoader Inheritance java.lang.Object AIMeshLoader Namespace : Assembly : .dll Syntax public class AIMeshLoader Fields AI_DEBONE_THRESHOLD Default value for configuration properties. Declaration public static final float AI_DEBONE_THRESHOLD= 1.0f Field Value Type Description final float AI_DEFAULT_FLAGS Declaration public static final int AI_DEFAULT_FLAGS= aiProcess_Triangulate | aiProcess_GenSmoothNormals | aiProcess_CalcTangentSpace | aiProcess_OptimizeMeshes| aiProcess_JoinIdenticalVertices Field Value Type Description final int AI_DEFAULT_MATERIAL_NAME Name for default materials (2nd is used if meshes have UV coords) Declaration public static final String AI_DEFAULT_MATERIAL_NAME= \"DefaultMaterial\" Field Value Type Description final String ai_epsilon Numerical limits. Declaration public static final float ai_epsilon= 0.00001f Field Value Type Description final float AI_MATH_PI This is PI. Hi PI. Declaration public static final double AI_MATH_PI= 3.141592653589793d Field Value Type Description final double AI_MATH_PI_F This is PI. Hi PI. Declaration public static final float AI_MATH_PI_F= 3.1415927f Field Value Type Description final float AI_MATKEY_GLTF_PBRMETALLICROUGHNESS_BASE_COLOR_TEXTURE Declaration public static final int AI_MATKEY_GLTF_PBRMETALLICROUGHNESS_BASE_COLOR_TEXTURE= aiTextureType_DIFFUSE Field Value Type Description final int AI_MATKEY_NAME Material keys Declaration public static final String AI_MATKEY_NAME= \"?mat.name\" Field Value Type Description final String AI_MAX_BONE_WEIGHTS Maximum number of indices per face (polygon). Declaration public static final int AI_MAX_BONE_WEIGHTS= 0x7FFFFFFF Field Value Type Description final int AI_MAX_FACE_INDICES Maximum number of indices per face (polygon). Declaration public static final int AI_MAX_FACE_INDICES= 0x7FFF Field Value Type Description final int AI_MAX_FACES Maximum number of faces per mesh. Declaration public static final int AI_MAX_FACES= 0x7FFFFFFF Field Value Type Description final int AI_MAX_NUMBER_OF_COLOR_SETS Supported number of vertex color sets per mesh. Declaration public static final int AI_MAX_NUMBER_OF_COLOR_SETS= 0x8 Field Value Type Description final int AI_MAX_NUMBER_OF_TEXTURECOORDS Supported number of texture coord sets (UV(W) channels) per mesh. Declaration public static final int AI_MAX_NUMBER_OF_TEXTURECOORDS= 0x8 Field Value Type Description final int AI_MAX_VERTICES Maximum number of vertices per mesh. Declaration public static final int AI_MAX_VERTICES= 0x7FFFFFFF Field Value Type Description final int AI_SBBC_DEFAULT_MAX_BONES Default values for configuration properties. Declaration public static final int AI_SBBC_DEFAULT_MAX_BONES= 0x3C Field Value Type Description final int AI_TRUE Declaration public static final int AI_TRUE= 0x1 Field Value Type Description final int AI_UVTRAFO_SCALING UVCoord Transforms Declaration public static final int AI_UVTRAFO_SCALING= 0x1 Field Value Type Description final int aiAI_MATKEY_GLTF_PBRMETALLICROUGHNESS_BASE_COLOR_FACTOR PBR Material keys Declaration public static final String aiAI_MATKEY_GLTF_PBRMETALLICROUGHNESS_BASE_COLOR_FACTOR= \"$mat.gltf.pbrMetallicRoughness.baseColorFactor\" Field Value Type Description final String aiBlendMode_Default Defines alpha-blend flags. Declaration public static final int aiBlendMode_Default= 0x0 Field Value Type Description final int aiComponent_NORMALS Declaration public static final int aiComponent_NORMALS= 0x2 Field Value Type Description final int aiLightSource_UNDEFINED Enumerates all supported types of light sources. Declaration public static final int aiLightSource_UNDEFINED= 0x0 Field Value Type Description final int aiProcess_CalcTangentSpace Defines the flags for all possible post processing steps. Declaration public static final int aiProcess_CalcTangentSpace= 0x1 Field Value Type Description final int aiProcess_ConvertToLeftHanded Process Presets Declaration public static final int aiProcess_ConvertToLeftHanded= aiProcess_MakeLeftHanded | aiProcess_FlipUVs | aiProcess_FlipWindingOrder | 0 Field Value Type Description final int aiPTI_Float A very primitive RTTI system for the contents of material properties. Declaration public static final int aiPTI_Float= 0x1 Field Value Type Description final int aiShadingMode_Flat Defines all shading models supported by the library. Declaration public static final int aiShadingMode_Flat= 0x1 Field Value Type Description final int aiTextureFlags_Invert Defines some mixed flags for a particular texture. Declaration public static final int aiTextureFlags_Invert= 0x1 Field Value Type Description final int aiTextureMapMode_Wrap Defines how UV coordinates outside the [0...1] range are handled. Commonly referred to as 'wrapping mode'. Declaration public static final int aiTextureMapMode_Wrap= 0x0 Field Value Type Description final int aiTextureMapping_UV Defines how the mapping coords for a texture are generated. Declaration public static final int aiTextureMapping_UV= 0x0 Field Value Type Description final int aiTextureOp_Multiply Defines how the Nth texture of a specific type is combined with the result of all previous layers. Declaration public static final int aiTextureOp_Multiply= 0x0 Field Value Type Description final int aiTextureType_NONE Defines the purpose of a texture. Declaration public static final int aiTextureType_NONE= 0x0 Field Value Type Description final int MAXLEN Maximum dimension for strings, ASSIMP strings are zero terminated. Declaration public static final int MAXLEN= 0x400 Field Value Type Description final int MODELS_DIR Declaration public static final String MODELS_DIR= \"./res/models/\" Field Value Type Description final String Methods loadModel(String modelFileName, String modelName, int post_options) Declaration public static Mesh loadModel(String modelFileName, String modelName, int post_options) Parameters Type Name Description String modelFileName String modelName int post_options Returns Type Description Mesh loadModel(String modelFileName, String modelName, int post_options, AssetManager man) Loads a mesh from a file using AssetI Importer Library. If no post options are provided (The value is 0) defaults will be used. Defaults are : aiProcess_Triangulate | aiProcess_GenSmoothNormals | aiProcess_FlipUVs | aiProcess_CalcTangentSpace. NOTE: aiProcess_JoinIdenticalVertices is useful. Declaration public static Mesh loadModel(String modelFileName, String modelName, int post_options, AssetManager man) Parameters Type Name Description String modelFileName String modelName int post_options AssetManager man Returns Type Description Mesh A Model Scene, since one model file can contain many individual models. loadModelScene(String modelFilePath, int post_options, AssetManager man) Declaration public static ModelScene loadModelScene(String modelFilePath, int post_options, AssetManager man) Parameters Type Name Description String modelFilePath int post_options AssetManager man Returns Type Description ModelScene printLibInfo() Declaration public static void printLibInfo() removeMesh(Mesh mesh) Declaration public static void removeMesh(Mesh mesh) Parameters Type Name Description Mesh mesh"
  },
  "api/net.abi.abis_engine.rendering.mesh._mesh.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._mesh.html",
    "title": "Class Mesh",
    "keywords": "Class Mesh Inheritance java.lang.Object Expendable AssetI Mesh Namespace : Assembly : .dll Syntax public class Mesh implements AssetI Constructors Mesh(String name, Model model, long context_handle, Material initialMaterial) Declaration public Mesh(String name, Model model, long context_handle, Material initialMaterial) Parameters Type Name Description String name The name of the file or the models name in the file. Model model long context_handle The handle of the context this is being bound to. Material initialMaterial The Material this mesh will start off with, more can be added after construction. If this is null then the material will be set to the default material of the engine. Methods bindModel() Declaration public Mesh bindModel() Returns Type Description Mesh bindModel(int draw_usage) Adds the index model to open GL using the draw_option. Declaration public Mesh bindModel(int draw_usage) Parameters Type Name Description int draw_usage This hints the GL Implementation on how the data provided will be used. Returns Type Description Mesh decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() deleteMesh() Declaration public void deleteMesh() dispose() Declaration public void dispose() Overrides Expendable.dispose() draw(String vaoName, int draw_option) Declaration public void draw(String vaoName, int draw_option) Parameters Type Name Description String vaoName int draw_option getMat() Declaration public Material getMat() Returns Type Description Material getMeshName() Declaration public String getMeshName() Returns Type Description String getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() getSize() Declaration public int getSize() Returns Type Description int incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() setMat(Material mat) Declaration public void setMat(Material mat) Parameters Type Name Description Material mat"
  },
  "api/net.abi.abis_engine.rendering.mesh._mesh_resource.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._mesh_resource.html",
    "title": "Class MeshResource",
    "keywords": "Class MeshResource Inheritance java.lang.Object MeshResource Namespace : Assembly : .dll Syntax public class MeshResource Constructors MeshResource() Declaration public MeshResource() MeshResource(int size) Declaration public MeshResource(int size) Parameters Type Name Description int size Methods addReference() Declaration public void addReference() finalize() Declaration protected void finalize() getIbo() Declaration public int getIbo() Returns Type Description int getRefCount() Declaration public int getRefCount() Returns Type Description int getSize() Declaration public int getSize() Returns Type Description int getVbo() Declaration public int getVbo() Returns Type Description int removeRefrence() Declaration public boolean removeRefrence() Returns Type Description boolean setIbo(int ibo) Declaration public void setIbo(int ibo) Parameters Type Name Description int ibo setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount setSize(int size) Declaration public void setSize(int size) Parameters Type Name Description int size setVbo(int vbo) Declaration public void setVbo(int vbo) Parameters Type Name Description int vbo"
  },
  "api/net.abi.abis_engine.rendering.mesh._model.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._model.html",
    "title": "Class Model",
    "keywords": "Class Model Inheritance java.lang.Object Model Namespace : Assembly : .dll Syntax public class Model Constructors Model(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents, ArrayList<Integer> indices) Declaration public Model(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents, ArrayList<Integer> indices) Parameters Type Name Description ArrayList< Vector3f > positions ArrayList< Vector3f > normals ArrayList< Vector2f > texCoords ArrayList< Vector3f > tangents ArrayList<Integer> indices Model(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents, ArrayList<Integer> indices, ArrayList<Vector3f> vBCC) Declaration public Model(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents, ArrayList<Integer> indices, ArrayList<Vector3f> vBCC) Parameters Type Name Description ArrayList< Vector3f > positions ArrayList< Vector3f > normals ArrayList< Vector2f > texCoords ArrayList< Vector3f > tangents ArrayList<Integer> indices ArrayList< Vector3f > vBCC Bary Centric Coordinates. Methods getIndices() Declaration public ArrayList<Integer> getIndices() Returns Type Description ArrayList<Integer> getNormals() Declaration public ArrayList<Vector3f> getNormals() Returns Type Description ArrayList< Vector3f > getPositions() Declaration public ArrayList<Vector3f> getPositions() Returns Type Description ArrayList< Vector3f > getTangents() Declaration public ArrayList<Vector3f> getTangents() Returns Type Description ArrayList< Vector3f > getTexCoords() Declaration public ArrayList<Vector2f> getTexCoords() Returns Type Description ArrayList< Vector2f > getvBCC() Declaration public ArrayList<Vector3f> getvBCC() Returns Type Description ArrayList< Vector3f > isValid() Declaration public boolean isValid() Returns Type Description boolean"
  },
  "api/net.abi.abis_engine.rendering.mesh._model_scene.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._model_scene.html",
    "title": "Class ModelScene",
    "keywords": "Class ModelScene This class stores all meshes in the AIScene, and converts them to the engine's mesh format; Inheritance java.lang.Object Expendable ModelScene Namespace : Assembly : .dll Syntax public class ModelScene implements Expendable Constructors ModelScene(AIScene scene, AssetManager man) Declaration public ModelScene(AIScene scene, AssetManager man) Parameters Type Name Description AIScene scene AssetManager man Methods bindModels() Declaration public ModelScene bindModels() Returns Type Description ModelScene bindModels(int draw_usage) Declaration public ModelScene bindModels(int draw_usage) Parameters Type Name Description int draw_usage Returns Type Description ModelScene Returns the scene with bound models to VBO's in the current context. dispose() Declaration public void dispose() Overrides Expendable.dispose() free() Declaration public void free() getMesh(String name) Declaration public Mesh getMesh(String name) Parameters Type Name Description String name Returns Type Description Mesh getMeshes() Declaration public Map<String, Mesh> getMeshes() Returns Type Description Map<String, Mesh > getTexturePaths() Declaration public String [] getTexturePaths() Returns Type Description String [] processScene(AssetManager man) Declaration public void processScene(AssetManager man) Parameters Type Name Description AssetManager man removeMesh(String meshName) Declaration public void removeMesh(String meshName) Parameters Type Name Description String meshName"
  },
  "api/net.abi.abis_engine.rendering.mesh._vertex.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh._vertex.html",
    "title": "Class Vertex",
    "keywords": "Class Vertex Inheritance java.lang.Object Vertex Namespace : Assembly : .dll Syntax public class Vertex Constructors Vertex(Vector3f pos) Declaration public Vertex(Vector3f pos) Parameters Type Name Description Vector3f pos Vertex(Vector3f pos, Vector2f texCoord) Declaration public Vertex(Vector3f pos, Vector2f texCoord) Parameters Type Name Description Vector3f pos Vector2f texCoord Vertex(Vector3f pos, Vector2f texCoord, Vector3f normal) Declaration public Vertex(Vector3f pos, Vector2f texCoord, Vector3f normal) Parameters Type Name Description Vector3f pos Vector2f texCoord Vector3f normal Vertex(Vector3f pos, Vector2f texCoord, Vector3f normal, Vector3f tangent) Declaration public Vertex(Vector3f pos, Vector2f texCoord, Vector3f normal, Vector3f tangent) Parameters Type Name Description Vector3f pos Vector2f texCoord Vector3f normal Vector3f tangent Fields SIZE Declaration public static final int SIZE= 12 Field Value Type Description final int Methods getNormal() Declaration public Vector3f getNormal() Returns Type Description Vector3f getPos() Declaration public Vector3f getPos() Returns Type Description Vector3f getSize() Declaration public static int getSize() Returns Type Description int getTangent() Declaration public Vector3f getTangent() Returns Type Description Vector3f getTexCoord() Declaration public Vector2f getTexCoord() Returns Type Description Vector2f setNormal(Vector3f normal) Declaration public void setNormal(Vector3f normal) Parameters Type Name Description Vector3f normal setPos(Vector3f pos) Declaration public void setPos(Vector3f pos) Parameters Type Name Description Vector3f pos setTangent(Vector3f tangent) Declaration public void setTangent(Vector3f tangent) Parameters Type Name Description Vector3f tangent setTexCoord(Vector2f texCoord) Declaration public void setTexCoord(Vector2f texCoord) Parameters Type Name Description Vector2f texCoord"
  },
  "api/net.abi.abis_engine.rendering.mesh.html": {
    "href": "api/net.abi.abis_engine.rendering.mesh.html",
    "title": "Namespace net.abi.abisEngine.rendering.mesh",
    "keywords": "Namespace net.abi.abisEngine.rendering.mesh Classes AIMeshLoader Mesh MeshResource Model ModelScene This class stores all meshes in the AIScene, and converts them to the engine's mesh format; Vertex"
  },
  "api/net.abi.abis_engine.rendering.pipeline._rendering_engine.html": {
    "href": "api/net.abi.abis_engine.rendering.pipeline._rendering_engine.html",
    "title": "Class RenderingEngine",
    "keywords": "Class RenderingEngine Inheritance java.lang.Object MappedValues RenderingEngine Inherited Members MappedValues.addFloat(String name, float value) MappedValues.addVector3f(String name, Vector3f value) MappedValues.getFloat(String name) MappedValues.getVector3f(String name) MappedValues.MappedValues() Namespace : Assembly : .dll Syntax public class RenderingEngine extends MappedValues implements Expendable Constructors RenderingEngine() Declaration public RenderingEngine() Fields c Declaration public static Color c= Color.hex2Rgb(\"#b9bec1\").normalize() Field Value Type Description Color depth_test Declaration public static boolean depth_test= false Field Value Type Description boolean Methods addCamera(Camera camera) Declaration public void addCamera(Camera camera) Parameters Type Name Description Camera camera clearScreen() Declaration public static void clearScreen() dispose() Declaration public void dispose() Overrides Expendable.dispose() getActiveLight() Declaration public Light getActiveLight() Returns Type Description Light getMainCamera() Declaration public Camera getMainCamera() Returns Type Description Camera getOpenGLVersion() Declaration public static String getOpenGLVersion() Returns Type Description String getSamplerMap() Declaration public HashMap<String, Integer> getSamplerMap() Returns Type Description HashMap<String, Integer> getSamplerSlot(String uniformKey) Declaration public int getSamplerSlot(String uniformKey) Parameters Type Name Description String uniformKey Returns Type Description int initGraphics() Declaration public void initGraphics() render(Scene scene) Declaration public void render(Scene scene) Parameters Type Name Description Scene scene setActiveLight(Light activeLight) Declaration public void setActiveLight(Light activeLight) Parameters Type Name Description Light activeLight setMainCamera(Camera mainCamera) Declaration public void setMainCamera(Camera mainCamera) Parameters Type Name Description Camera mainCamera setSamplerMap(HashMap<String, Integer> samplerMap) Declaration public void setSamplerMap(HashMap<String, Integer> samplerMap) Parameters Type Name Description HashMap<String, Integer> samplerMap toggleDepthTest() Declaration public static void toggleDepthTest() unBindTextures() Declaration public static void unBindTextures() updateUniformStruct(Transform transform, Material mat, Shader shader, String uniformName, String uniformType) Declaration public void updateUniformStruct(Transform transform, Material mat, Shader shader, String uniformName, String uniformType) Parameters Type Name Description Transform transform Material mat Shader shader String uniformName String uniformType"
  },
  "api/net.abi.abis_engine.rendering.pipeline.html": {
    "href": "api/net.abi.abis_engine.rendering.pipeline.html",
    "title": "Namespace net.abi.abisEngine.rendering.pipeline",
    "keywords": "Namespace net.abi.abisEngine.rendering.pipeline Classes RenderingEngine"
  },
  "api/net.abi.abis_engine.rendering.scene._scene.html": {
    "href": "api/net.abi.abis_engine.rendering.scene._scene.html",
    "title": "Class Scene",
    "keywords": "Class Scene Inheritance java.lang.Object Scene Namespace : Assembly : .dll Syntax public class Scene Constructors Scene(String name, GLFWWindow prnt) Declaration public Scene(String name, GLFWWindow prnt) Parameters Type Name Description String name GLFWWindow prnt Methods addCamera(Camera cam) Declaration public void addCamera(Camera cam) Parameters Type Name Description Camera cam addChild(Entity child) Declaration public void addChild(Entity child) Parameters Type Name Description Entity child addComponent(SceneComponent component) Declaration public void addComponent(SceneComponent component) Parameters Type Name Description SceneComponent component addLight(Light light) Declaration public void addLight(Light light) Parameters Type Name Description Light light addToSceneManager() Declaration public void addToSceneManager() finalize() Declaration public void finalize() getCamera(String name) Declaration public Camera getCamera(String name) Parameters Type Name Description String name Returns Type Description Camera getCameras() Declaration public Map<String, Camera> getCameras() Returns Type Description Map<String, Camera > getId() Declaration public UUID getId() Returns Type Description UUID getInputController() Declaration public <T extends GLFWInput> T getInputController() Returns Type Description <T extends GLFWInput > T getLights() Declaration public ArrayList<Light> getLights() Returns Type Description ArrayList< Light > getMainCamera() Declaration public Camera getMainCamera() Returns Type Description Camera getName() Declaration public String getName() Returns Type Description String getParentWindow() Declaration public GLFWWindow getParentWindow() Returns Type Description GLFWWindow getRoot() Declaration public Entity getRoot() Returns Type Description Entity getRootObject() Declaration public Entity getRootObject() Returns Type Description Entity init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta isInitialized() Declaration public boolean isInitialized() Returns Type Description boolean render(RenderingEngine rndEng) Declaration public void render(RenderingEngine rndEng) Parameters Type Name Description RenderingEngine rndEng setAsParentScene() Declaration public void setAsParentScene() setCameras(Map<String, Camera> cameras) Declaration public void setCameras(Map<String, Camera> cameras) Parameters Type Name Description Map<String, Camera > cameras setId(UUID id) Declaration public void setId(UUID id) Parameters Type Name Description UUID id setInitialized(boolean initialized) Declaration public void setInitialized(boolean initialized) Parameters Type Name Description boolean initialized setLights(ArrayList<Light> lights) Declaration public void setLights(ArrayList<Light> lights) Parameters Type Name Description ArrayList< Light > lights setMainCamera(Camera mainCamera) Declaration public void setMainCamera(Camera mainCamera) Parameters Type Name Description Camera mainCamera setMainCamera(String name) Declaration public void setMainCamera(String name) Parameters Type Name Description String name setName(String name) Declaration public void setName(String name) Parameters Type Name Description String name setParentWindow(GLFWWindow parentWindow) Declaration public void setParentWindow(GLFWWindow parentWindow) Parameters Type Name Description GLFWWindow parentWindow setRoot(Entity root) Declaration public void setRoot(Entity root) Parameters Type Name Description Entity root toString() Declaration public String toString() Returns Type Description String update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.scene._scene_manager.html": {
    "href": "api/net.abi.abis_engine.rendering.scene._scene_manager.html",
    "title": "Class SceneManager",
    "keywords": "Class SceneManager Inheritance java.lang.Object SceneManager Namespace : Assembly : .dll Syntax public class SceneManager Constructors SceneManager(GLFWWindow prnt) Declaration public SceneManager(GLFWWindow prnt) Parameters Type Name Description GLFWWindow prnt Methods addScene(Scene scene) Declaration public void addScene(Scene scene) Parameters Type Name Description Scene scene getCurrentScene() Declaration public Scene getCurrentScene() Returns Type Description Scene getScene(String sceneName) Declaration public Scene getScene(String sceneName) Parameters Type Name Description String sceneName Returns Type Description Scene getScenes() Declaration public Map<String, Scene> getScenes() Returns Type Description Map<String, Scene > initScenes() Declaration public void initScenes() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta isCurrentScene(Scene scene) Declaration public boolean isCurrentScene(Scene scene) Parameters Type Name Description Scene scene Returns Type Description boolean render() Declaration public void render() setCurrentScene(Scene currentScene) Declaration public void setCurrentScene(Scene currentScene) Parameters Type Name Description Scene currentScene setCurrentScene(String sceneName) Declaration public void setCurrentScene(String sceneName) Parameters Type Name Description String sceneName setScenes(Map<String, Scene> scenes) Declaration public void setScenes(Map<String, Scene> scenes) Parameters Type Name Description Map<String, Scene > scenes update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.scene.html": {
    "href": "api/net.abi.abis_engine.rendering.scene.html",
    "title": "Namespace net.abi.abisEngine.rendering.scene",
    "keywords": "Namespace net.abi.abisEngine.rendering.scene Classes Scene SceneManager"
  },
  "api/net.abi.abis_engine.rendering.scene.scenes._engine_splash_screen.html": {
    "href": "api/net.abi.abis_engine.rendering.scene.scenes._engine_splash_screen.html",
    "title": "Class EngineSplashScreen",
    "keywords": "Class EngineSplashScreen Inheritance java.lang.Object Scene EngineSplashScreen Inherited Members Scene.addCamera(Camera cam) Scene.addChild(Entity child) Scene.addComponent(SceneComponent component) Scene.addLight(Light light) Scene.addToSceneManager() Scene.finalize() Scene.getCamera(String name) Scene.getCameras() Scene.getId() Scene.getLights() Scene.getMainCamera() Scene.getName() Scene.getParentWindow() Scene.getRoot() Scene.getRootObject() Scene.isInitialized() Scene.render(RenderingEngine rndEng) Scene.Scene(String name, GLFWWindow prnt) Scene.setAsParentScene() Scene.setCameras(Map<String, Camera> cameras) Scene.setId(UUID id) Scene.setInitialized(boolean initialized) Scene.setLights(ArrayList<Light> lights) Scene.setMainCamera(String name) Scene.setMainCamera(Camera mainCamera) Scene.setName(String name) Scene.setParentWindow(GLFWWindow parentWindow) Scene.setRoot(Entity root) Scene.toString() Namespace : Assembly : .dll Syntax public class EngineSplashScreen extends Scene Constructors EngineSplashScreen(GLFWWindow prnt) Declaration public EngineSplashScreen(GLFWWindow prnt) Parameters Type Name Description GLFWWindow prnt Methods init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.scene.scenes.html": {
    "href": "api/net.abi.abis_engine.rendering.scene.scenes.html",
    "title": "Namespace net.abi.abisEngine.rendering.scene.scenes",
    "keywords": "Namespace net.abi.abisEngine.rendering.scene.scenes Classes EngineSplashScreen"
  },
  "api/net.abi.abis_engine.rendering.shader._a_e_shader._a_e_shader_type.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._a_e_shader._a_e_shader_type.html",
    "title": "Enum AEShader.AEShaderType",
    "keywords": "Enum AEShader.AEShaderType Namespace : Assembly : .dll Syntax public enum AEShaderType Fields Name Description AE_COMPUTE_SHADER AE_FRAGMENT_SHADER AE_GEOMETRY_SHADER AE_SHADER_IMPORT AE_TESSELATION_CONTROL_SHADER AE_TESSELATION_EVALUATION_SHADER AE_VERTEX_SHADER glType"
  },
  "api/net.abi.abis_engine.rendering.shader._a_e_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._a_e_shader.html",
    "title": "Class AEShader",
    "keywords": "Class AEShader Inheritance java.lang.Object AEShader Namespace : Assembly : .dll Syntax public class AEShader Constructors AEShader(AEShaderResource r) Declaration public AEShader(AEShaderResource r) Parameters Type Name Description AEShaderResource r Fields DEFAULT_SHADER_ASSET_DIRECTORY_PATH Declaration public static final PathHandle DEFAULT_SHADER_ASSET_DIRECTORY_PATH= new PathHandle(\"res/shaders/\", PathType.Internal) Field Value Type Description final PathHandle"
  },
  "api/net.abi.abis_engine.rendering.shader._a_e_shader_resource.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._a_e_shader_resource.html",
    "title": "Class AEShaderResource",
    "keywords": "Class AEShaderResource Inheritance java.lang.Object Expendable AssetI AEShaderResource Namespace : Assembly : .dll Syntax public class AEShaderResource implements AssetI Constructors AEShaderResource(String name, PathHandle pathToShaderDirectory) Declaration public AEShaderResource(String name, PathHandle pathToShaderDirectory) Parameters Type Name Description String name PathHandle pathToShaderDirectory Methods addShaderSource(ShaderSource source) Declaration public void addShaderSource(ShaderSource source) Parameters Type Name Description ShaderSource source createProgram() Declaration public void createProgram() decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() getName() Declaration public String getName() Returns Type Description String getPath() Declaration public PathHandle getPath() Returns Type Description PathHandle getProgram() Declaration public int getProgram() Returns Type Description int getRefCount() Declaration public int getRefCount() Returns Type Description int getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() getShaderSource(String name) Declaration public ShaderSource getShaderSource(String name) Parameters Type Name Description String name Returns Type Description ShaderSource getSubPrograms() Declaration public HashMap<String, ShaderSource> getSubPrograms() Returns Type Description HashMap<String, ShaderSource> getUbos() Declaration public Map<Integer, GLSLUniformBlockObject> getUbos() Returns Type Description Map<Integer, GLSLUniformBlockObject > getUniforms() Declaration public Map<String, GLSLUniform> getUniforms() Returns Type Description Map<String, GLSLUniform > incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() setName(String name) Declaration public void setName(String name) Parameters Type Name Description String name setPath(PathHandle path) Declaration public void setPath(PathHandle path) Parameters Type Name Description PathHandle path setProgram(int program) Declaration public void setProgram(int program) Parameters Type Name Description int program setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount setSubPrograms(HashMap<String, ShaderSource> subPrograms) Declaration public void setSubPrograms(HashMap<String, ShaderSource> subPrograms) Parameters Type Name Description HashMap<String, ShaderSource> subPrograms setUbos(Map<Integer, GLSLUniformBlockObject> ubos) Declaration public void setUbos(Map<Integer, GLSLUniformBlockObject> ubos) Parameters Type Name Description Map<Integer, GLSLUniformBlockObject > ubos setUniforms(Map<String, GLSLUniform> uniforms) Declaration public void setUniforms(Map<String, GLSLUniform> uniforms) Parameters Type Name Description Map<String, GLSLUniform > uniforms"
  },
  "api/net.abi.abis_engine.rendering.shader._forward_ambient_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._forward_ambient_shader.html",
    "title": "Class ForwardAmbientShader",
    "keywords": "Class ForwardAmbientShader Inheritance java.lang.Object Expendable AssetI Shader ForwardAmbientShader Inherited Members Shader.addAllAttributes(ShaderSource source) Shader.addAllAttributes(String shaderText) Shader.addAllUniforms(ShaderSource source) Shader.addAllUniforms(String shaderText) Shader.addFragmentShader(String text) Shader.addFragmentShader(ShaderSource source) Shader.addGeometryShader(String text) Shader.addGeometryShader(ShaderSource source) Shader.addProgram(String text, int type, String text_type) Shader.addShader(ShaderType type, ShaderSource source) Shader.addTesselationControlShader(String text) Shader.addTesselationControlShader(ShaderSource source) Shader.addTesselationEvaluationShader(ShaderSource source) Shader.addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Shader.addUniform(String uniform) Shader.addVertexShader(String text) Shader.addVertexShader(ShaderSource source) Shader.bind() Shader.compileShader() Shader.decAndGetRef() Shader.decRef() Shader.DEFAULT_SHADER Shader.DEFAULT_SHADER_ASSET_DIRECTORY_PATH Shader.dispose() Shader.findUniformStructs(String shaderText) Shader.getProgram() Shader.getRefs() Shader.getUniforms() Shader.incAndGetRef() Shader.incRef() Shader.loadShaderSource(PathHandle pathToShader, ShaderType type) Shader.setAttribLocation(String attribName, int location) Shader.setProgram(int program) Shader.setUniform1i(String uniformName, int value) Shader.setUniform2f(String uniformName, Vector2f value) Shader.setUniform2fv(String uniformName, float[] value) Shader.setUniform2iv(String uniformName, int[] value) Shader.setUniform3f(String uniformName, Vector3f value) Shader.setUniform3fv(String uniformName, float[] value) Shader.setUniform3i(String uniformName, Vector3i value) Shader.setUniform3iv(String uniformName, int[] value) Shader.setUniform3ui(String uniformName, Vector3i value) Shader.setUniform3uiv(String uniformName, int[] value) Shader.setUniform4f(String uniformName, Vector4f value) Shader.setUniformBoolean(String uniformName, boolean value) Shader.setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Shader.setUniformf(String uniformName, float value) Shader.setUniformfv(String uniformName, float[] value) Shader.setUniformi(String uniformName, int value) Shader.setUniformiv(String uniformName, int[] value) Shader.setUniformLight(String uniformName, Light baseLight) Shader.setUniformMatrix4fv(String uniformName, Matrix value) Shader.setUniformPointLight(String uniformName, PointLight pointLight) Shader.setUniforms(HashMap<String, Integer> uniforms) Shader.setUniformSpotLight(String uniformName, SpotLight spotLight) Shader.Shader(String shaderName) Shader.Shader(String shaderName, long context) Namespace : Assembly : .dll Syntax public class ForwardAmbientShader extends Shader Constructors ForwardAmbientShader() Declaration public ForwardAmbientShader() Methods getInstance() Declaration public static ForwardAmbientShader getInstance() Returns Type Description ForwardAmbientShader updateUniforms(Transform transform, Material mat, RenderingEngine engine) Declaration public void updateUniforms(Transform transform, Material mat, RenderingEngine engine) Parameters Type Name Description Transform transform Material mat RenderingEngine engine"
  },
  "api/net.abi.abis_engine.rendering.shader._forward_directional_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._forward_directional_shader.html",
    "title": "Class ForwardDirectionalShader",
    "keywords": "Class ForwardDirectionalShader Inheritance java.lang.Object Expendable AssetI Shader ForwardDirectionalShader Inherited Members Shader.addAllAttributes(ShaderSource source) Shader.addAllAttributes(String shaderText) Shader.addAllUniforms(ShaderSource source) Shader.addAllUniforms(String shaderText) Shader.addFragmentShader(String text) Shader.addFragmentShader(ShaderSource source) Shader.addGeometryShader(String text) Shader.addGeometryShader(ShaderSource source) Shader.addProgram(String text, int type, String text_type) Shader.addShader(ShaderType type, ShaderSource source) Shader.addTesselationControlShader(String text) Shader.addTesselationControlShader(ShaderSource source) Shader.addTesselationEvaluationShader(ShaderSource source) Shader.addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Shader.addUniform(String uniform) Shader.addVertexShader(String text) Shader.addVertexShader(ShaderSource source) Shader.bind() Shader.compileShader() Shader.decAndGetRef() Shader.decRef() Shader.DEFAULT_SHADER Shader.DEFAULT_SHADER_ASSET_DIRECTORY_PATH Shader.dispose() Shader.findUniformStructs(String shaderText) Shader.getProgram() Shader.getRefs() Shader.getUniforms() Shader.incAndGetRef() Shader.incRef() Shader.loadShaderSource(PathHandle pathToShader, ShaderType type) Shader.setAttribLocation(String attribName, int location) Shader.setProgram(int program) Shader.setUniform1i(String uniformName, int value) Shader.setUniform2f(String uniformName, Vector2f value) Shader.setUniform2fv(String uniformName, float[] value) Shader.setUniform2iv(String uniformName, int[] value) Shader.setUniform3f(String uniformName, Vector3f value) Shader.setUniform3fv(String uniformName, float[] value) Shader.setUniform3i(String uniformName, Vector3i value) Shader.setUniform3iv(String uniformName, int[] value) Shader.setUniform3ui(String uniformName, Vector3i value) Shader.setUniform3uiv(String uniformName, int[] value) Shader.setUniform4f(String uniformName, Vector4f value) Shader.setUniformBoolean(String uniformName, boolean value) Shader.setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Shader.setUniformf(String uniformName, float value) Shader.setUniformfv(String uniformName, float[] value) Shader.setUniformi(String uniformName, int value) Shader.setUniformiv(String uniformName, int[] value) Shader.setUniformLight(String uniformName, Light baseLight) Shader.setUniformMatrix4fv(String uniformName, Matrix value) Shader.setUniformPointLight(String uniformName, PointLight pointLight) Shader.setUniforms(HashMap<String, Integer> uniforms) Shader.setUniformSpotLight(String uniformName, SpotLight spotLight) Shader.Shader(String shaderName) Shader.Shader(String shaderName, long context) Namespace : Assembly : .dll Syntax public class ForwardDirectionalShader extends Shader Constructors ForwardDirectionalShader() Declaration public ForwardDirectionalShader() Methods getInstance() Declaration public static ForwardDirectionalShader getInstance() Returns Type Description ForwardDirectionalShader updateUniforms(Transform transform, Material mat, RenderingEngine engine) Declaration public void updateUniforms(Transform transform, Material mat, RenderingEngine engine) Parameters Type Name Description Transform transform Material mat RenderingEngine engine"
  },
  "api/net.abi.abis_engine.rendering.shader._forward_point_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._forward_point_shader.html",
    "title": "Class ForwardPointShader",
    "keywords": "Class ForwardPointShader Inheritance java.lang.Object Expendable AssetI Shader ForwardPointShader Inherited Members Shader.addAllAttributes(ShaderSource source) Shader.addAllAttributes(String shaderText) Shader.addAllUniforms(ShaderSource source) Shader.addAllUniforms(String shaderText) Shader.addFragmentShader(String text) Shader.addFragmentShader(ShaderSource source) Shader.addGeometryShader(String text) Shader.addGeometryShader(ShaderSource source) Shader.addProgram(String text, int type, String text_type) Shader.addShader(ShaderType type, ShaderSource source) Shader.addTesselationControlShader(String text) Shader.addTesselationControlShader(ShaderSource source) Shader.addTesselationEvaluationShader(ShaderSource source) Shader.addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Shader.addUniform(String uniform) Shader.addVertexShader(String text) Shader.addVertexShader(ShaderSource source) Shader.bind() Shader.compileShader() Shader.decAndGetRef() Shader.decRef() Shader.DEFAULT_SHADER Shader.DEFAULT_SHADER_ASSET_DIRECTORY_PATH Shader.dispose() Shader.findUniformStructs(String shaderText) Shader.getProgram() Shader.getRefs() Shader.getUniforms() Shader.incAndGetRef() Shader.incRef() Shader.loadShaderSource(PathHandle pathToShader, ShaderType type) Shader.setAttribLocation(String attribName, int location) Shader.setProgram(int program) Shader.setUniform1i(String uniformName, int value) Shader.setUniform2f(String uniformName, Vector2f value) Shader.setUniform2fv(String uniformName, float[] value) Shader.setUniform2iv(String uniformName, int[] value) Shader.setUniform3f(String uniformName, Vector3f value) Shader.setUniform3fv(String uniformName, float[] value) Shader.setUniform3i(String uniformName, Vector3i value) Shader.setUniform3iv(String uniformName, int[] value) Shader.setUniform3ui(String uniformName, Vector3i value) Shader.setUniform3uiv(String uniformName, int[] value) Shader.setUniform4f(String uniformName, Vector4f value) Shader.setUniformBoolean(String uniformName, boolean value) Shader.setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Shader.setUniformf(String uniformName, float value) Shader.setUniformfv(String uniformName, float[] value) Shader.setUniformi(String uniformName, int value) Shader.setUniformiv(String uniformName, int[] value) Shader.setUniformMatrix4fv(String uniformName, Matrix value) Shader.setUniforms(HashMap<String, Integer> uniforms) Shader.setUniformSpotLight(String uniformName, SpotLight spotLight) Shader.Shader(String shaderName) Shader.Shader(String shaderName, long context) Namespace : Assembly : .dll Syntax public class ForwardPointShader extends Shader Constructors ForwardPointShader() Declaration public ForwardPointShader() Methods getInstance() Declaration public static ForwardPointShader getInstance() Returns Type Description ForwardPointShader setUniformLight(String uniformName, Light baseLight) Declaration public void setUniformLight(String uniformName, Light baseLight) Parameters Type Name Description String uniformName Light baseLight setUniformPointLight(String uniformName, PointLight pointLight) Declaration public void setUniformPointLight(String uniformName, PointLight pointLight) Parameters Type Name Description String uniformName PointLight pointLight updateUniforms(Transform transform, Material mat, RenderingEngine engine) Declaration public void updateUniforms(Transform transform, Material mat, RenderingEngine engine) Parameters Type Name Description Transform transform Material mat RenderingEngine engine"
  },
  "api/net.abi.abis_engine.rendering.shader._forward_spot_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._forward_spot_shader.html",
    "title": "Class ForwardSpotShader",
    "keywords": "Class ForwardSpotShader Inheritance java.lang.Object Expendable AssetI Shader ForwardSpotShader Inherited Members Shader.addAllAttributes(ShaderSource source) Shader.addAllAttributes(String shaderText) Shader.addAllUniforms(ShaderSource source) Shader.addAllUniforms(String shaderText) Shader.addFragmentShader(String text) Shader.addFragmentShader(ShaderSource source) Shader.addGeometryShader(String text) Shader.addGeometryShader(ShaderSource source) Shader.addProgram(String text, int type, String text_type) Shader.addShader(ShaderType type, ShaderSource source) Shader.addTesselationControlShader(String text) Shader.addTesselationControlShader(ShaderSource source) Shader.addTesselationEvaluationShader(ShaderSource source) Shader.addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Shader.addUniform(String uniform) Shader.addVertexShader(String text) Shader.addVertexShader(ShaderSource source) Shader.bind() Shader.compileShader() Shader.decAndGetRef() Shader.decRef() Shader.DEFAULT_SHADER Shader.DEFAULT_SHADER_ASSET_DIRECTORY_PATH Shader.dispose() Shader.findUniformStructs(String shaderText) Shader.getProgram() Shader.getRefs() Shader.getUniforms() Shader.incAndGetRef() Shader.incRef() Shader.loadShaderSource(PathHandle pathToShader, ShaderType type) Shader.setAttribLocation(String attribName, int location) Shader.setProgram(int program) Shader.setUniform1i(String uniformName, int value) Shader.setUniform2f(String uniformName, Vector2f value) Shader.setUniform2fv(String uniformName, float[] value) Shader.setUniform2iv(String uniformName, int[] value) Shader.setUniform3f(String uniformName, Vector3f value) Shader.setUniform3fv(String uniformName, float[] value) Shader.setUniform3i(String uniformName, Vector3i value) Shader.setUniform3iv(String uniformName, int[] value) Shader.setUniform3ui(String uniformName, Vector3i value) Shader.setUniform3uiv(String uniformName, int[] value) Shader.setUniform4f(String uniformName, Vector4f value) Shader.setUniformBoolean(String uniformName, boolean value) Shader.setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Shader.setUniformf(String uniformName, float value) Shader.setUniformfv(String uniformName, float[] value) Shader.setUniformi(String uniformName, int value) Shader.setUniformiv(String uniformName, int[] value) Shader.setUniformMatrix4fv(String uniformName, Matrix value) Shader.setUniforms(HashMap<String, Integer> uniforms) Shader.Shader(String shaderName) Shader.Shader(String shaderName, long context) Namespace : Assembly : .dll Syntax public class ForwardSpotShader extends Shader Constructors ForwardSpotShader() Declaration public ForwardSpotShader() Methods getInstance() Declaration public static ForwardSpotShader getInstance() Returns Type Description ForwardSpotShader setUniformLight(String uniformName, Light baseLight) Declaration public void setUniformLight(String uniformName, Light baseLight) Parameters Type Name Description String uniformName Light baseLight setUniformPointLight(String uniformName, PointLight pointLight) Declaration public void setUniformPointLight(String uniformName, PointLight pointLight) Parameters Type Name Description String uniformName PointLight pointLight setUniformSpotLight(String uniformName, SpotLight spotLight) Declaration public void setUniformSpotLight(String uniformName, SpotLight spotLight) Parameters Type Name Description String uniformName SpotLight spotLight updateUniforms(Transform transform, Material mat, RenderingEngine engine) Declaration public void updateUniforms(Transform transform, Material mat, RenderingEngine engine) Parameters Type Name Description Transform transform Material mat RenderingEngine engine"
  },
  "api/net.abi.abis_engine.rendering.shader._g_l_s_l_layout_qualifier.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._g_l_s_l_layout_qualifier.html",
    "title": "Class GLSLLayoutQualifier",
    "keywords": "Class GLSLLayoutQualifier Inheritance java.lang.Object GLSLLayoutQualifier Namespace : Assembly : .dll Syntax public class GLSLLayoutQualifier Constructors GLSLLayoutQualifier() Declaration public GLSLLayoutQualifier() Fields layoutQualifierIDList Declaration public HashMap<Qualifiers, String> layoutQualifierIDList Field Value Type Description HashMap<Qualifiers, String>"
  },
  "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform.html",
    "title": "Class GLSLUniform",
    "keywords": "Class GLSLUniform Inheritance java.lang.Object GLSLUniform Namespace : Assembly : .dll Syntax public class GLSLUniform Constructors GLSLUniform() Declaration public GLSLUniform() Fields arrayStride If the current uniform is a Array then this will be its stride otherwise it is 0. Declaration public int arrayStride= 0 Field Value Type Description int location The location this uniform is bound in on the shader program if -1 then not bound. Declaration public int location= -1 Field Value Type Description int matrixStride If the current uniform is a Mat then this will be its stride otherwise it is 0 by default. Declaration public int matrixStride= 0 Field Value Type Description int name Declaration public String name= \"\" Field Value Type Description String size The size of this uniform variable if in an array the array stride property will be non 0, and if this variable is a Matrix then the Matrix Stride will be non 0.s Declaration public int size= 0 Field Value Type Description int type The raw glsl type integer Declaration public int type= 0 Field Value Type Description int"
  },
  "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform_block_object.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform_block_object.html",
    "title": "Class GLSLUniformBlockObject",
    "keywords": "Class GLSLUniformBlockObject Inheritance java.lang.Object GLSLUniformBlockObject Namespace : Assembly : .dll Syntax public class GLSLUniformBlockObject Constructors GLSLUniformBlockObject(GLSLUniformBlockObjectData data) Declaration public GLSLUniformBlockObject(GLSLUniformBlockObjectData data) Parameters Type Name Description GLSLUniformBlockObjectData data Methods bind() Declaration public void bind() create(int size) Declaration public int create(int size) Parameters Type Name Description int size Returns Type Description int getBinding() Declaration public int getBinding() Returns Type Description int getData() Declaration public GLSLUniformBlockObjectData getData() Returns Type Description GLSLUniformBlockObjectData getId() Declaration public int getId() Returns Type Description int getSize() Declaration public int getSize() Returns Type Description int setData(GLSLUniformBlockObjectData data) Declaration public void setData(GLSLUniformBlockObjectData data) Parameters Type Name Description GLSLUniformBlockObjectData data setId(int id) Declaration public void setId(int id) Parameters Type Name Description int id unbind() Declaration public void unbind()"
  },
  "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform_block_object_data.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._g_l_s_l_uniform_block_object_data.html",
    "title": "Class GLSLUniformBlockObjectData",
    "keywords": "Class GLSLUniformBlockObjectData Inheritance java.lang.Object GLSLUniformBlockObjectData Namespace : Assembly : .dll Syntax public class GLSLUniformBlockObjectData Constructors GLSLUniformBlockObjectData(String name) Declaration public GLSLUniformBlockObjectData(String name) Parameters Type Name Description String name Methods getName() Declaration public String getName() Returns Type Description String getQualifiers() Declaration public GLSLLayoutQualifier getQualifiers() Returns Type Description GLSLLayoutQualifier getUniforms() Declaration public GLSLUniform [] getUniforms() Returns Type Description GLSLUniform [] setName(String name) Declaration public void setName(String name) Parameters Type Name Description String name setQualifiers(GLSLLayoutQualifier qualifiers) Declaration public void setQualifiers(GLSLLayoutQualifier qualifiers) Parameters Type Name Description GLSLLayoutQualifier qualifiers setUniforms(GLSLUniform[] uniforms) Declaration public void setUniforms(GLSLUniform[] uniforms) Parameters Type Name Description GLSLUniform [] uniforms"
  },
  "api/net.abi.abis_engine.rendering.shader._shader._shader_source.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._shader._shader_source.html",
    "title": "Class Shader.ShaderSource",
    "keywords": "Class Shader.ShaderSource Inheritance java.lang.Object Shader.ShaderSource Namespace : Assembly : .dll Syntax public class ShaderSource Constructors ShaderSource(String name, String source, ShaderType type) Declaration public ShaderSource(String name, String source, ShaderType type) Parameters Type Name Description String name String source Shader.ShaderType type ShaderSource(String name, String source, String tag, ShaderType type) Declaration public ShaderSource(String name, String source, String tag, ShaderType type) Parameters Type Name Description String name String source String tag Shader.ShaderType type Methods getName() Declaration public String getName() Returns Type Description String getSource() Declaration public String getSource() Returns Type Description String getTag() Declaration public String getTag() Returns Type Description String"
  },
  "api/net.abi.abis_engine.rendering.shader._shader._shader_type.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._shader._shader_type.html",
    "title": "Enum Shader.ShaderType",
    "keywords": "Enum Shader.ShaderType Namespace : Assembly : .dll Syntax public enum ShaderType Fields Name Description AE_COMPUTE_SHADER AE_FRAGMENT_SHADER AE_GEOMETRY_SHADER AE_HEADER AE_TESSELATION_CONTROL_SHADER AE_TESSELATION_EVALUATION_SHADER AE_VERTEX_SHADER extention"
  },
  "api/net.abi.abis_engine.rendering.shader._shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._shader.html",
    "title": "Class Shader",
    "keywords": "Class Shader Inheritance java.lang.Object Expendable AssetI Shader Namespace : Assembly : .dll Syntax public class Shader implements AssetI Constructors Shader(String shaderName) Loads Or References a shader in the private context, which means where ever this shader was created thats were it will be usable since the context handle for this is 0. This shader cannot be used universally. Declaration public Shader(String shaderName) Parameters Type Name Description String shaderName Shader(String shaderName, long context) Creates a shader found in the shader assets directory. Declaration public Shader(String shaderName, long context) Parameters Type Name Description String shaderName long context Fields DEFAULT_SHADER Declaration public static final Shader DEFAULT_SHADER= null Field Value Type Description final Shader DEFAULT_SHADER_ASSET_DIRECTORY_PATH Declaration public static final PathHandle DEFAULT_SHADER_ASSET_DIRECTORY_PATH= new PathHandle(\"res/shaders/\", PathType.Internal) Field Value Type Description final PathHandle Methods addAllAttributes(ShaderSource source) Declaration public void addAllAttributes(ShaderSource source) Parameters Type Name Description ShaderSource source addAllAttributes(String shaderText) Declaration public void addAllAttributes(String shaderText) Parameters Type Name Description String shaderText addAllUniforms(ShaderSource source) Declaration public void addAllUniforms(ShaderSource source) Parameters Type Name Description ShaderSource source addAllUniforms(String shaderText) Declaration public void addAllUniforms(String shaderText) Parameters Type Name Description String shaderText addFragmentShader(ShaderSource source) Declaration public void addFragmentShader(ShaderSource source) Parameters Type Name Description ShaderSource source addFragmentShader(String text) Declaration public void addFragmentShader(String text) Parameters Type Name Description String text addGeometryShader(ShaderSource source) Declaration public void addGeometryShader(ShaderSource source) Parameters Type Name Description ShaderSource source addGeometryShader(String text) Declaration public void addGeometryShader(String text) Parameters Type Name Description String text addProgram(String text, int type, String text_type) Declaration public void addProgram(String text, int type, String text_type) Parameters Type Name Description String text int type String text_type addShader(ShaderType type, ShaderSource source) Declaration public void addShader(ShaderType type, ShaderSource source) Parameters Type Name Description Shader.ShaderType type ShaderSource source addTesselationControlShader(ShaderSource source) Declaration public void addTesselationControlShader(ShaderSource source) Parameters Type Name Description ShaderSource source addTesselationControlShader(String text) GL40 Shader Program. Declaration public void addTesselationControlShader(String text) Parameters Type Name Description String text addTesselationEvaluationShader(ShaderSource source) Declaration public void addTesselationEvaluationShader(ShaderSource source) Parameters Type Name Description ShaderSource source addUniform(String uniform) Declaration public void addUniform(String uniform) Parameters Type Name Description String uniform addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Previously Known As addUniformWithStructCheck. Declaration public void addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Parameters Type Name Description String uniformName String uniformType HashMap<String, ArrayList<GLSLStruct>> structs addVertexShader(ShaderSource source) Declaration public void addVertexShader(ShaderSource source) Parameters Type Name Description ShaderSource source addVertexShader(String text) Declaration public void addVertexShader(String text) Parameters Type Name Description String text bind() Declaration public void bind() compileShader() Declaration public void compileShader() decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() findUniformStructs(String shaderText) Declaration public HashMap<String, ArrayList<GLSLStruct>> findUniformStructs(String shaderText) Parameters Type Name Description String shaderText Returns Type Description HashMap<String, ArrayList<GLSLStruct>> getProgram() Declaration public int getProgram() Returns Type Description int getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() getUniforms() Declaration public HashMap<String, Integer> getUniforms() Returns Type Description HashMap<String, Integer> incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef() loadShaderSource(PathHandle pathToShader, ShaderType type) Loads a shader from the path to the shader directory and the type. Resolves a file from the path and then loads. Declaration public static ShaderSource loadShaderSource(PathHandle pathToShader, ShaderType type) Parameters Type Name Description PathHandle pathToShader Shader.ShaderType type Returns Type Description ShaderSource setAttribLocation(String attribName, int location) Declaration public void setAttribLocation(String attribName, int location) Parameters Type Name Description String attribName int location setProgram(int program) Declaration public void setProgram(int program) Parameters Type Name Description int program setUniform1i(String uniformName, int value) Declaration public void setUniform1i(String uniformName, int value) Parameters Type Name Description String uniformName int value setUniform2f(String uniformName, Vector2f value) Declaration public void setUniform2f(String uniformName, Vector2f value) Parameters Type Name Description String uniformName Vector2f value setUniform2fv(String uniformName, float[] value) Declaration public void setUniform2fv(String uniformName, float[] value) Parameters Type Name Description String uniformName float [] value setUniform2iv(String uniformName, int[] value) Declaration public void setUniform2iv(String uniformName, int[] value) Parameters Type Name Description String uniformName int [] value setUniform3f(String uniformName, Vector3f value) Declaration public void setUniform3f(String uniformName, Vector3f value) Parameters Type Name Description String uniformName Vector3f value setUniform3fv(String uniformName, float[] value) Declaration public void setUniform3fv(String uniformName, float[] value) Parameters Type Name Description String uniformName float [] value setUniform3i(String uniformName, Vector3i value) Declaration public void setUniform3i(String uniformName, Vector3i value) Parameters Type Name Description String uniformName Vector3i value setUniform3iv(String uniformName, int[] value) Declaration public void setUniform3iv(String uniformName, int[] value) Parameters Type Name Description String uniformName int [] value setUniform3ui(String uniformName, Vector3i value) Declaration public void setUniform3ui(String uniformName, Vector3i value) Parameters Type Name Description String uniformName Vector3i value setUniform3uiv(String uniformName, int[] value) Declaration public void setUniform3uiv(String uniformName, int[] value) Parameters Type Name Description String uniformName int [] value setUniform4f(String uniformName, Vector4f value) Declaration public void setUniform4f(String uniformName, Vector4f value) Parameters Type Name Description String uniformName Vector4f value setUniformBoolean(String uniformName, boolean value) 1 - true, 0 - false; Declaration public void setUniformBoolean(String uniformName, boolean value) Parameters Type Name Description String uniformName boolean value setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Declaration public void setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Parameters Type Name Description String uniformName DirectionalLight directionalLight setUniformf(String uniformName, float value) Declaration public void setUniformf(String uniformName, float value) Parameters Type Name Description String uniformName float value setUniformfv(String uniformName, float[] value) Declaration public void setUniformfv(String uniformName, float[] value) Parameters Type Name Description String uniformName float [] value setUniformi(String uniformName, int value) Declaration public void setUniformi(String uniformName, int value) Parameters Type Name Description String uniformName int value setUniformiv(String uniformName, int[] value) Declaration public void setUniformiv(String uniformName, int[] value) Parameters Type Name Description String uniformName int [] value setUniformLight(String uniformName, Light baseLight) Declaration public void setUniformLight(String uniformName, Light baseLight) Parameters Type Name Description String uniformName Light baseLight setUniformMatrix4fv(String uniformName, Matrix value) All Matrices by default are transposed while loading. Declaration public void setUniformMatrix4fv(String uniformName, Matrix value) Parameters Type Name Description String uniformName Matrix value setUniformPointLight(String uniformName, PointLight pointLight) Declaration public void setUniformPointLight(String uniformName, PointLight pointLight) Parameters Type Name Description String uniformName PointLight pointLight setUniforms(HashMap<String, Integer> uniforms) Declaration public void setUniforms(HashMap<String, Integer> uniforms) Parameters Type Name Description HashMap<String, Integer> uniforms setUniformSpotLight(String uniformName, SpotLight spotLight) Declaration public void setUniformSpotLight(String uniformName, SpotLight spotLight) Parameters Type Name Description String uniformName SpotLight spotLight updateUniforms(Transform transform, Material mat, RenderingEngine engine) Declaration public void updateUniforms(Transform transform, Material mat, RenderingEngine engine) Parameters Type Name Description Transform transform Material mat RenderingEngine engine"
  },
  "api/net.abi.abis_engine.rendering.shader._shader_resource.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._shader_resource.html",
    "title": "Class ShaderResource",
    "keywords": "Class ShaderResource Inheritance java.lang.Object ShaderResource Namespace : Assembly : .dll Syntax public class ShaderResource Constructors ShaderResource(String name, PathHandle pathToShaderDirectory) Declaration public ShaderResource(String name, PathHandle pathToShaderDirectory) Parameters Type Name Description String name PathHandle pathToShaderDirectory Methods addShaderSource(ShaderType type, ShaderSource source) Declaration public void addShaderSource(ShaderType type, ShaderSource source) Parameters Type Name Description Shader.ShaderType type ShaderSource source decRefs() Declaration public boolean decRefs() Returns Type Description boolean finalize() Declaration protected void finalize() getName() Declaration public String getName() Returns Type Description String getProgram() Declaration public int getProgram() Returns Type Description int getRefCount() Declaration public int getRefCount() Returns Type Description int getShaderSource(String name) Declaration public ShaderSource getShaderSource(String name) Parameters Type Name Description String name Returns Type Description ShaderSource getSubPrograms() Declaration public HashMap<ShaderType, ShaderSource> getSubPrograms() Returns Type Description HashMap< Shader.ShaderType , ShaderSource> getUniformNames() Declaration public List<String> getUniformNames() Returns Type Description List<String> getUniforms() Declaration public HashMap<String, Integer> getUniforms() Returns Type Description HashMap<String, Integer> getUniformTypes() Declaration public List<String> getUniformTypes() Returns Type Description List<String> incRefs() Declaration public void incRefs() setProgram(int program) Declaration public void setProgram(int program) Parameters Type Name Description int program setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount setUniformNames(List<String> uniformNames) Declaration public void setUniformNames(List<String> uniformNames) Parameters Type Name Description List<String> uniformNames setUniforms(Map<String, Integer> uniforms) Declaration public void setUniforms(Map<String, Integer> uniforms) Parameters Type Name Description Map<String, Integer> uniforms setUniformTypes(List<String> uniformTypes) Declaration public void setUniformTypes(List<String> uniformTypes) Parameters Type Name Description List<String> uniformTypes"
  },
  "api/net.abi.abis_engine.rendering.shader._wire_frame_shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader._wire_frame_shader.html",
    "title": "Class WireFrameShader",
    "keywords": "Class WireFrameShader Inheritance java.lang.Object Expendable AssetI Shader WireFrameShader Inherited Members Shader.addAllAttributes(ShaderSource source) Shader.addAllAttributes(String shaderText) Shader.addAllUniforms(ShaderSource source) Shader.addAllUniforms(String shaderText) Shader.addFragmentShader(String text) Shader.addFragmentShader(ShaderSource source) Shader.addGeometryShader(String text) Shader.addGeometryShader(ShaderSource source) Shader.addProgram(String text, int type, String text_type) Shader.addShader(ShaderType type, ShaderSource source) Shader.addTesselationControlShader(String text) Shader.addTesselationControlShader(ShaderSource source) Shader.addTesselationEvaluationShader(ShaderSource source) Shader.addUniform(String uniformName, String uniformType, HashMap<String, ArrayList<GLSLStruct>> structs) Shader.addUniform(String uniform) Shader.addVertexShader(String text) Shader.addVertexShader(ShaderSource source) Shader.bind() Shader.compileShader() Shader.decAndGetRef() Shader.decRef() Shader.DEFAULT_SHADER Shader.DEFAULT_SHADER_ASSET_DIRECTORY_PATH Shader.dispose() Shader.findUniformStructs(String shaderText) Shader.getProgram() Shader.getRefs() Shader.getUniforms() Shader.incAndGetRef() Shader.incRef() Shader.loadShaderSource(PathHandle pathToShader, ShaderType type) Shader.setAttribLocation(String attribName, int location) Shader.setProgram(int program) Shader.setUniform1i(String uniformName, int value) Shader.setUniform2f(String uniformName, Vector2f value) Shader.setUniform2fv(String uniformName, float[] value) Shader.setUniform2iv(String uniformName, int[] value) Shader.setUniform3f(String uniformName, Vector3f value) Shader.setUniform3fv(String uniformName, float[] value) Shader.setUniform3i(String uniformName, Vector3i value) Shader.setUniform3iv(String uniformName, int[] value) Shader.setUniform3ui(String uniformName, Vector3i value) Shader.setUniform3uiv(String uniformName, int[] value) Shader.setUniform4f(String uniformName, Vector4f value) Shader.setUniformBoolean(String uniformName, boolean value) Shader.setUniformDirectionalLight(String uniformName, DirectionalLight directionalLight) Shader.setUniformf(String uniformName, float value) Shader.setUniformfv(String uniformName, float[] value) Shader.setUniformi(String uniformName, int value) Shader.setUniformiv(String uniformName, int[] value) Shader.setUniformLight(String uniformName, Light baseLight) Shader.setUniformMatrix4fv(String uniformName, Matrix value) Shader.setUniformPointLight(String uniformName, PointLight pointLight) Shader.setUniforms(HashMap<String, Integer> uniforms) Shader.setUniformSpotLight(String uniformName, SpotLight spotLight) Shader.Shader(String shaderName) Shader.Shader(String shaderName, long context) Shader.updateUniforms(Transform transform, Material mat, RenderingEngine engine) Namespace : Assembly : .dll Syntax public class WireFrameShader extends Shader Constructors WireFrameShader() Declaration public WireFrameShader()"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._a_e_g_l_info.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._a_e_g_l_info.html",
    "title": "Class AEGLInfo",
    "keywords": "Class AEGLInfo A Static Class for grabbing quick and in depth info for certain things GL. This Library has been ported from LightHouse3D's VSLGLInfo. https://github.com/lighthouse3d/VSL Inheritance java.lang.Object AEGLInfo Namespace : Assembly : .dll Syntax public class AEGLInfo Fields EXTRACTOR_VERSION Declaration public static final String EXTRACTOR_VERSION= \"1.0.0\" Field Value Type Description final String out Declaration public static PrintStream out= System.out Field Value Type Description PrintStream spBoundBuffer Declaration public static Map<Integer, Integer> spBoundBuffer= new HashMap<>() Field Value Type Description Map<Integer, Integer> spBufferAccess Declaration public static Map<Integer, String> spBufferAccess= new HashMap<>() Field Value Type Description Map<Integer, String> spBufferBinding Declaration public static Map<Integer, String> spBufferBinding= new HashMap<>() Field Value Type Description Map<Integer, String> spBufferBound Declaration public static Map<Integer, Integer> spBufferBound= new HashMap<>() Field Value Type Description Map<Integer, Integer> spBufferUsage Declaration public static Map<Integer, String> spBufferUsage= new HashMap<>() Field Value Type Description Map<Integer, String> spDataF Declaration public static Map<Integer, String> spDataF= new HashMap<>() Field Value Type Description Map<Integer, String> spGLSLPrimitives Declaration public static Map<Integer, String> spGLSLPrimitives= new HashMap<>() Field Value Type Description Map<Integer, String> spGLSLType Declaration public static Map<Integer, String> spGLSLType= new HashMap<>() Field Value Type Description Map<Integer, String> spGLSLTypeSize Declaration public static Map<Integer, Integer> spGLSLTypeSize= new HashMap<>() Field Value Type Description Map<Integer, Integer> spHint Declaration public static Map<Integer, String> spHint= new HashMap<>() Field Value Type Description Map<Integer, String> spInternalF Declaration public static Map<Integer, String> spInternalF= new HashMap<>() Field Value Type Description Map<Integer, String> spShaderPrecision Declaration public static Map<Integer, String> spShaderPrecision= new HashMap<>() Field Value Type Description Map<Integer, String> spShaderType Declaration public static Map<Integer, String> spShaderType= new HashMap<>() Field Value Type Description Map<Integer, String> spTessGenSpacing Declaration public static Map<Integer, String> spTessGenSpacing= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureBound Declaration public static Map<Integer, Integer> spTextureBound= new HashMap<>() Field Value Type Description Map<Integer, Integer> spTextureCompFunc Declaration public static Map<Integer, String> spTextureCompFunc= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureCompMode Declaration public static Map<Integer, String> spTextureCompMode= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureDataType Declaration public static Map<Integer, String> spTextureDataType= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureFilter Declaration public static Map<Integer, String> spTextureFilter= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureTarget Declaration public static Map<Integer, String> spTextureTarget= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureUnit Declaration public static Map<Integer, String> spTextureUnit= new HashMap<>() Field Value Type Description Map<Integer, String> spTextureWrap Declaration public static Map<Integer, String> spTextureWrap= new HashMap<>() Field Value Type Description Map<Integer, String> spTransFeedBufferMode Declaration public static Map<Integer, String> spTransFeedBufferMode= new HashMap<>() Field Value Type Description Map<Integer, String> spVertexOrder Declaration public static Map<Integer, String> spVertexOrder= new HashMap<>() Field Value Type Description Map<Integer, String> Methods getUniformByteSize(int uniSize, int uniType, int uniArrayStride, int uniMatStride) Declaration public static int getUniformByteSize(int uniSize, int uniType, int uniArrayStride, int uniMatStride) Parameters Type Name Description int uniSize int uniType int uniArrayStride int uniMatStride Returns Type Description int getUniformsInfo(int program) Declaration public static void getUniformsInfo(int program) Parameters Type Name Description int program getVAOInfo(int buffer) Declaration public static void getVAOInfo(int buffer) Parameters Type Name Description int buffer setOutputStream(PrintStream _out) Declaration public static void setOutputStream(PrintStream _out) Parameters Type Name Description PrintStream _out"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._g_l_s_l_struct.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._g_l_s_l_struct.html",
    "title": "Class AEShaderCompiler.GLSLStruct",
    "keywords": "Class AEShaderCompiler.GLSLStruct Inheritance java.lang.Object AEShaderCompiler.GLSLStruct Namespace : Assembly : .dll Syntax public class GLSLStruct"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._shader_data.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._shader_data.html",
    "title": "Class AEShaderCompiler.ShaderData",
    "keywords": "Class AEShaderCompiler.ShaderData Inheritance java.lang.Object AEShaderCompiler.ShaderData Namespace : Assembly : .dll Syntax public class ShaderData Constructors ShaderData(String shaderName) Declaration public ShaderData(String shaderName) Parameters Type Name Description String shaderName Fields proccessedSources Declaration public HashMap<String, ShaderSource> proccessedSources Field Value Type Description HashMap<String, ShaderSource> Methods addSource(ShaderSource source) Declaration public void addSource(ShaderSource source) Parameters Type Name Description ShaderSource source getSource(String sourceName) Declaration public ShaderSource getSource(String sourceName) Parameters Type Name Description String sourceName Returns Type Description ShaderSource"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._shader_source.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler._shader_source.html",
    "title": "Class AEShaderCompiler.ShaderSource",
    "keywords": "Class AEShaderCompiler.ShaderSource Inheritance java.lang.Object AEShaderCompiler.ShaderSource Namespace : Assembly : .dll Syntax public class ShaderSource Constructors ShaderSource(String name, String source, AEShaderType type) Declaration public ShaderSource(String name, String source, AEShaderType type) Parameters Type Name Description String name String source AEShaderType type Fields name Declaration public String name Field Value Type Description String"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._a_e_shader_compiler.html",
    "title": "Class AEShaderCompiler",
    "keywords": "Class AEShaderCompiler Compiles and creates of Shader objects in AE. Inheritance java.lang.Object AEShaderCompiler Namespace : Assembly : .dll Syntax public class AEShaderCompiler Constructors AEShaderCompiler() Declaration public AEShaderCompiler() AEShaderCompiler(PrintStream _out) Declaration public AEShaderCompiler(PrintStream _out) Parameters Type Name Description PrintStream _out Fields DEFAULT_SHADER_ASSET_DIRECTORY_PATH Declaration public static final PathHandle DEFAULT_SHADER_ASSET_DIRECTORY_PATH= new PathHandle(\"res/shaders/\", PathType.Internal) Field Value Type Description final PathHandle Methods addUniform(AEShaderResource program, GLSLUniform uniform, Map<String, GLSLStruct> structs) Declaration public static void addUniform(AEShaderResource program, GLSLUniform uniform, Map<String, GLSLStruct> structs) Parameters Type Name Description AEShaderResource program GLSLUniform uniform Map<String, GLSLStruct> structs addUniformBufferObject(AEShaderResource program, GLSLUniformBlockObject buffer, Map<String, GLSLStruct> structs) Declaration public static void addUniformBufferObject(AEShaderResource program, GLSLUniformBlockObject buffer, Map<String, GLSLStruct> structs) Parameters Type Name Description AEShaderResource program GLSLUniformBlockObject buffer Map<String, GLSLStruct> structs compile(AEShaderFileYAML p, PathHandle path) Compiles and pre process the AE Shader file also auto adds uniforms and Must be run on render thread, and in proper context. Declaration public static AEShader compile(AEShaderFileYAML p, PathHandle path) Parameters Type Name Description AEShaderFileYAML p PathHandle path Returns Type Description AEShader printDeviceCapabilities() Declaration public static void printDeviceCapabilities() printLibVersionInfo() Declaration public static void printLibVersionInfo() setAttribLocation(int program, String attribName, int location) Declaration public static void setAttribLocation(int program, String attribName, int location) Parameters Type Name Description int program String attribName int location"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._tokens._keywords.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._tokens._keywords.html",
    "title": "Enum Tokens.Keywords",
    "keywords": "Enum Tokens.Keywords GLSL Keywords. Namespace : Assembly : .dll Syntax public enum Keywords Constructors Name Description Keywords(String word) Fields Name Description ATTRIBUTE BOOL BREAK BUFFER BVEC2 BVEC3 BVEC4 CASE CENTROID CONST CONTINUE DEFAULT DISCARD DMAT2 DMAT2X2 DMAT2X3 DMAT2X4 DMAT3 DMAT3X2 DMAT3X3 DMAT3X4 DMAT4 DMAT4X2 DMAT4X3 DMAT4X4 DO DOUBLE DVEC2 DVEC3 DVEC4 ELSE FALSE FLAT FLOAT FOR HIGHP IF IN INOUT INT INVARIANT ISAMPLER1D ISAMPLER1DARRAY ISAMPLER2D ISAMPLER2DARRAY ISAMPLER2DMS ISAMPLER2DMSARRAY ISAMPLER2DRECT ISAMPLER3D ISAMPLERBUFFER ISAMPLERCUBE ISAMPLERCUBEARRAY IVEC2 IVEC3 IVEC4 LAYOUT LOWP MAT2 MAT2X2 MAT2X3 MAT2X4 MAT3 MAT3X2 MAT3X3 MAT3X4 MAT4 MAT4X2 MAT4X3 MAT4X4 MEDIUMP NOPERSPECTIVE OUT PATCH PRECISION RETURN SAMPLE SAMPLER1D SAMPLER1DARRAY SAMPLER1DARRAYSHADOW SAMPLER1DSHADOW SAMPLER2D SAMPLER2DARRAY SAMPLER2DARRAYSHADOW SAMPLER2DMS SAMPLER2DMSARRAY SAMPLER2DRECT SAMPLER2DRECTSHADOW SAMPLER2DSHADOW SAMPLER3D SAMPLERBUFFER SAMPLERCUBE SAMPLERCUBEARRAY SAMPLERCUBEARRAYSHADOW SAMPLERCUBESHADOW SMOOTH STRUCT SUBROUTINE SWITCH TRUE UINT UNIFORM USAMPLER1D USAMPLER1DARRAY USAMPLER2D USAMPLER2DARRAY USAMPLER2DMS USAMPLER2DMSARRAY USAMPLER2DRECT USAMPLER3D USAMPLERBUFFER USAMPLERCUBE USAMPLERCUBEARRAY UVEC2 UVEC3 UVEC4 VARYING VEC2 VEC3 VEC4 VOID WHILE word Methods Name Description length() toString()"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._tokens._operators.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._tokens._operators.html",
    "title": "Enum Tokens.Operators",
    "keywords": "Enum Tokens.Operators Operators. Namespace : Assembly : .dll Syntax public enum Operators Constructors Name Description Operators(String op) Fields Name Description ADD_ASSIGN ASSIGN BIT_AND BIT_AND_ASSIGN BIT_NOT BIT_OR BIT_OR_ASSIGN BIT_XOR BIT_XOR_ASSIGN BRACKET_BEGIN BRACKET_END COLON COMMA CURLEY_BRACKET_BEGIN CURLEY_BRACKET_END DECREMENT DIVIDE DIVIDE_ASSIGN DOT EQUAL GREATER GREATER_EQUAL INCREMENT LESS LESS_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR LOGICAL_XOR MINUS MODULUS MODULUS_ASSIGN MULTIPLY MULTIPLY_ASSIGN NOT_EQUAL op PARANTHESIS_BEGIN PARANTHESIS_END PLUS QUESTIONMARK SEMICOLON SHIFT_LEFT SHIFT_LEFT_ASSIGN SHIFT_RIGHT SHIFT_RIGHT_ASSIGN SUB_ASSIGN Methods Name Description toString()"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._tokens._qualifiers.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._tokens._qualifiers.html",
    "title": "Enum Tokens.Qualifiers",
    "keywords": "Enum Tokens.Qualifiers Namespace : Assembly : .dll Syntax public enum Qualifiers Constructors Name Description Qualifiers(String qualifier) Fields Name Description ALIGN BINDING CCW COLUMN_MAJOR COMPONENT CW DEPTH_ANY DEPTH_GREATER DEPTH_LESS DEPTH_UNCHANGED EQUAL_SPACING FRACTIONAL_EVEN_SPACING FRACTIONAL_ODD_SPACING INDEX ISOLINES LINE_STRIP LINES LINES_ADJACENCY LOCAL_SIZE_X LOCAL_SIZE_Y LOCAL_SIZE_Z LOCATION MAX_VERTICES OFFSET ORIGIN_UPPER_LEFT PACKED PIXEL_CENTER_INTEGER POINT_MODE POINTS QUADS qualifier ROW_MAJOR SHARED STD140 STD430 STREAM TRIANGLE_STRIP TRIANGLES VERTICES XFB_BUFFER XFB_OFFSET XFB_STRIDE Methods Name Description length() toString()"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler._tokens.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler._tokens.html",
    "title": "Class Tokens",
    "keywords": "Class Tokens Inheritance java.lang.Object Tokens Namespace : Assembly : .dll Syntax public class Tokens"
  },
  "api/net.abi.abis_engine.rendering.shader.compiler.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.compiler.html",
    "title": "Namespace net.abi.abisEngine.rendering.shader.compiler",
    "keywords": "Namespace net.abi.abisEngine.rendering.shader.compiler Classes AEGLInfo A Static Class for grabbing quick and in depth info for certain things GL. This Library has been ported from LightHouse3D's VSLGLInfo. https://github.com/lighthouse3d/VSL AEShaderCompiler Compiles and creates of Shader objects in AE. AEShaderCompiler.GLSLStruct AEShaderCompiler.ShaderData AEShaderCompiler.ShaderSource Tokens Enums Tokens.Keywords GLSL Keywords. Tokens.Operators Operators. Tokens.Qualifiers"
  },
  "api/net.abi.abis_engine.rendering.shader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.html",
    "title": "Namespace net.abi.abisEngine.rendering.shader",
    "keywords": "Namespace net.abi.abisEngine.rendering.shader Package Contains All Wrapper Classes For Shader Programs Used Within The Rendering Engine. Classes AEShader AEShaderResource ForwardAmbientShader ForwardDirectionalShader ForwardPointShader ForwardSpotShader GLSLLayoutQualifier GLSLUniform GLSLUniformBlockObject GLSLUniformBlockObjectData Shader Shader.ShaderSource ShaderResource WireFrameShader Enums AEShader.AEShaderType Shader.ShaderType"
  },
  "api/net.abi.abis_engine.rendering.shader.loader._a_e_shader_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.loader._a_e_shader_loader.html",
    "title": "Class AEShaderLoader",
    "keywords": "Class AEShaderLoader Inheritance java.lang.Object AEShaderLoader Namespace : Assembly : .dll Syntax public class AEShaderLoader Methods getParserInstance() Declaration public static AEShaderParserYAML getParserInstance() Returns Type Description AEShaderParserYAML"
  },
  "api/net.abi.abis_engine.rendering.shader.loader.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.loader.html",
    "title": "Namespace net.abi.abisEngine.rendering.shader.loader",
    "keywords": "Namespace net.abi.abisEngine.rendering.shader.loader Classes AEShaderLoader"
  },
  "api/net.abi.abis_engine.rendering.shader.parser._a_e_shader_parser_y_a_m_l.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser._a_e_shader_parser_y_a_m_l.html",
    "title": "Class AEShaderParserYAML",
    "keywords": "Class AEShaderParserYAML Inheritance java.lang.Object AEShaderParserYAML Namespace : Assembly : .dll Syntax public class AEShaderParserYAML Methods parse(PathHandle file) Declaration public static AEShaderFileYAML parse(PathHandle file) Parameters Type Name Description PathHandle file Returns Type Description AEShaderFileYAML"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_demo_property.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_demo_property.html",
    "title": "Class AEDemoProperty",
    "keywords": "Class AEDemoProperty Inheritance java.lang.Object AEDemoProperty Namespace : Assembly : .dll Syntax public class AEDemoProperty Constructors AEDemoProperty() Declaration public AEDemoProperty() Methods getAE_DEMO_PROPERTY_IDENTIFIER() Declaration public String getAE_DEMO_PROPERTY_IDENTIFIER() Returns Type Description String getAE_DEMO_PROPERTY_PARAMETERS() Declaration public String [] getAE_DEMO_PROPERTY_PARAMETERS() Returns Type Description String [] setAE_DEMO_PROPERTY_IDENTIFIER(String aE_DEMO_PROPERTY_IDENTIFIER) Declaration public void setAE_DEMO_PROPERTY_IDENTIFIER(String aE_DEMO_PROPERTY_IDENTIFIER) Parameters Type Name Description String aE_DEMO_PROPERTY_IDENTIFIER setAE_DEMO_PROPERTY_PARAMETERS(String[] aE_DEMO_PROPERTY_PARAMETERS) Declaration public void setAE_DEMO_PROPERTY_PARAMETERS(String[] aE_DEMO_PROPERTY_PARAMETERS) Parameters Type Name Description String [] aE_DEMO_PROPERTY_PARAMETERS"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_prep_property.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_prep_property.html",
    "title": "Class AEPrepProperty",
    "keywords": "Class AEPrepProperty Inheritance java.lang.Object AEPrepProperty Namespace : Assembly : .dll Syntax public class AEPrepProperty Constructors AEPrepProperty() Declaration public AEPrepProperty() Methods getAE_PREP_PROPERTY_IDENTIFIER() Declaration public String getAE_PREP_PROPERTY_IDENTIFIER() Returns Type Description String getAE_PREP_PROPERTY_PARAMETERS() Declaration public String [] getAE_PREP_PROPERTY_PARAMETERS() Returns Type Description String [] setAE_PREP_PROPERTY_IDENTIFIER(String aE_PREP_PROPERTY_IDENTIFIER) Declaration public void setAE_PREP_PROPERTY_IDENTIFIER(String aE_PREP_PROPERTY_IDENTIFIER) Parameters Type Name Description String aE_PREP_PROPERTY_IDENTIFIER setAE_PREP_PROPERTY_PARAMETERS(String[] aE_PREP_PROPERTY_PARAMETERS) Declaration public void setAE_PREP_PROPERTY_PARAMETERS(String[] aE_PREP_PROPERTY_PARAMETERS) Parameters Type Name Description String [] aE_PREP_PROPERTY_PARAMETERS"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_file_y_a_m_l.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_file_y_a_m_l.html",
    "title": "Class AEShaderFileYAML",
    "keywords": "Class AEShaderFileYAML This class defines the structure for the .ae-shader yaml files. Inheritance java.lang.Object AEShaderFileYAML Namespace : Assembly : .dll Syntax public class AEShaderFileYAML Constructors AEShaderFileYAML() Declaration public AEShaderFileYAML() Methods getAE_DEMO_PROPERTIES() Declaration public List<AEDemoProperty> getAE_DEMO_PROPERTIES() Returns Type Description List< AEDemoProperty > getAE_PREP_PROPERTIES() Declaration public List<AEPrepProperty> getAE_PREP_PROPERTIES() Returns Type Description List< AEPrepProperty > getAE_SHADER_DESC() Declaration public String getAE_SHADER_DESC() Returns Type Description String getAE_SHADER_GLSL_PROGRAMS() Declaration public List<AEShaderGLSLProgram> getAE_SHADER_GLSL_PROGRAMS() Returns Type Description List< AEShaderGLSLProgram > getAE_SHADER_NAME() Declaration public String getAE_SHADER_NAME() Returns Type Description String getAE_SHADER_PASS_TAG() Declaration public String getAE_SHADER_PASS_TAG() Returns Type Description String setAE_DEMO_PROPERTIES(List<AEDemoProperty> aE_DEMO_PROPERTIES) Declaration public void setAE_DEMO_PROPERTIES(List<AEDemoProperty> aE_DEMO_PROPERTIES) Parameters Type Name Description List< AEDemoProperty > aE_DEMO_PROPERTIES setAE_PREP_PROPERTIES(List<AEPrepProperty> props) Declaration public void setAE_PREP_PROPERTIES(List<AEPrepProperty> props) Parameters Type Name Description List< AEPrepProperty > props setAE_SHADER_DESC(String aE_SHADER_DESC) Declaration public void setAE_SHADER_DESC(String aE_SHADER_DESC) Parameters Type Name Description String aE_SHADER_DESC setAE_SHADER_GLSL_PROGRAMS(List<AEShaderGLSLProgram> subPrograms) Declaration public void setAE_SHADER_GLSL_PROGRAMS(List<AEShaderGLSLProgram> subPrograms) Parameters Type Name Description List< AEShaderGLSLProgram > subPrograms setAE_SHADER_NAME(String aE_SHADER_NAME) Declaration public void setAE_SHADER_NAME(String aE_SHADER_NAME) Parameters Type Name Description String aE_SHADER_NAME setAE_SHADER_PASS_TAG(String aE_SHADER_PASS_TAG) Declaration public void setAE_SHADER_PASS_TAG(String aE_SHADER_PASS_TAG) Parameters Type Name Description String aE_SHADER_PASS_TAG"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_g_l_s_l_program.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_g_l_s_l_program.html",
    "title": "Class AEShaderGLSLProgram",
    "keywords": "Class AEShaderGLSLProgram Inheritance java.lang.Object AEShaderGLSLProgram Namespace : Assembly : .dll Syntax public class AEShaderGLSLProgram Constructors AEShaderGLSLProgram() Declaration public AEShaderGLSLProgram() Methods getAE_SHADER_GLSL_PROGRAM_NAME() Declaration public String getAE_SHADER_GLSL_PROGRAM_NAME() Returns Type Description String getAE_SHADER_GLSL_PROGRAM_SOURCE() Declaration public String getAE_SHADER_GLSL_PROGRAM_SOURCE() Returns Type Description String getAE_SHADER_GLSL_PROGRAM_TYPE() Declaration public String getAE_SHADER_GLSL_PROGRAM_TYPE() Returns Type Description String setAE_SHADER_GLSL_PROGRAM_NAME(String aE_PROGRAM_NAME) Declaration public void setAE_SHADER_GLSL_PROGRAM_NAME(String aE_PROGRAM_NAME) Parameters Type Name Description String aE_PROGRAM_NAME setAE_SHADER_GLSL_PROGRAM_SOURCE(String aE_SHADER_PROGRAM_SOURCE) Declaration public void setAE_SHADER_GLSL_PROGRAM_SOURCE(String aE_SHADER_PROGRAM_SOURCE) Parameters Type Name Description String aE_SHADER_PROGRAM_SOURCE setAE_SHADER_GLSL_PROGRAM_TYPE(String aE_PROGRAM_TYPE) Declaration public void setAE_SHADER_GLSL_PROGRAM_TYPE(String aE_PROGRAM_TYPE) Parameters Type Name Description String aE_PROGRAM_TYPE"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_pass.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml._a_e_shader_pass.html",
    "title": "Class AEShaderPass",
    "keywords": "Class AEShaderPass Inheritance java.lang.Object AEShaderPass Namespace : Assembly : .dll Syntax public class AEShaderPass Constructors AEShaderPass() Declaration public AEShaderPass() Methods getAE_PREP_PROPERTIES() Declaration public List<AEPrepProperty> getAE_PREP_PROPERTIES() Returns Type Description List< AEPrepProperty > getAE_SHADER_GLSL_PROGRAMS() Declaration public List<AEShaderGLSLProgram> getAE_SHADER_GLSL_PROGRAMS() Returns Type Description List< AEShaderGLSLProgram > getAE_SHADER_PASS_TAG() Declaration public String getAE_SHADER_PASS_TAG() Returns Type Description String setAE_PREP_PROPERTIES(List<AEPrepProperty> props) Declaration public void setAE_PREP_PROPERTIES(List<AEPrepProperty> props) Parameters Type Name Description List< AEPrepProperty > props setAE_SHADER_GLSL_PROGRAMS(List<AEShaderGLSLProgram> subPrograms) Declaration public void setAE_SHADER_GLSL_PROGRAMS(List<AEShaderGLSLProgram> subPrograms) Parameters Type Name Description List< AEShaderGLSLProgram > subPrograms setAE_SHADER_PASS_TAG(String aE_SHADER_PASS_TAG) Declaration public void setAE_SHADER_PASS_TAG(String aE_SHADER_PASS_TAG) Parameters Type Name Description String aE_SHADER_PASS_TAG"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.file_types.yaml.html",
    "title": "Namespace net.abi.abisEngine.rendering.shader.parser.fileTypes.yaml",
    "keywords": "Namespace net.abi.abisEngine.rendering.shader.parser.fileTypes.yaml Classes AEDemoProperty AEPrepProperty AEShaderFileYAML This class defines the structure for the .ae-shader yaml files. AEShaderGLSLProgram AEShaderPass"
  },
  "api/net.abi.abis_engine.rendering.shader.parser.html": {
    "href": "api/net.abi.abis_engine.rendering.shader.parser.html",
    "title": "Namespace net.abi.abisEngine.rendering.shader.parser",
    "keywords": "Namespace net.abi.abisEngine.rendering.shader.parser Classes AEShaderParserYAML"
  },
  "api/net.abi.abis_engine.rendering.texture._texture._texture_data.html": {
    "href": "api/net.abi.abis_engine.rendering.texture._texture._texture_data.html",
    "title": "Class Texture.TextureData",
    "keywords": "Class Texture.TextureData Inheritance java.lang.Object Texture.TextureData Namespace : Assembly : .dll Syntax public class TextureData"
  },
  "api/net.abi.abis_engine.rendering.texture._texture.html": {
    "href": "api/net.abi.abis_engine.rendering.texture._texture.html",
    "title": "Class Texture",
    "keywords": "Class Texture TODO: ADD Cache to this class. Inheritance java.lang.Object Expendable Texture Namespace : Assembly : .dll Syntax public class Texture implements Expendable Constructors Texture(String fileName) Declaration public Texture(String fileName) Parameters Type Name Description String fileName Fields TEXTURES_DIR Declaration public static final String TEXTURES_DIR= \"./res/textures/\" Field Value Type Description final String Methods addReference() Declaration public void addReference() bind() Declaration public void bind() bind(int samplerSlot) Declaration public void bind(int samplerSlot) Parameters Type Name Description int samplerSlot dispose() Declaration public void dispose() Overrides Expendable.dispose() getFileName() Declaration public String getFileName() Returns Type Description String getId() Declaration public int getId() Returns Type Description int getRefCount() Declaration public int getRefCount() Returns Type Description int load() Declaration public Texture load() Returns Type Description Texture removeRefrence() Declaration public boolean removeRefrence() Returns Type Description boolean setFileName(String fileName) Declaration public void setFileName(String fileName) Parameters Type Name Description String fileName setId(int id) Declaration public void setId(int id) Parameters Type Name Description int id setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount"
  },
  "api/net.abi.abis_engine.rendering.texture._texture_resource.html": {
    "href": "api/net.abi.abis_engine.rendering.texture._texture_resource.html",
    "title": "Class TextureResource",
    "keywords": "Class TextureResource Inheritance java.lang.Object TextureResource Namespace : Assembly : .dll Syntax public class TextureResource Constructors TextureResource() Declaration public TextureResource() Methods addReference() Declaration public void addReference() finalize() Declaration protected void finalize() getId() Declaration public int getId() Returns Type Description int getRefCount() Declaration public int getRefCount() Returns Type Description int removeRefrence() Declaration public boolean removeRefrence() Returns Type Description boolean setId(int id) Declaration public void setId(int id) Parameters Type Name Description int id setRefCount(int refCount) Declaration public void setRefCount(int refCount) Parameters Type Name Description int refCount"
  },
  "api/net.abi.abis_engine.rendering.texture.html": {
    "href": "api/net.abi.abis_engine.rendering.texture.html",
    "title": "Namespace net.abi.abisEngine.rendering.texture",
    "keywords": "Namespace net.abi.abisEngine.rendering.texture Classes Texture TODO: ADD Cache to this class. Texture.TextureData TextureResource"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._animated_cursor.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._animated_cursor.html",
    "title": "Class GLFWWindow.AnimatedCursor",
    "keywords": "Class GLFWWindow.AnimatedCursor Inheritance java.lang.Object Expendable GLFWWindow.CursorI GLFWWindow.AnimatedCursor Namespace : Assembly : .dll Syntax public class AnimatedCursor implements GLFWWindow.CursorI Methods create() Declaration public long create() Returns Type Description long Overrides GLFWWindow.CursorI.create() dispose() Declaration public void dispose() Overrides Expendable.dispose() getCursorResource() Declaration public StaticCursorResource getCursorResource() Returns Type Description GLFWWindow.StaticCursorResource Overrides GLFWWindow.CursorI.getCursorResource() getHandle() Declaration public long getHandle() Returns Type Description long Overrides GLFWWindow.CursorI.getHandle() getID() Declaration public String getID() Returns Type Description String Overrides GLFWWindow.CursorI.getID()"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._cursor_i.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._cursor_i.html",
    "title": "Interface GLFWWindow.CursorI",
    "keywords": "Interface GLFWWindow.CursorI Inherited Members Expendable.dispose() Namespace : Assembly : .dll Syntax public interface CursorI extends Expendable Methods create() Declaration public long create() Returns Type Description long getCursorResource() Declaration public StaticCursorResource getCursorResource() Returns Type Description GLFWWindow.StaticCursorResource getHandle() Declaration public long getHandle() Returns Type Description long getID() Declaration public String getID() Returns Type Description String"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._g_l_f_w_window_properties.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._g_l_f_w_window_properties.html",
    "title": "Class GLFWWindow.GLFWWindowProperties",
    "keywords": "Class GLFWWindow.GLFWWindowProperties Inheritance java.lang.Object GLFWWindow.GLFWWindowProperties Namespace : Assembly : .dll Syntax public class GLFWWindowProperties Fields capabilities Declaration public GLCapabilities capabilities Field Value Type Description GLCapabilities frmBffrClbk Declaration public GLFWFramebufferSizeCallback frmBffrClbk Field Value Type Description GLFWFramebufferSizeCallback fullscreen Declaration public boolean fullscreen= false Field Value Type Description boolean name The name is what the engine recognizes and it is used to find the window. Declaration public String name Field Value Type Description String opacity GLFW Supports whole window transparency, but only if the system supports it as well. Declaration public float opacity= 1.0f Field Value Type Description float position Position of the window in screen coordinates (the top left of the window) Declaration public Vector2i position Field Value Type Description Vector2i preferredMonitor Declaration public long preferredMonitor= 0 Field Value Type Description long renderEngine Declaration public RenderingEngine renderEngine Field Value Type Description RenderingEngine sc_width sc_ is the dimensions of the window in screen coordinates, This is different than pixels since the positive of the y axis is inverted meaning it points down instead of up so the 0, 0 of the window is in the top left of the corner. Declaration public int sc_width Field Value Type Description int wndCloseClbk Declaration public GLFWWindowCloseCallback wndCloseClbk Field Value Type Description GLFWWindowCloseCallback wndCntSclClbk Declaration public GLFWWindowContentScaleCallback wndCntSclClbk Field Value Type Description GLFWWindowContentScaleCallback wndFcsClbk Declaration public GLFWWindowFocusCallback wndFcsClbk Field Value Type Description GLFWWindowFocusCallback wndIconifyClbk Declaration public GLFWWindowIconifyCallback wndIconifyClbk Field Value Type Description GLFWWindowIconifyCallback wndMxmzClbk Declaration public GLFWWindowMaximizeCallback wndMxmzClbk Field Value Type Description GLFWWindowMaximizeCallback wndPosClbk Declaration public GLFWWindowPosCallback wndPosClbk Field Value Type Description GLFWWindowPosCallback wndRfrshClbk Declaration public GLFWWindowRefreshCallback wndRfrshClbk Field Value Type Description GLFWWindowRefreshCallback wndSizeClbk Declaration public GLFWWindowSizeCallback wndSizeClbk Field Value Type Description GLFWWindowSizeCallback"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._static_cursor.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._static_cursor.html",
    "title": "Class GLFWWindow.StaticCursor",
    "keywords": "Class GLFWWindow.StaticCursor Inheritance java.lang.Object Expendable GLFWWindow.CursorI GLFWWindow.StaticCursor Namespace : Assembly : .dll Syntax public class StaticCursor implements GLFWWindow.CursorI Constructors StaticCursor(String id) Creates a standard GLFW_ARROW_CURSOR Declaration public StaticCursor(String id) Parameters Type Name Description String id StaticCursor(String id, AEImage imageToUse, int xHot, int yHot) Declaration public StaticCursor(String id, AEImage imageToUse, int xHot, int yHot) Parameters Type Name Description String id AEImage imageToUse int xHot int yHot StaticCursor(String id, int standardCursor) Declaration public StaticCursor(String id, int standardCursor) Parameters Type Name Description String id int standardCursor Methods create() Declaration public long create() Returns Type Description long Overrides GLFWWindow.CursorI.create() dispose() Declaration public void dispose() Overrides Expendable.dispose() getCursorResource() Declaration public StaticCursorResource getCursorResource() Returns Type Description GLFWWindow.StaticCursorResource Overrides GLFWWindow.CursorI.getCursorResource() getHandle() Declaration public long getHandle() Returns Type Description long Overrides GLFWWindow.CursorI.getHandle() getID() Declaration public String getID() Returns Type Description String Overrides GLFWWindow.CursorI.getID()"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._static_cursor_resource.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window._static_cursor_resource.html",
    "title": "Class GLFWWindow.StaticCursorResource",
    "keywords": "Class GLFWWindow.StaticCursorResource Inheritance java.lang.Object Expendable AssetI GLFWWindow.StaticCursorResource Namespace : Assembly : .dll Syntax public class StaticCursorResource implements AssetI Methods decAndGetRef() Declaration public int decAndGetRef() Returns Type Description int Overrides AssetI.decAndGetRef() decRef() Decrements the asset's reference count by one. Declaration public void decRef() Overrides AssetI.decRef() dispose() Declaration public void dispose() Overrides Expendable.dispose() getRefs() Returns the integer representation of the references. Declaration public int getRefs() Returns Type Description int The count of refrences. Overrides AssetI.getRefs() incAndGetRef() Declaration public int incAndGetRef() Returns Type Description int Overrides AssetI.incAndGetRef() incRef() Increments the asset's reference count by one. Declaration public void incRef() Overrides AssetI.incRef()"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window.html",
    "title": "Class GLFWWindow",
    "keywords": "Class GLFWWindow Inheritance java.lang.Object Expendable GLFWWindow Namespace : Assembly : .dll Syntax public class GLFWWindow implements Expendable Constructors GLFWWindow() Declaration public GLFWWindow() GLFWWindow(GLFWWindowProperties props) Declaration public GLFWWindow(GLFWWindowProperties props) Parameters Type Name Description GLFWWindowProperties props GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync) Declaration public GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync) Parameters Type Name Description int sc_width int sc_height String name String title boolean fullscreen int vSync GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync, long preferedMonitor) Initializes the window instance but dose not create the window. Declaration public GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync, long preferedMonitor) Parameters Type Name Description int sc_width Width of the window. int sc_height Height of the window. String name String title boolean fullscreen int vSync long preferedMonitor Fields GLFW_CLIENT_API Declaration public static final int GLFW_CLIENT_API= 0x22001 Field Value Type Description final int GLFW_FOCUSED Declaration public static final int GLFW_FOCUSED= 0x20001 Field Value Type Description final int GLFW_RED_BITS PixelFormat hints. Declaration public static final int GLFW_RED_BITS= 0x21001 Field Value Type Description final int GLFW_TRUE Boolean values. Declaration public static final int GLFW_TRUE= 1 Field Value Type Description final int id Unique id given to the window, this is used if there are multiple windows with the same names. Declaration public UUID id Field Value Type Description UUID NULL Declaration public static final long NULL= 0L Field Value Type Description final long properties Properties and preferences Declaration protected GLFWWindowProperties properties Field Value Type Description GLFWWindowProperties videoMode Declaration public GLFWVidMode videoMode Field Value Type Description GLFWVidMode Methods addGLFWWindowHint(int hint, int value) Declaration public void addGLFWWindowHint(int hint, int value) Parameters Type Name Description int hint int value addScene(Scene scene) Declaration public void addScene(Scene scene) Parameters Type Name Description Scene scene addScenes() Scenes should only be added here, since it is systematically called during the window making process. Declaration protected abstract void addScenes() Returns Type Description abstract void centerWindow() Centers the window on the monitor it was created on. Declaration public void centerWindow() close() Called before the window is destroyed with the context, here the user can call last minute methods which require window handles. But Dont call the engine to stop becasue the window is already destroyed after and is removed from GLFW context. Declaration protected abstract void close() Returns Type Description abstract void closeWindow() Declaration public void closeWindow() create() Creates a new window on the primary monitor with a new context. It is not recommended that you create a window with this method unless you have a way of keeping track of this window and updating rendering etc. Otherwise use GLWFWWindowManager's openWindow function. But this instance if created explicitly through user code and not the engine's window manager this window will not be updated automatically through the core engine. Declaration public GLFWWindow create() Returns Type Description GLFWWindow Exceptions Type Condition AEGLFWWindowInitializationException create(long monitor, long share, RenderingEngine rndEng) Creates the window. Must be called from main thread. Declaration public GLFWWindow create(long monitor, long share, RenderingEngine rndEng) Parameters Type Name Description long monitor The monitor to create the window on. NULL will create it on main monitor. long share The handle of the window the new window will share. NULL will make a new GLContext. RenderingEngine rndEng Returns Type Description GLFWWindow Exceptions Type Condition AEGLFWWindowInitializationException create(long monitor, RenderingEngine rndEng) This monitor will be considered the preferred monitor. Declaration public GLFWWindow create(long monitor, RenderingEngine rndEng) Parameters Type Name Description long monitor RenderingEngine rndEng Returns Type Description GLFWWindow Exceptions Type Condition AEGLFWWindowInitializationException create(long share) Creates a window on the shared context on the preferred monitor. Declaration public GLFWWindow create(long share) Parameters Type Name Description long share Returns Type Description GLFWWindow Exceptions Type Condition AEGLFWWindowInitializationException create(RenderingEngine rndEng) Declaration public GLFWWindow create(RenderingEngine rndEng) Parameters Type Name Description RenderingEngine rndEng Returns Type Description GLFWWindow dispose() Frees callbacks and destroys the window. Also before termination calls the abstract function close to let specified actions be performed before terminating. Declaration public void dispose() Overrides Expendable.dispose() focusWindow() Declaration public void focusWindow() genUniqueID() Do not call this method it is only called by GLFWWindowManager if there is a conflict of duplicate id's. NOTE: - This will produce a null pointer exception if called externally after creation of the window. Declaration public void genUniqueID() getAssetManager() Declaration public AssetManager getAssetManager() Returns Type Description AssetManager getAttribute(int attrib) Returns a boolean for the attribute given to query. Declaration public boolean getAttribute(int attrib) Parameters Type Name Description int attrib Returns Type Description boolean getCapabilities() Declaration public GLCapabilities getCapabilities() Returns Type Description GLCapabilities getCenter() Declaration public Vector2f getCenter() Returns Type Description Vector2f getGlfw_Handle() Declaration public long getGlfw_Handle() Returns Type Description long getID() Declaration public UUID getID() Returns Type Description UUID getInput() Declaration public <T> T getInput() Returns Type Description <T> T getMonitor() Declaration public long getMonitor() Returns Type Description long getPHeight() Declaration public int getPHeight() Returns Type Description int getProperties() Declaration public GLFWWindowProperties getProperties() Returns Type Description GLFWWindowProperties getPWidth() Returns width in pixels Declaration public int getPWidth() Returns Type Description int getRenderEngine() Declaration public RenderingEngine getRenderEngine() Returns Type Description RenderingEngine getSceneManager() Declaration public SceneManager getSceneManager() Returns Type Description SceneManager getTitle() Declaration public String getTitle() Returns Type Description String getWindowName() Declaration public String getWindowName() Returns Type Description String getWindowOpacity() Declaration public float getWindowOpacity() Returns Type Description float hideWindow() Declaration public void hideWindow() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta isCloseRequested() Declaration public boolean isCloseRequested() Returns Type Description boolean isFocused() Declaration public boolean isFocused() Returns Type Description boolean isFullscreen() Declaration public boolean isFullscreen() Returns Type Description boolean isMinimized() Declaration public boolean isMinimized() Returns Type Description boolean isvSync() Declaration public int isvSync() Returns Type Description int minimizeWindow() Declaration public void minimizeWindow() post_init() Same as pre_init except its called after window creation and only attributes should be set here. This method is called after creating and before showing the window. Declaration protected abstract void post_init() Returns Type Description abstract void pre_init() This is method where window hints can be set. This method is called before the creation of the window and should be the only place to set hints and set other constraints. This method should not be called externally since it can alter the state of the next window that is created. Declaration protected abstract void pre_init() Returns Type Description abstract void render() Declaration public void render() requestFocus() Declaration public void requestFocus() resetToDefaults() Declaration public void resetToDefaults() restoreWindow() Declaration public void restoreWindow() setAssetStore(AssetStore store) Declaration public void setAssetStore(AssetStore store) Parameters Type Name Description AssetStore store setAttribute(int attrib, int value) Sets the attribute and the value given to the current window. Declaration public void setAttribute(int attrib, int value) Parameters Type Name Description int attrib int value setCursor(CursorI cursor) Declaration public void setCursor(CursorI cursor) Parameters Type Name Description GLFWWindow.CursorI cursor setCursorType() Declaration public void setCursorType() setFullscreen(boolean fullscreen) Changes the video mode to full screen or vice versa Declaration public void setFullscreen(boolean fullscreen) Parameters Type Name Description boolean fullscreen setMonitor() Moves the window to the monitor described in the preferredMonitor variable or in the setPreferredMonitor() function. Declaration public void setMonitor() setPreferredMonitor(long prfdMntr) Sets the preferred monitor for this window. meaning what monitor this window is supposed to be on, is going to be on, or the default for it. it can also be used to set the target location for the setMonitor() function. Declaration public void setPreferredMonitor(long prfdMntr) Parameters Type Name Description long prfdMntr setProperties(GLFWWindowProperties properties) Declaration public void setProperties(GLFWWindowProperties properties) Parameters Type Name Description GLFWWindowProperties properties setRenderEngine(RenderingEngine rndEng) Declaration public void setRenderEngine(RenderingEngine rndEng) Parameters Type Name Description RenderingEngine rndEng setSceneManager(SceneManager sceneManager) Declaration public void setSceneManager(SceneManager sceneManager) Parameters Type Name Description SceneManager sceneManager setSizeLimit(int minwidth, int minheight, int maxwidth, int maxheight) Sets the size limits of the current created window to ones provided. Declaration public void setSizeLimit(int minwidth, int minheight, int maxwidth, int maxheight) Parameters Type Name Description int minwidth int minheight int maxwidth int maxheight setTitle(String title) Declaration public void setTitle(String title) Parameters Type Name Description String title setvSync(int vSync) Declaration public void setvSync(int vSync) Parameters Type Name Description int vSync setWindowIcon(AEImage... icons) Icons can be set to null by setting the first element of the array to null to reset to default platform window icon. Declaration public void setWindowIcon(AEImage... icons) Parameters Type Name Description AEImage... icons setWindowMonitor() Sets the window onto the preferred monitor as defined in properties and also carries all other setting over so to change the window on the other monitor change the properties before moving. Declaration public void setWindowMonitor() setWindowOpacity(float opacity) Declaration public void setWindowOpacity(float opacity) Parameters Type Name Description float opacity setWindowPosition(int xpos, int ypos) Sets the windows position on the preferred monitor. Declaration public void setWindowPosition(int xpos, int ypos) Parameters Type Name Description int xpos int ypos setWindowPosition(Vector2i newPos) Declaration public void setWindowPosition(Vector2i newPos) Parameters Type Name Description Vector2i newPos setWindowTitle(String title) Declaration public void setWindowTitle(String title) Parameters Type Name Description String title showWindow() Declaration public void showWindow() swapBuffers() Declaration public void swapBuffers() toggleFullScreen() Declaration public void toggleFullScreen() toggleVSync() Declaration public void toggleVSync() toString() Declaration public String toString() Returns Type Description String update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window_manager._g_l_f_w_window_context.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window_manager._g_l_f_w_window_context.html",
    "title": "Class GLFWWindowManager.GLFWWindowContext",
    "keywords": "Class GLFWWindowManager.GLFWWindowContext Class defining GLContext. This is the key to all mapped windows it contains the parent context that all windows that are mapped to it will share. The first window added to the map will have it's handle stored as the context value. Inheritance java.lang.Object GLFWWindowManager.GLFWWindowContext Namespace : Assembly : .dll Syntax public class GLFWWindowContext Constructors GLFWWindowContext(String name, long context, RenderingEngine rndEng) Declaration public GLFWWindowContext(String name, long context, RenderingEngine rndEng) Parameters Type Name Description String name long context RenderingEngine rndEng GLFWWindowContext(String name, long context, RenderingEngine rndEng, AssetStore store) Declaration public GLFWWindowContext(String name, long context, RenderingEngine rndEng, AssetStore store) Parameters Type Name Description String name long context RenderingEngine rndEng AssetStore store Fields context Declaration public long context= NULL Field Value Type Description long name Declaration public String name Field Value Type Description String renderEngine Declaration public RenderingEngine renderEngine Field Value Type Description RenderingEngine store Declaration public AssetStore store Field Value Type Description AssetStore"
  },
  "api/net.abi.abis_engine.rendering.window._g_l_f_w_window_manager.html": {
    "href": "api/net.abi.abis_engine.rendering.window._g_l_f_w_window_manager.html",
    "title": "Class GLFWWindowManager",
    "keywords": "Class GLFWWindowManager GLFW Implementation Of Window. This Implementation supports shared contexts. Inheritance java.lang.Object Expendable GLFWWindowManager Namespace : Assembly : .dll Syntax public class GLFWWindowManager implements Expendable Constructors GLFWWindowManager(CoreEngine core) Declaration public GLFWWindowManager(CoreEngine core) Parameters Type Name Description CoreEngine core Methods dispose() Declaration public void dispose() Overrides Expendable.dispose() disposeAllWindows() Destroys all active contexts. This is executed before the engine terminates. Throws Exception. Declaration public void disposeAllWindows() disposeAllWindows(GLFWWindowContext context) Destroys all windows in a active context. Throws Exception. Declaration public void disposeAllWindows(GLFWWindowContext context) Parameters Type Name Description GLFWWindowManager.GLFWWindowContext context findContext(long context) Declaration public GLFWWindowContext findContext(long context) Parameters Type Name Description long context Returns Type Description GLFWWindowManager.GLFWWindowContext findContext(String name) Returns a GLContext, if no GLContext is found null is returned. Declaration public GLFWWindowContext findContext(String name) Parameters Type Name Description String name Returns Type Description GLFWWindowManager.GLFWWindowContext getContext(String name) Finds the specific context in the shared contexts bucket list. Declaration public Map.Entry<GLFWWindowContext, CopyOnWriteArrayList<GLFWWindow>> getContext(String name) Parameters Type Name Description String name Name of the context to search for. Returns Type Description Map.Entry< GLFWWindowManager.GLFWWindowContext , CopyOnWriteArrayList< GLFWWindow >> Returns null if no context was found with the specified name, else returns the entry in the sharedContexts Bucket list. getCoreEngine() Declaration public CoreEngine getCoreEngine() Returns Type Description CoreEngine getGLFWWindow(String name) Gets the window specified. Declaration public GLFWWindow getGLFWWindow(String name) Parameters Type Name Description String name Returns Type Description GLFWWindow init(CoreEngine coreEngine) Declaration public void init(CoreEngine coreEngine) Parameters Type Name Description CoreEngine coreEngine input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta isStopRequested() Declaration public static boolean isStopRequested() Returns Type Description boolean openWindow(GLFWWindow wnd) Opens the window using the create() method in GLFWWindow and adds it to the bucket list. Without Shared GLContext. And creates a entry in the shared context bucket list using the name of the window as context name and handle as context handle, and if in the future you wish to add a window to this context use the window's name as the sharedContextName. Declaration public void openWindow(GLFWWindow wnd) Parameters Type Name Description GLFWWindow wnd openWindow(GLFWWindow wnd, long sharedContext) Declaration public void openWindow(GLFWWindow wnd, long sharedContext) Parameters Type Name Description GLFWWindow wnd long sharedContext openWindow(GLFWWindow wnd, String sharedContextName) Opens the window using the create() method in GLFWWindow and adds it to the bucket list. With Shared GLContext. Using the name, if the context with that name exists already then it adds the window to that shared context, if not then creates a new context with that name and sets the context handle to the window handle. Declaration public void openWindow(GLFWWindow wnd, String sharedContextName) Parameters Type Name Description GLFWWindow wnd String sharedContextName Exceptions Type Condition Exception printWindows() Declaration public void printWindows() raiseStopFlag() Declaration public static void raiseStopFlag() render() Renders all windows stored in the bucket list, and the windows which inherit their context. Declaration public void render() update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.window.html": {
    "href": "api/net.abi.abis_engine.rendering.window.html",
    "title": "Namespace net.abi.abisEngine.rendering.window",
    "keywords": "Namespace net.abi.abisEngine.rendering.window Classes GLFWWindow GLFWWindow.AnimatedCursor GLFWWindow.GLFWWindowProperties GLFWWindow.StaticCursor GLFWWindow.StaticCursorResource GLFWWindowManager GLFW Implementation Of Window. This Implementation supports shared contexts. GLFWWindowManager.GLFWWindowContext Class defining GLContext. This is the key to all mapped windows it contains the parent context that all windows that are mapped to it will share. The first window added to the map will have it's handle stored as the context value. Interfaces GLFWWindow.CursorI"
  },
  "api/net.abi.abis_engine.rendering.window.models._engine_loader.html": {
    "href": "api/net.abi.abis_engine.rendering.window.models._engine_loader.html",
    "title": "Class EngineLoader",
    "keywords": "Class EngineLoader Inheritance java.lang.Object Expendable GLFWWindow EngineLoader Inherited Members GLFWWindow.addGLFWWindowHint(int hint, int value) GLFWWindow.addScene(Scene scene) GLFWWindow.centerWindow() GLFWWindow.closeWindow() GLFWWindow.create(long share) GLFWWindow.create(long monitor, long share, RenderingEngine rndEng) GLFWWindow.create(long monitor, RenderingEngine rndEng) GLFWWindow.create(RenderingEngine rndEng) GLFWWindow.create() GLFWWindow.dispose() GLFWWindow.focusWindow() GLFWWindow.genUniqueID() GLFWWindow.getAssetManager() GLFWWindow.getAttribute(int attrib) GLFWWindow.getCapabilities() GLFWWindow.getCenter() GLFWWindow.getGlfw_Handle() GLFWWindow.getID() GLFWWindow.getMonitor() GLFWWindow.getPHeight() GLFWWindow.getProperties() GLFWWindow.getPWidth() GLFWWindow.getRenderEngine() GLFWWindow.getSceneManager() GLFWWindow.getTitle() GLFWWindow.getWindowName() GLFWWindow.getWindowOpacity() GLFWWindow.GLFW_CLIENT_API GLFWWindow.GLFW_FOCUSED GLFWWindow.GLFW_RED_BITS GLFWWindow.GLFW_TRUE GLFWWindow.GLFWWindow() GLFWWindow.GLFWWindow(GLFWWindowProperties props) GLFWWindow.GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync) GLFWWindow.GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync, long preferedMonitor) GLFWWindow.hideWindow() GLFWWindow.id GLFWWindow.input(float delta) GLFWWindow.isCloseRequested() GLFWWindow.isFocused() GLFWWindow.isFullscreen() GLFWWindow.isMinimized() GLFWWindow.isvSync() GLFWWindow.minimizeWindow() GLFWWindow.NULL GLFWWindow.properties GLFWWindow.render() GLFWWindow.requestFocus() GLFWWindow.resetToDefaults() GLFWWindow.restoreWindow() GLFWWindow.setAssetStore(AssetStore store) GLFWWindow.setAttribute(int attrib, int value) GLFWWindow.setCursor(CursorI cursor) GLFWWindow.setCursorType() GLFWWindow.setFullscreen(boolean fullscreen) GLFWWindow.setMonitor() GLFWWindow.setPreferredMonitor(long prfdMntr) GLFWWindow.setProperties(GLFWWindowProperties properties) GLFWWindow.setRenderEngine(RenderingEngine rndEng) GLFWWindow.setSceneManager(SceneManager sceneManager) GLFWWindow.setSizeLimit(int minwidth, int minheight, int maxwidth, int maxheight) GLFWWindow.setTitle(String title) GLFWWindow.setvSync(int vSync) GLFWWindow.setWindowIcon(AEImage... icons) GLFWWindow.setWindowMonitor() GLFWWindow.setWindowOpacity(float opacity) GLFWWindow.setWindowPosition(Vector2i newPos) GLFWWindow.setWindowPosition(int xpos, int ypos) GLFWWindow.setWindowTitle(String title) GLFWWindow.showWindow() GLFWWindow.swapBuffers() GLFWWindow.toggleFullScreen() GLFWWindow.toggleVSync() GLFWWindow.toString() GLFWWindow.videoMode Namespace : Assembly : .dll Syntax public class EngineLoader extends GLFWWindow Constructors EngineLoader() Declaration public EngineLoader() Methods addScenes() Declaration protected void addScenes() close() Declaration protected void close() post_init() Declaration protected void post_init() pre_init() Declaration protected void pre_init() update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/net.abi.abis_engine.rendering.window.models.html": {
    "href": "api/net.abi.abis_engine.rendering.window.models.html",
    "title": "Namespace net.abi.abisEngine.rendering.window.models",
    "keywords": "Namespace net.abi.abisEngine.rendering.window.models Classes EngineLoader"
  },
  "api/net.abi.abis_engine.util._attenuation.html": {
    "href": "api/net.abi.abis_engine.util._attenuation.html",
    "title": "Class Attenuation",
    "keywords": "Class Attenuation Inheritance java.lang.Object Vector3f Attenuation Inherited Members Vector3f.abs() Vector3f.absolute() Vector3f.absolute(Vector3f dest) Vector3f.add(Vector3f r) Vector3f.add(float r) Vector3f.add(float xr, float yr, float zr) Vector3f.angle(Vector3f v) Vector3f.angleCos(Vector3f v) Vector3f.angleSigned(Vector3f v, Vector3f n) Vector3f.angleSigned(float x, float y, float z, float nx, float ny, float nz) Vector3f.ceil() Vector3f.ceil(Vector3f dest) Vector3f.cross(Vector3f r) Vector3f.distance(Vector3f v) Vector3f.distance(float x, float y, float z) Vector3f.distance(float x1, float y1, float z1, float x2, float y2, float z2) Vector3f.distanceSquared(Vector3f v) Vector3f.distanceSquared(float x, float y, float z) Vector3f.distanceSquared(float x1, float y1, float z1, float x2, float y2, float z2) Vector3f.div(Vector3f r) Vector3f.div(float r) Vector3f.dot(Vector3f r) Vector3f.dot(float x, float y, float z) Vector3f.equals(Vector3f r) Vector3f.floor() Vector3f.floor(Vector3f dest) Vector3f.get(int component) Vector3f.getXY() Vector3f.getXZ() Vector3f.getYX() Vector3f.getYZ() Vector3f.getZX() Vector3f.getZY() Vector3f.half(Vector3f other) Vector3f.half(float x, float y, float z) Vector3f.half(Vector3f other, Vector3f dest) Vector3f.half(float x, float y, float z, Vector3f dest) Vector3f.hashCode() Vector3f.hermite(Vector3f t0, Vector3f v1, Vector3f t1, float t, Vector3f dest) Vector3f.isFinite() Vector3f.length() Vector3f.lengthSquared() Vector3f.lengthSquared(float x, float y, float z) Vector3f.lerp(Vector3f dest, float lerpFactor) Vector3f.max() Vector3f.maxComponent() Vector3f.min(Vector3f v) Vector3f.minComponent() Vector3f.mul(Vector3f r) Vector3f.mul(float r) Vector3f.negate() Vector3f.negate(Vector3f dest) Vector3f.normalize() Vector3f.orthogonalize(Vector3f v, Vector3f dest) Vector3f.orthogonalize(Vector3f v) Vector3f.orthogonalizeUnit(Vector3f v, Vector3f dest) Vector3f.orthogonalizeUnit(Vector3f v) Vector3f.reflect(Vector3f normal) Vector3f.reflect(float x, float y, float z) Vector3f.reflect(Vector3f normal, Vector3f dest) Vector3f.reflect(float x, float y, float z, Vector3f dest) Vector3f.rotate(float angleInDegrees, Vector3f axis) Vector3f.rotate(Quaternion rotation) Vector3f.rotateAxis(float angle, float x, float y, float z) Vector3f.rotateAxis(float angle, float aX, float aY, float aZ, Vector3f dest) Vector3f.rotateX(float angle) Vector3f.rotateX(float angle, Vector3f dest) Vector3f.rotateY(float angle) Vector3f.rotateY(float angle, Vector3f dest) Vector3f.rotateZ(float angle) Vector3f.rotateZ(float angle, Vector3f dest) Vector3f.round() Vector3f.round(Vector3f dest) Vector3f.set(float x, float y, float z) Vector3f.set(Vector3f other) Vector3f.setX(float x) Vector3f.setY(float y) Vector3f.setZ(float z) Vector3f.smoothStep(Vector3f v, float t, Vector3f dest) Vector3f.sub(Vector3f r) Vector3f.sub(float r) Vector3f.toString() Vector3f.Vector3f(float x, float y, float z) Vector3f.x() Vector3f.y() Vector3f.z() Vector3f.zero() Namespace : Assembly : .dll Syntax public class Attenuation extends Vector3f Constructors Attenuation(float constant, float linear, float exponent) Declaration public Attenuation(float constant, float linear, float exponent) Parameters Type Name Description float constant float linear float exponent Methods getConstant() Declaration public float getConstant() Returns Type Description float getExponent() Declaration public float getExponent() Returns Type Description float getLinear() Declaration public float getLinear() Returns Type Description float setConstant(float constant) Declaration public void setConstant(float constant) Parameters Type Name Description float constant setExponent(float exponent) Declaration public void setExponent(float exponent) Parameters Type Name Description float exponent setLinear(float linear) Declaration public void setLinear(float linear) Parameters Type Name Description float linear"
  },
  "api/net.abi.abis_engine.util._color.html": {
    "href": "api/net.abi.abis_engine.util._color.html",
    "title": "Class Color",
    "keywords": "Class Color This Class Allows To Have A Alpha Value To Be Set And Wraps Around A Vector3f To Include Alpha As Well. Inheritance java.lang.Object Vector3f Color Inherited Members Vector3f.abs() Vector3f.absolute() Vector3f.absolute(Vector3f dest) Vector3f.add(Vector3f r) Vector3f.add(float r) Vector3f.add(float xr, float yr, float zr) Vector3f.angle(Vector3f v) Vector3f.angleCos(Vector3f v) Vector3f.angleSigned(Vector3f v, Vector3f n) Vector3f.angleSigned(float x, float y, float z, float nx, float ny, float nz) Vector3f.ceil() Vector3f.ceil(Vector3f dest) Vector3f.cross(Vector3f r) Vector3f.distance(Vector3f v) Vector3f.distance(float x, float y, float z) Vector3f.distance(float x1, float y1, float z1, float x2, float y2, float z2) Vector3f.distanceSquared(Vector3f v) Vector3f.distanceSquared(float x, float y, float z) Vector3f.distanceSquared(float x1, float y1, float z1, float x2, float y2, float z2) Vector3f.div(Vector3f r) Vector3f.div(float r) Vector3f.dot(Vector3f r) Vector3f.dot(float x, float y, float z) Vector3f.equals(Vector3f r) Vector3f.floor() Vector3f.floor(Vector3f dest) Vector3f.get(int component) Vector3f.getXY() Vector3f.getXZ() Vector3f.getYX() Vector3f.getYZ() Vector3f.getZX() Vector3f.getZY() Vector3f.half(Vector3f other) Vector3f.half(float x, float y, float z) Vector3f.half(Vector3f other, Vector3f dest) Vector3f.half(float x, float y, float z, Vector3f dest) Vector3f.hashCode() Vector3f.hermite(Vector3f t0, Vector3f v1, Vector3f t1, float t, Vector3f dest) Vector3f.isFinite() Vector3f.length() Vector3f.lengthSquared() Vector3f.lengthSquared(float x, float y, float z) Vector3f.lerp(Vector3f dest, float lerpFactor) Vector3f.max() Vector3f.maxComponent() Vector3f.min(Vector3f v) Vector3f.minComponent() Vector3f.mul(Vector3f r) Vector3f.mul(float r) Vector3f.negate() Vector3f.negate(Vector3f dest) Vector3f.orthogonalize(Vector3f v, Vector3f dest) Vector3f.orthogonalize(Vector3f v) Vector3f.orthogonalizeUnit(Vector3f v, Vector3f dest) Vector3f.orthogonalizeUnit(Vector3f v) Vector3f.reflect(Vector3f normal) Vector3f.reflect(float x, float y, float z) Vector3f.reflect(Vector3f normal, Vector3f dest) Vector3f.reflect(float x, float y, float z, Vector3f dest) Vector3f.rotate(float angleInDegrees, Vector3f axis) Vector3f.rotate(Quaternion rotation) Vector3f.rotateAxis(float angle, float x, float y, float z) Vector3f.rotateAxis(float angle, float aX, float aY, float aZ, Vector3f dest) Vector3f.rotateX(float angle) Vector3f.rotateX(float angle, Vector3f dest) Vector3f.rotateY(float angle) Vector3f.rotateY(float angle, Vector3f dest) Vector3f.rotateZ(float angle) Vector3f.rotateZ(float angle, Vector3f dest) Vector3f.round() Vector3f.round(Vector3f dest) Vector3f.set(float x, float y, float z) Vector3f.set(Vector3f other) Vector3f.setX(float x) Vector3f.setY(float y) Vector3f.setZ(float z) Vector3f.smoothStep(Vector3f v, float t, Vector3f dest) Vector3f.sub(Vector3f r) Vector3f.sub(float r) Vector3f.toString() Vector3f.Vector3f(float x, float y, float z) Vector3f.x() Vector3f.y() Vector3f.z() Vector3f.zero() Namespace : Assembly : .dll Syntax public class Color extends Vector3f Constructors Color(float red, float green, float blue) Declaration public Color(float red, float green, float blue) Parameters Type Name Description float red float green float blue Color(float red, float green, float blue, float alpha) Declaration public Color(float red, float green, float blue, float alpha) Parameters Type Name Description float red float green float blue float alpha Color(String hex) Declaration public Color(String hex) Parameters Type Name Description String hex Color(String hex, float alpha) Declaration public Color(String hex, float alpha) Parameters Type Name Description String hex float alpha Color(Vector3f colorInVector3f) Declaration public Color(Vector3f colorInVector3f) Parameters Type Name Description Vector3f colorInVector3f Color(Vector3f colorInVector3f, float alpha) Declaration public Color(Vector3f colorInVector3f, float alpha) Parameters Type Name Description Vector3f colorInVector3f float alpha Fields DEFAULT_COLOR Declaration public static final Color DEFAULT_COLOR= new Color(1.0f, 1.0f, 1.0f, 1.0f) Field Value Type Description final Color SIZEOF Declaration public static final int SIZEOF= 4 Field Value Type Description final int Methods getAlpha() Declaration public float getAlpha() Returns Type Description float getBlue() Declaration public float getBlue() Returns Type Description float getGreen() Declaration public float getGreen() Returns Type Description float getRed() Declaration public float getRed() Returns Type Description float hex2Rgb(String colorStr) Declaration public static Color hex2Rgb(String colorStr) Parameters Type Name Description String colorStr e.g. \"#FFFFFF\"\\ Beware if you are using this for any open gl functions the value needs to be normalized see Vector3f normalize. Returns Type Description Color normalize() Declaration public Color normalize() Returns Type Description Color setAlpha(float alpha) Declaration public void setAlpha(float alpha) Parameters Type Name Description float alpha setBlue(float blue) Declaration public void setBlue(float blue) Parameters Type Name Description float blue setGreen(float green) Declaration public void setGreen(float green) Parameters Type Name Description float green setRed(float red) Declaration public void setRed(float red) Parameters Type Name Description float red"
  },
  "api/net.abi.abis_engine.util._expendable.html": {
    "href": "api/net.abi.abis_engine.util._expendable.html",
    "title": "Interface Expendable",
    "keywords": "Interface Expendable An interface used to identify and organize entitys which can be destroyed at run time or at the end of runtime. Caution: Implementing this interface means that the object CAN be destroyed, unlike static objects which last for all runtime. Namespace : Assembly : .dll Syntax public interface Expendable Methods dispose() Declaration public void dispose()"
  },
  "api/net.abi.abis_engine.util._i_o_util.html": {
    "href": "api/net.abi.abis_engine.util._i_o_util.html",
    "title": "Class IOUtil",
    "keywords": "Class IOUtil This class was adapted from Inheritance java.lang.Object IOUtil Namespace : Assembly : .dll Syntax public class IOUtil Methods ioResourceToByteBuffer(String resource, int bufferSize) Reads the specified resource and returns the raw data as a ByteBuffer. Declaration public static ByteBuffer ioResourceToByteBuffer(String resource, int bufferSize) Parameters Type Name Description String resource the resource to read int bufferSize the initial buffer size Returns Type Description ByteBuffer the resource data Exceptions Type Condition IOException if an IO error occurs"
  },
  "api/net.abi.abis_engine.util._mapped_values.html": {
    "href": "api/net.abi.abis_engine.util._mapped_values.html",
    "title": "Class MappedValues",
    "keywords": "Class MappedValues Inheritance java.lang.Object MappedValues Namespace : Assembly : .dll Syntax public class MappedValues Constructors MappedValues() Declaration public MappedValues() Methods addFloat(String name, float value) Declaration public void addFloat(String name, float value) Parameters Type Name Description String name float value addVector3f(String name, Vector3f value) Declaration public void addVector3f(String name, Vector3f value) Parameters Type Name Description String name Vector3f value getFloat(String name) Declaration public float getFloat(String name) Parameters Type Name Description String name Returns Type Description float getVector3f(String name) Declaration public Vector3f getVector3f(String name) Parameters Type Name Description String name Returns Type Description Vector3f"
  },
  "api/net.abi.abis_engine.util._thread_utils.html": {
    "href": "api/net.abi.abis_engine.util._thread_utils.html",
    "title": "Class ThreadUtils",
    "keywords": "Class ThreadUtils Utilities for threaded programming. Inheritance java.lang.Object ThreadUtils Namespace : Assembly : .dll Syntax public class ThreadUtils Methods yield() Declaration public static void yield()"
  },
  "api/net.abi.abis_engine.util._util.html": {
    "href": "api/net.abi.abis_engine.util._util.html",
    "title": "Class Util",
    "keywords": "Class Util Inheritance java.lang.Object Util Namespace : Assembly : .dll Syntax public class Util Methods createByteBuffer(int capacity) Allocates a direct native-ordered ByteBuffer </code> with the specified capacity.</p> Declaration public static ByteBuffer createByteBuffer(int capacity) Parameters Type Name Description int capacity the capacity, in bytes Returns Type Description ByteBuffer a ByteBuffer </code></p> createFlippedBuffer(ArrayList<Vector2f> values) Declaration public static FloatBuffer createFlippedBuffer(ArrayList<Vector2f> values) Parameters Type Name Description ArrayList< Vector2f > values Returns Type Description FloatBuffer createFlippedBuffer(int... values) Declaration public static IntBuffer createFlippedBuffer(int... values) Parameters Type Name Description int... values Returns Type Description IntBuffer createFlippedBuffer(List<Vector3f> values) Declaration public static FloatBuffer createFlippedBuffer(List<Vector3f> values) Parameters Type Name Description List< Vector3f > values Returns Type Description FloatBuffer createFlippedBuffer(Matrix value) Declaration public static FloatBuffer createFlippedBuffer(Matrix value) Parameters Type Name Description Matrix value Returns Type Description FloatBuffer createFlippedBuffer(Matrix4f value) Declaration public static FloatBuffer createFlippedBuffer(Matrix4f value) Parameters Type Name Description Matrix4f value Returns Type Description FloatBuffer createFlippedBuffer(Vector3f[][] values) Declaration public static FloatBuffer createFlippedBuffer(Vector3f[][] values) Parameters Type Name Description Vector3f values Returns Type Description FloatBuffer createFlippedBuffer(Vertex[] vertices) Declaration public static FloatBuffer createFlippedBuffer(Vertex[] vertices) Parameters Type Name Description Vertex [] vertices Returns Type Description FloatBuffer createFloatBuffer(int size) Declaration public static FloatBuffer createFloatBuffer(int size) Parameters Type Name Description int size Returns Type Description FloatBuffer createIntBuffer(int size) Declaration public static IntBuffer createIntBuffer(int size) Parameters Type Name Description int size Returns Type Description IntBuffer createIntBuffer(List<Integer> val) Declaration public static IntBuffer createIntBuffer(List<Integer> val) Parameters Type Name Description List<Integer> val Returns Type Description IntBuffer listIntToArray(List<Integer> list) Declaration public static int [] listIntToArray(List<Integer> list) Parameters Type Name Description List<Integer> list Returns Type Description int [] removeEmptyStrings(String[] data) Declaration public static String [] removeEmptyStrings(String[] data) Parameters Type Name Description String [] data Returns Type Description String [] sizeof(Class dataType) Java method to return size of primitive data type based on hard coded values valid but provided by developer Declaration public static int sizeof(Class dataType) Parameters Type Name Description Class dataType Returns Type Description int sizeOf(Class dataType) A perfect way of creating confusing method name, sizeof and sizeOf this method take advantage of SIZE constant from wrapper class Declaration public static int sizeOf(Class dataType) Parameters Type Name Description Class dataType Returns Type Description int toIntArray(Integer[] array) Declaration public static int [] toIntArray(Integer[] array) Parameters Type Name Description Integer [] array Returns Type Description int [] toVertexArray(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents) Declaration public static Vertex [] toVertexArray(ArrayList<Vector3f> positions, ArrayList<Vector3f> normals, ArrayList<Vector2f> texCoords, ArrayList<Vector3f> tangents) Parameters Type Name Description ArrayList< Vector3f > positions ArrayList< Vector3f > normals ArrayList< Vector2f > texCoords ArrayList< Vector3f > tangents Returns Type Description Vertex []"
  },
  "api/net.abi.abis_engine.util.async._async.html": {
    "href": "api/net.abi.abis_engine.util.async._async.html",
    "title": "Class Async",
    "keywords": "Class Async Inheritance java.lang.Object Async Namespace : Assembly : .dll Syntax public class Async"
  },
  "api/net.abi.abis_engine.util.async._async_result.html": {
    "href": "api/net.abi.abis_engine.util.async._async_result.html",
    "title": "Class AsyncResult<T>",
    "keywords": "Class AsyncResult<T> Inheritance java.lang.Object AsyncResult<T> Namespace : Assembly : .dll Syntax public class AsyncResult<T> Type Parameters Name Description net_abi_abis_engine_util_async__async_result Constructors AsyncResult(Future<T> submit) Declaration public AsyncResult(Future<T> submit) Parameters Type Name Description Future<T> submit Methods cancel(boolean mayInterruptIfRunning) Declaration public boolean cancel(boolean mayInterruptIfRunning) Parameters Type Name Description boolean mayInterruptIfRunning Returns Type Description boolean get() Declaration public T get() Returns Type Description T isCancelled() Declaration public boolean isCancelled() Returns Type Description boolean isDone() Declaration public boolean isDone() Returns Type Description boolean"
  },
  "api/net.abi.abis_engine.util.async._async_task.html": {
    "href": "api/net.abi.abis_engine.util.async._async_task.html",
    "title": "Interface AsyncTask<T>",
    "keywords": "Interface AsyncTask<T> Namespace : Assembly : .dll Syntax public interface AsyncTask<T> Type Parameters Name Description net_abi_abis_engine_util_async__async_task Methods call() Declaration public T call() Returns Type Description T"
  },
  "api/net.abi.abis_engine.util.async._async_thread_dispatcher.html": {
    "href": "api/net.abi.abis_engine.util.async._async_thread_dispatcher.html",
    "title": "Class AsyncThreadDispatcher",
    "keywords": "Class AsyncThreadDispatcher Inheritance java.lang.Object AsyncThreadDispatcher Namespace : Assembly : .dll Syntax public class AsyncThreadDispatcher Constructors AsyncThreadDispatcher(int maxThreads, String threadNameSuffix) Declaration public AsyncThreadDispatcher(int maxThreads, String threadNameSuffix) Parameters Type Name Description int maxThreads String threadNameSuffix Methods dispose() Declaration public void dispose() submit(AsyncTask<T> task) Declaration public <T> AsyncResult<T> submit(AsyncTask<T> task) Parameters Type Name Description AsyncTask <T> task Returns Type Description <T> AsyncResult <T>"
  },
  "api/net.abi.abis_engine.util.async.html": {
    "href": "api/net.abi.abis_engine.util.async.html",
    "title": "Namespace net.abi.abisEngine.util.async",
    "keywords": "Namespace net.abi.abisEngine.util.async Classes Async AsyncResult<T> AsyncThreadDispatcher Interfaces AsyncTask<T>"
  },
  "api/net.abi.abis_engine.util.cacheing._generic_cache.html": {
    "href": "api/net.abi.abis_engine.util.cacheing._generic_cache.html",
    "title": "Class GenericCache<K,V>",
    "keywords": "Class GenericCache<K,V> Inheritance java.lang.Object Expendable GenericCacheI<K,V> GenericCache<K,V> Namespace : Assembly : .dll Syntax public class GenericCache<K,V> implements GenericCacheI<K, V> Type Parameters Name Description net_abi_abis_engine_util_cacheing__generic_cache net_abi_abis_engine_util_cacheing__generic_cache Constructors GenericCache(Class k, Class v) Declaration public GenericCache(Class k, Class v) Parameters Type Name Description Class k Class v Methods containsKey(K key) Declaration public boolean containsKey(K key) Parameters Type Name Description K key Returns Type Description boolean Overrides GenericCacheI<K,V>.containsKey(K key) containsValue(V value) Declaration public boolean containsValue(V value) Parameters Type Name Description V value Returns Type Description boolean Overrides GenericCacheI<K,V>.containsValue(V value) dispose() Declaration public void dispose() Overrides Expendable.dispose() get(K key) Declaration public V get(K key) Parameters Type Name Description K key Returns Type Description V Overrides GenericCacheI<K,V>.get(K key) getSize() Declaration public int getSize() Returns Type Description int Overrides GenericCacheI<K,V>.getSize() printStatistics() Declaration public void printStatistics() Overrides GenericCacheI<K,V>.printStatistics() put(K key, V value) Declaration public void put(K key, V value) Parameters Type Name Description K key V value Overrides GenericCacheI<K,V>.put(K key, V value)"
  },
  "api/net.abi.abis_engine.util.cacheing._generic_cache_i.html": {
    "href": "api/net.abi.abis_engine.util.cacheing._generic_cache_i.html",
    "title": "Interface GenericCacheI<K,V>",
    "keywords": "Interface GenericCacheI<K,V> Inherited Members Expendable.dispose() Namespace : Assembly : .dll Syntax public interface GenericCacheI<K,V> extends Expendable Type Parameters Name Description net_abi_abis_engine_util_cacheing__generic_cache_i net_abi_abis_engine_util_cacheing__generic_cache_i Methods containsKey(K key) Declaration public boolean containsKey(K key) Parameters Type Name Description K key Returns Type Description boolean containsValue(V value) Declaration public boolean containsValue(V value) Parameters Type Name Description V value Returns Type Description boolean get(K key) Declaration public V get(K key) Parameters Type Name Description K key Returns Type Description V getSize() Declaration public int getSize() Returns Type Description int printStatistics() Declaration public void printStatistics() put(K key, V value) Declaration public void put(K key, V value) Parameters Type Name Description K key V value"
  },
  "api/net.abi.abis_engine.util.cacheing._two_factor_generic_cache.html": {
    "href": "api/net.abi.abis_engine.util.cacheing._two_factor_generic_cache.html",
    "title": "Class TwoFactorGenericCache<F,K,V>",
    "keywords": "Class TwoFactorGenericCache<F,K,V> Inheritance java.lang.Object Expendable TwoFactorGenericCacheI<F,K,V> TwoFactorGenericCache<F,K,V> Namespace : Assembly : .dll Syntax public class TwoFactorGenericCache<F,K,V> implements TwoFactorGenericCacheI<F, K, V> Type Parameters Name Description net_abi_abis_engine_util_cacheing__two_factor_generic_cache net_abi_abis_engine_util_cacheing__two_factor_generic_cache net_abi_abis_engine_util_cacheing__two_factor_generic_cache Constructors TwoFactorGenericCache(Class factor, Class factorTwo, Class value) Declaration public TwoFactorGenericCache(Class factor, Class factorTwo, Class value) Parameters Type Name Description Class factor Class factorTwo Class value Methods contains(F factor) Declaration public boolean contains(F factor) Parameters Type Name Description F factor Returns Type Description boolean Overrides TwoFactorGenericCacheI<F,K,V>.contains(F factor) contains(F factor, K key) Declaration public boolean contains(F factor, K key) Parameters Type Name Description F factor K key Returns Type Description boolean Overrides TwoFactorGenericCacheI<F,K,V>.contains(F factor, K key) contains(F factor, K key, V value) Declaration public boolean contains(F factor, K key, V value) Parameters Type Name Description F factor K key V value Returns Type Description boolean Overrides TwoFactorGenericCacheI<F,K,V>.contains(F factor, K key, V value) dispose() Declaration public void dispose() Overrides Expendable.dispose() get(F factorOne) Declaration public HashMap<K, V> get(F factorOne) Parameters Type Name Description F factorOne Returns Type Description HashMap<K, V> Overrides TwoFactorGenericCacheI<F,K,V>.get(F factorOne) get(F factorOne, K factorTwo) Declaration public V get(F factorOne, K factorTwo) Parameters Type Name Description F factorOne K factorTwo Returns Type Description V Overrides TwoFactorGenericCacheI<F,K,V>.get(F factorOne, K factorTwo) getSize() Declaration public int getSize() Returns Type Description int Overrides TwoFactorGenericCacheI<F,K,V>.getSize() getSize(F factor) Declaration public int getSize(F factor) Parameters Type Name Description F factor Returns Type Description int Overrides TwoFactorGenericCacheI<F,K,V>.getSize(F factor) printStatistics() Declaration public void printStatistics() Overrides TwoFactorGenericCacheI<F,K,V>.printStatistics() put(F factorOne) Declaration public HashMap<K, V> put(F factorOne) Parameters Type Name Description F factorOne Returns Type Description HashMap<K, V> Overrides TwoFactorGenericCacheI<F,K,V>.put(F factorOne) put(F factorOne, K factorTwo, V value) Declaration public V put(F factorOne, K factorTwo, V value) Parameters Type Name Description F factorOne K factorTwo V value Returns Type Description V Overrides TwoFactorGenericCacheI<F,K,V>.put(F factorOne, K factorTwo, V value) remove(F factor, K key) Declaration public void remove(F factor, K key) Parameters Type Name Description F factor K key Overrides TwoFactorGenericCacheI<F,K,V>.remove(F factor, K key)"
  },
  "api/net.abi.abis_engine.util.cacheing._two_factor_generic_cache_i.html": {
    "href": "api/net.abi.abis_engine.util.cacheing._two_factor_generic_cache_i.html",
    "title": "Interface TwoFactorGenericCacheI<F,K,V>",
    "keywords": "Interface TwoFactorGenericCacheI<F,K,V> Inherited Members Expendable.dispose() Namespace : Assembly : .dll Syntax public interface TwoFactorGenericCacheI<F,K,V> extends Expendable Type Parameters Name Description net_abi_abis_engine_util_cacheing__two_factor_generic_cache_i net_abi_abis_engine_util_cacheing__two_factor_generic_cache_i net_abi_abis_engine_util_cacheing__two_factor_generic_cache_i Methods contains(F factor) Declaration public boolean contains(F factor) Parameters Type Name Description F factor Returns Type Description boolean contains(F factor, K key) Declaration public boolean contains(F factor, K key) Parameters Type Name Description F factor K key Returns Type Description boolean contains(F factor, K key, V value) Declaration public boolean contains(F factor, K key, V value) Parameters Type Name Description F factor K key V value Returns Type Description boolean get(F factorOne) Declaration public HashMap<K, V> get(F factorOne) Parameters Type Name Description F factorOne Returns Type Description HashMap<K, V> get(F factorOne, K factorTwo) Declaration public V get(F factorOne, K factorTwo) Parameters Type Name Description F factorOne K factorTwo Returns Type Description V getSize() Declaration public int getSize() Returns Type Description int getSize(F factor) Declaration public int getSize(F factor) Parameters Type Name Description F factor Returns Type Description int printStatistics() Declaration public void printStatistics() put(F factorOne) Declaration public HashMap<K, V> put(F factorOne) Parameters Type Name Description F factorOne Returns Type Description HashMap<K, V> put(F factorOne, K factorTwo, V value) Declaration public V put(F factorOne, K factorTwo, V value) Parameters Type Name Description F factorOne K factorTwo V value Returns Type Description V remove(F factor, K key) Declaration public void remove(F factor, K key) Parameters Type Name Description F factor K key"
  },
  "api/net.abi.abis_engine.util.cacheing.html": {
    "href": "api/net.abi.abis_engine.util.cacheing.html",
    "title": "Namespace net.abi.abisEngine.util.cacheing",
    "keywords": "Namespace net.abi.abisEngine.util.cacheing Classes GenericCache<K,V> TwoFactorGenericCache<F,K,V> Interfaces GenericCacheI<K,V> TwoFactorGenericCacheI<F,K,V>"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_cursor_initialization_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_cursor_initialization_exception.html",
    "title": "Class AECursorInitializationException",
    "keywords": "Class AECursorInitializationException Inheritance java.lang.Object Exception AEException AECursorInitializationException Inherited Members AEException.AEException(String cause) Namespace : Assembly : .dll Syntax public class AECursorInitializationException extends AEException Constructors AECursorInitializationException(String cause) Declaration public AECursorInitializationException(String cause) Parameters Type Name Description String cause AECursorInitializationException(String cause, StaticCursor c) Declaration public AECursorInitializationException(String cause, StaticCursor c) Parameters Type Name Description String cause GLFWWindow.StaticCursor c"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_exception.html",
    "title": "Class AEException",
    "keywords": "Class AEException Inheritance java.lang.Object Exception AEException Namespace : Assembly : .dll Syntax public class AEException Constructors AEException(String cause) Declaration public AEException(String cause) Parameters Type Name Description String cause"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_g_l_f_w_window_initialization_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_g_l_f_w_window_initialization_exception.html",
    "title": "Class AEGLFWWindowInitializationException",
    "keywords": "Class AEGLFWWindowInitializationException Inheritance java.lang.Object Exception AEException AEGLFWWindowInitializationException Inherited Members AEException.AEException(String cause) Namespace : Assembly : .dll Syntax public class AEGLFWWindowInitializationException extends AEException Constructors AEGLFWWindowInitializationException(String cause) Declaration public AEGLFWWindowInitializationException(String cause) Parameters Type Name Description String cause AEGLFWWindowInitializationException(String cause, GLFWWindow wnd) Declaration public AEGLFWWindowInitializationException(String cause, GLFWWindow wnd) Parameters Type Name Description String cause GLFWWindow wnd"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_i_o_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_i_o_exception.html",
    "title": "Class AEIOException",
    "keywords": "Class AEIOException Inheritance java.lang.Object RuntimeException AERuntimeException AEIOException Inherited Members AERuntimeException.AERuntimeException(Throwable cause) AERuntimeException.AERuntimeException(String cause, Throwable t) AERuntimeException.AERuntimeException(String cause) AERuntimeException.AERuntimeException(String cause, Exception e) Namespace : Assembly : .dll Syntax public class AEIOException extends AERuntimeException Constructors AEIOException(IOException e) Declaration public AEIOException(IOException e) Parameters Type Name Description IOException e"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_image_manipulation_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_image_manipulation_exception.html",
    "title": "Class AEImageManipulationException",
    "keywords": "Class AEImageManipulationException Inheritance java.lang.Object Exception AEException AEImageManipulationException Inherited Members AEException.AEException(String cause) Namespace : Assembly : .dll Syntax public class AEImageManipulationException extends AEException Constructors AEImageManipulationException(String cause) Declaration public AEImageManipulationException(String cause) Parameters Type Name Description String cause"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_runtime_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_runtime_exception.html",
    "title": "Class AERuntimeException",
    "keywords": "Class AERuntimeException Inheritance java.lang.Object RuntimeException AERuntimeException Namespace : Assembly : .dll Syntax public class AERuntimeException Constructors AERuntimeException(String cause) Declaration public AERuntimeException(String cause) Parameters Type Name Description String cause AERuntimeException(String cause, Exception e) Declaration public AERuntimeException(String cause, Exception e) Parameters Type Name Description String cause Exception e AERuntimeException(String cause, Throwable t) Declaration public AERuntimeException(String cause, Throwable t) Parameters Type Name Description String cause Throwable t AERuntimeException(Throwable cause) Declaration public AERuntimeException(Throwable cause) Parameters Type Name Description Throwable cause"
  },
  "api/net.abi.abis_engine.util.exceptions._a_e_shader_compiler_runtime_exception.html": {
    "href": "api/net.abi.abis_engine.util.exceptions._a_e_shader_compiler_runtime_exception.html",
    "title": "Class AEShaderCompilerRuntimeException",
    "keywords": "Class AEShaderCompilerRuntimeException Inheritance java.lang.Object RuntimeException AERuntimeException AEShaderCompilerRuntimeException Inherited Members AERuntimeException.AERuntimeException(Throwable cause) AERuntimeException.AERuntimeException(String cause, Throwable t) AERuntimeException.AERuntimeException(String cause) AERuntimeException.AERuntimeException(String cause, Exception e) Namespace : Assembly : .dll Syntax public class AEShaderCompilerRuntimeException extends AERuntimeException Constructors AEShaderCompilerRuntimeException(String cause) Declaration public AEShaderCompilerRuntimeException(String cause) Parameters Type Name Description String cause AEShaderCompilerRuntimeException(String cause, Throwable t) Declaration public AEShaderCompilerRuntimeException(String cause, Throwable t) Parameters Type Name Description String cause Throwable t"
  },
  "api/net.abi.abis_engine.util.exceptions.html": {
    "href": "api/net.abi.abis_engine.util.exceptions.html",
    "title": "Namespace net.abi.abisEngine.util.exceptions",
    "keywords": "Namespace net.abi.abisEngine.util.exceptions Classes AECursorInitializationException AEException AEGLFWWindowInitializationException AEIOException AEImageManipulationException AERuntimeException AEShaderCompilerRuntimeException"
  },
  "api/net.abi.abis_engine.util.html": {
    "href": "api/net.abi.abis_engine.util.html",
    "title": "Namespace net.abi.abisEngine.util",
    "keywords": "Namespace net.abi.abisEngine.util Classes Attenuation Color This Class Allows To Have A Alpha Value To Be Set And Wraps Around A Vector3f To Include Alpha As Well. IOUtil This class was adapted from MappedValues ThreadUtils Utilities for threaded programming. Util Interfaces Expendable An interface used to identify and organize entitys which can be destroyed at run time or at the end of runtime. Caution: Implementing this interface means that the object CAN be destroyed, unlike static objects which last for all runtime."
  },
  "api/tests.render_test._start.html": {
    "href": "api/tests.render_test._start.html",
    "title": "Class Start",
    "keywords": "Class Start Inheritance java.lang.Object Main Start Namespace : Assembly : .dll Syntax public class Start extends Main Methods main(String[] args) Declaration public static void main(String[] args) Parameters Type Name Description String [] args openStartingWindow(CoreEngine e) Declaration protected void openStartingWindow(CoreEngine e) Parameters Type Name Description CoreEngine e run(String[] args) Declaration public void run(String[] args) Parameters Type Name Description String [] args"
  },
  "api/tests.render_test.entitys._flat_plane.html": {
    "href": "api/tests.render_test.entitys._flat_plane.html",
    "title": "Class FlatPlane",
    "keywords": "Class FlatPlane Inheritance java.lang.Object EntityI Entity FlatPlane Inherited Members Entity.addChild(Entity child) Entity.addComponent(SceneComponent gameComponent) Entity.addToScene() Entity.Entity() Entity.getAllAttached() Entity.getChildren() Entity.getComponents() Entity.getParentScene() Entity.getTransform() Entity.init() Entity.input(float delta) Entity.inputAll(float delta) Entity.render(Shader shader, RenderingEngine engine) Entity.renderAll(Shader shader, RenderingEngine engine) Entity.setChildren(ArrayList<Entity> children) Entity.setComponents(ArrayList<SceneComponent> components) Entity.setParentScene(Scene prntScene) Entity.setTransform(Transform transform) Entity.update(float delta) Entity.updateAll(float delta) Namespace : Assembly : .dll Syntax public class FlatPlane extends Entity Constructors FlatPlane() Declaration public FlatPlane()"
  },
  "api/tests.render_test.entitys._monkey_head.html": {
    "href": "api/tests.render_test.entitys._monkey_head.html",
    "title": "Class MonkeyHead",
    "keywords": "Class MonkeyHead Monkey Head Inheritance java.lang.Object EntityI Entity MonkeyHead Inherited Members Entity.addChild(Entity child) Entity.addComponent(SceneComponent gameComponent) Entity.addToScene() Entity.Entity() Entity.getAllAttached() Entity.getChildren() Entity.getComponents() Entity.getParentScene() Entity.getTransform() Entity.init() Entity.input(float delta) Entity.inputAll(float delta) Entity.render(Shader shader, RenderingEngine engine) Entity.renderAll(Shader shader, RenderingEngine engine) Entity.setChildren(ArrayList<Entity> children) Entity.setComponents(ArrayList<SceneComponent> components) Entity.setParentScene(Scene prntScene) Entity.setTransform(Transform transform) Entity.update(float delta) Entity.updateAll(float delta) Namespace : Assembly : .dll Syntax public class MonkeyHead extends Entity"
  },
  "api/tests.render_test.entitys.html": {
    "href": "api/tests.render_test.entitys.html",
    "title": "Namespace tests.renderTest.entitys",
    "keywords": "Namespace tests.renderTest.entitys Classes FlatPlane MonkeyHead Monkey Head"
  },
  "api/tests.render_test.html": {
    "href": "api/tests.render_test.html",
    "title": "Namespace tests.renderTest",
    "keywords": "Namespace tests.renderTest Classes Start"
  },
  "api/tests.render_test.materials._bricks_one.html": {
    "href": "api/tests.render_test.materials._bricks_one.html",
    "title": "Class BricksOne",
    "keywords": "Class BricksOne Inheritance java.lang.Object MappedValues Material BricksOne Inherited Members Material.addColor(String name, Color value) MappedValues.addFloat(String name, float value) Material.addTexture(String name, Texture texture) MappedValues.addVector3f(String name, Vector3f value) Material.DEFAULT_MATERIAL Material.DEFAULT_TEXTURE Material.getColor(String name) Material.getColorBinds() MappedValues.getFloat(String name) Material.getTexture(String name) Material.getTextureBinds() MappedValues.getVector3f(String name) MappedValues.MappedValues() Material.Material() Namespace : Assembly : .dll Syntax public class BricksOne extends Material Constructors BricksOne() Declaration public BricksOne()"
  },
  "api/tests.render_test.materials._bricks_two.html": {
    "href": "api/tests.render_test.materials._bricks_two.html",
    "title": "Class BricksTwo",
    "keywords": "Class BricksTwo Inheritance java.lang.Object MappedValues Material BricksTwo Inherited Members Material.addColor(String name, Color value) MappedValues.addFloat(String name, float value) Material.addTexture(String name, Texture texture) MappedValues.addVector3f(String name, Vector3f value) Material.DEFAULT_MATERIAL Material.DEFAULT_TEXTURE Material.getColor(String name) Material.getColorBinds() MappedValues.getFloat(String name) Material.getTexture(String name) Material.getTextureBinds() MappedValues.getVector3f(String name) MappedValues.MappedValues() Material.Material() Namespace : Assembly : .dll Syntax public class BricksTwo extends Material Constructors BricksTwo() Declaration public BricksTwo()"
  },
  "api/tests.render_test.materials.html": {
    "href": "api/tests.render_test.materials.html",
    "title": "Namespace tests.renderTest.materials",
    "keywords": "Namespace tests.renderTest.materials Classes BricksOne BricksTwo"
  },
  "api/tests.render_test.scenes._main_menu.html": {
    "href": "api/tests.render_test.scenes._main_menu.html",
    "title": "Class MainMenu",
    "keywords": "Class MainMenu Inheritance java.lang.Object Scene MainMenu Inherited Members Scene.addCamera(Camera cam) Scene.addChild(Entity child) Scene.addComponent(SceneComponent component) Scene.addLight(Light light) Scene.addToSceneManager() Scene.finalize() Scene.getCamera(String name) Scene.getCameras() Scene.getId() Scene.getLights() Scene.getMainCamera() Scene.getName() Scene.getParentWindow() Scene.getRoot() Scene.getRootObject() Scene.isInitialized() Scene.render(RenderingEngine rndEng) Scene.Scene(String name, GLFWWindow prnt) Scene.setAsParentScene() Scene.setCameras(Map<String, Camera> cameras) Scene.setId(UUID id) Scene.setInitialized(boolean initialized) Scene.setLights(ArrayList<Light> lights) Scene.setMainCamera(String name) Scene.setMainCamera(Camera mainCamera) Scene.setName(String name) Scene.setParentWindow(GLFWWindow parentWindow) Scene.setRoot(Entity root) Scene.toString() Namespace : Assembly : .dll Syntax public class MainMenu extends Scene Constructors MainMenu(GLFWWindow prnt) Declaration public MainMenu(GLFWWindow prnt) Parameters Type Name Description GLFWWindow prnt Methods init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/tests.render_test.scenes._test_game.html": {
    "href": "api/tests.render_test.scenes._test_game.html",
    "title": "Class TestGame",
    "keywords": "Class TestGame Inheritance java.lang.Object Scene TestGame Inherited Members Scene.addCamera(Camera cam) Scene.addChild(Entity child) Scene.addComponent(SceneComponent component) Scene.addLight(Light light) Scene.addToSceneManager() Scene.finalize() Scene.getCamera(String name) Scene.getCameras() Scene.getId() Scene.getLights() Scene.getMainCamera() Scene.getName() Scene.getParentWindow() Scene.getRoot() Scene.getRootObject() Scene.isInitialized() Scene.render(RenderingEngine rndEng) Scene.Scene(String name, GLFWWindow prnt) Scene.setAsParentScene() Scene.setCameras(Map<String, Camera> cameras) Scene.setId(UUID id) Scene.setInitialized(boolean initialized) Scene.setLights(ArrayList<Light> lights) Scene.setMainCamera(String name) Scene.setMainCamera(Camera mainCamera) Scene.setName(String name) Scene.setParentWindow(GLFWWindow parentWindow) Scene.setRoot(Entity root) Scene.toString() Namespace : Assembly : .dll Syntax public class TestGame extends Scene Constructors TestGame(GLFWWindow prnt) Declaration public TestGame(GLFWWindow prnt) Parameters Type Name Description GLFWWindow prnt Methods init() Declaration public void init() input(float delta) Declaration public void input(float delta) Parameters Type Name Description float delta update(float delta) Declaration public void update(float delta) Parameters Type Name Description float delta"
  },
  "api/tests.render_test.scenes.html": {
    "href": "api/tests.render_test.scenes.html",
    "title": "Namespace tests.renderTest.scenes",
    "keywords": "Namespace tests.renderTest.scenes Classes MainMenu TestGame"
  },
  "api/tests.render_test.windows._main_game.html": {
    "href": "api/tests.render_test.windows._main_game.html",
    "title": "Class MainGame",
    "keywords": "Class MainGame Inheritance java.lang.Object Expendable GLFWWindow MainGame Inherited Members GLFWWindow.addGLFWWindowHint(int hint, int value) GLFWWindow.addScene(Scene scene) GLFWWindow.centerWindow() GLFWWindow.closeWindow() GLFWWindow.create(long share) GLFWWindow.create(long monitor, long share, RenderingEngine rndEng) GLFWWindow.create(long monitor, RenderingEngine rndEng) GLFWWindow.create(RenderingEngine rndEng) GLFWWindow.create() GLFWWindow.dispose() GLFWWindow.focusWindow() GLFWWindow.genUniqueID() GLFWWindow.getAssetManager() GLFWWindow.getAttribute(int attrib) GLFWWindow.getCapabilities() GLFWWindow.getCenter() GLFWWindow.getGlfw_Handle() GLFWWindow.getID() GLFWWindow.getMonitor() GLFWWindow.getPHeight() GLFWWindow.getProperties() GLFWWindow.getPWidth() GLFWWindow.getRenderEngine() GLFWWindow.getSceneManager() GLFWWindow.getTitle() GLFWWindow.getWindowName() GLFWWindow.getWindowOpacity() GLFWWindow.GLFW_CLIENT_API GLFWWindow.GLFW_FOCUSED GLFWWindow.GLFW_RED_BITS GLFWWindow.GLFW_TRUE GLFWWindow.GLFWWindow() GLFWWindow.GLFWWindow(GLFWWindowProperties props) GLFWWindow.GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync) GLFWWindow.GLFWWindow(int sc_width, int sc_height, String name, String title, boolean fullscreen, int vSync, long preferedMonitor) GLFWWindow.hideWindow() GLFWWindow.id GLFWWindow.input(float delta) GLFWWindow.isCloseRequested() GLFWWindow.isFocused() GLFWWindow.isFullscreen() GLFWWindow.isMinimized() GLFWWindow.isvSync() GLFWWindow.minimizeWindow() GLFWWindow.NULL GLFWWindow.properties GLFWWindow.render() GLFWWindow.requestFocus() GLFWWindow.resetToDefaults() GLFWWindow.restoreWindow() GLFWWindow.setAssetStore(AssetStore store) GLFWWindow.setAttribute(int attrib, int value) GLFWWindow.setCursor(CursorI cursor) GLFWWindow.setCursorType() GLFWWindow.setFullscreen(boolean fullscreen) GLFWWindow.setMonitor() GLFWWindow.setPreferredMonitor(long prfdMntr) GLFWWindow.setProperties(GLFWWindowProperties properties) GLFWWindow.setRenderEngine(RenderingEngine rndEng) GLFWWindow.setSceneManager(SceneManager sceneManager) GLFWWindow.setSizeLimit(int minwidth, int minheight, int maxwidth, int maxheight) GLFWWindow.setTitle(String title) GLFWWindow.setvSync(int vSync) GLFWWindow.setWindowIcon(AEImage... icons) GLFWWindow.setWindowMonitor() GLFWWindow.setWindowOpacity(float opacity) GLFWWindow.setWindowPosition(Vector2i newPos) GLFWWindow.setWindowPosition(int xpos, int ypos) GLFWWindow.setWindowTitle(String title) GLFWWindow.showWindow() GLFWWindow.swapBuffers() GLFWWindow.toggleFullScreen() GLFWWindow.toggleVSync() GLFWWindow.toString() GLFWWindow.update(float delta) GLFWWindow.videoMode Namespace : Assembly : .dll Syntax public class MainGame extends GLFWWindow Constructors MainGame() Declaration public MainGame() Methods addScenes() Declaration protected void addScenes() close() Declaration protected void close() post_init() Declaration protected void post_init() pre_init() Declaration protected void pre_init()"
  },
  "api/tests.render_test.windows.html": {
    "href": "api/tests.render_test.windows.html",
    "title": "Namespace tests.renderTest.windows",
    "keywords": "Namespace tests.renderTest.windows Classes MainGame"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE.",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}