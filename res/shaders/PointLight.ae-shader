AE_SHADER_NAME: "!!AE_SHADER_FILE_NAME"
AE_SHADER_DESC: "Shader for PointLight."
AE_PREP_PROPERTIES:
  - AE_PREP_PROPERTY_IDENTIFIER: "GL_ENABLE"
    AE_PREP_PROPERTY_PARAMETERS: ["BLEND"]
  - AE_PREP_PROPERTY_IDENTIFIER: "BLEND_FUNC"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_ONE_MINUS_SRC", "GL_ONE"]
  - AE_PREP_PROPERTY_IDENTIFIER: "DEPTH_MASK"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_FALSE"]
  - AE_PREP_PROPERTY_IDENTIFIER: "DEPTH_FUNC"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_EQUAL"]
  - AE_PREP_PROPERTY_IDENTIFIER: "GL_DRAW_MODE"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_TRIANGLES"]
AE_SHADER_GLSL_PROGRAMS:
  - AE_SHADER_GLSL_PROGRAM_TYPE: "AE_VERTEX_SHADER"
    AE_SHADER_GLSL_PROGRAM_NAME: "vertex_shader"
    AE_SHADER_GLSL_PROGRAM_SOURCE: |
      #version 330 core
      #include "includes/lighting-vert.glh"
  - AE_SHADER_GLSL_PROGRAM_TYPE: "AE_FRAGMENT_SHADER"
    AE_SHADER_GLSL_PROGRAM_NAME: "fragment_shader"
    AE_SHADER_GLSL_PROGRAM_SOURCE: |
      #version 330 core
      #include "includes/lighting-frag.glh"
      uniform PointLight R_pointLight;
      vec4 calcLighting(vec3 normal, vec3 worldPos) {
        return calcPointLight(R_pointLight, normal, worldPos);
      }
      #include "includes/lighting-main.glh"
AE_DEMO_PROPERTIES:
  - AE_DEMO_PROPERTY_IDENTIFIER: "GL_DISABLE"
    AE_DEMO_PROPERTY_PARAMETERS: ["BLEND"]
  - AE_DEMO_PROPERTY_IDENTIFIER: "BLEND_FUNC"
    AE_DEMO_PROPERTY_PARAMETERS: ["GL_ONE_MINUS_SRC", "GL_ONE"]
  - AE_DEMO_PROPERTY_IDENTIFIER: "DEPTH_MASK"
    AE_DEMO_PROPERTY_PARAMETERS: ["GL_FALSE"]
  - AE_DEMO_PROPERTY_IDENTIFIER: "DEPTH_FUNC"
    AE_DEMO_PROPERTY_PARAMETERS: ["GL_EQUAL"]
  - AE_DEMO_PROPERTY_IDENTIFIER: "GL_DRAW_MODE"
    AE_DEMO_PROPERTY_PARAMETERS: ["GL_TRIANGLES"]
