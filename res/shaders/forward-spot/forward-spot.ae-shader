AE_SHADER_NAME: "forward-spot"
AE_SHADER_DESC: "shader for spotlight"
AE_PREP_PROPERTIES:
  - AE_PREP_PROPERTY_IDENTIFIER: "GL_ENABLE"
    AE_PREP_PROPERTY_PARAMETERS: ["BLEND"]
  - AE_PREP_PROPERTY_IDENTIFIER: "BLEND_FUNC"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_ONE", "GL_ONE"]
  - AE_PREP_PROPERTY_IDENTIFIER: "DEPTH_MASK"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_FALSE"]
  - AE_PREP_PROPERTY_IDENTIFIER: "DEPTH_FUNC"
    AE_PREP_PROPERTY_PARAMETERS: ["GL_EQUAL"]
AE_SHADER_GLSL_PROGRAMS:
  - AE_SHADER_GLSL_PROGRAM_TYPE: "AE_VERTEX_SHADER"
    AE_SHADER_GLSL_PROGRAM_NAME: "vertex_shader"
    AE_SHADER_GLSL_PROGRAM_SOURCE: |
      #version 330 core
      #import AE_LIGHTING_IMPORTS:{"LIGHTING_VERTEX"}
  - AE_SHADER_GLSL_PROGRAM_TYPE: "AE_FRAGMENT_SHADER"
    AE_SHADER_GLSL_PROGRAM_NAME: "fragment_shader"
    AE_SHADER_GLSL_PROGRAM_SOURCE: |
      #version 330 core
      #import AE_LIGHTING_IMPORTS:{"LIGHTING_FRAGMENT"}
      uniform SpotLight R_spotLight;
      vec4 calcLighting(vec3 normal, vec3 worldPos) {
        return calcSpotLight(R_spotLight, normal, worldPos);
      }
      #import AE_LIGHTING_IMPORTS:{"LIGHTING_FRAGMENT_MAIN"}