/*******************************************************************************
 * Copyright 2020 Abinash Singh | ABI INC.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/
package net.abi.abisEngine.rendering.shader.compiler;

import static org.lwjgl.opengl.GL11.glGetInteger;
import static org.lwjgl.opengl.GL15.GL_ARRAY_BUFFER;
import static org.lwjgl.opengl.GL15.GL_ARRAY_BUFFER_BINDING;
import static org.lwjgl.opengl.GL15.GL_BUFFER_SIZE;
import static org.lwjgl.opengl.GL15.GL_ELEMENT_ARRAY_BUFFER_BINDING;
import static org.lwjgl.opengl.GL15.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
import static org.lwjgl.opengl.GL15.glBindBuffer;
import static org.lwjgl.opengl.GL15.glGetBufferParameteri;
import static org.lwjgl.opengl.GL20.GL_ACTIVE_UNIFORMS;
import static org.lwjgl.opengl.GL20.GL_FLOAT_MAT2;
import static org.lwjgl.opengl.GL20.GL_FLOAT_MAT3;
import static org.lwjgl.opengl.GL20.GL_FLOAT_MAT4;
import static org.lwjgl.opengl.GL20.GL_MAX_VERTEX_ATTRIBS;
import static org.lwjgl.opengl.GL20.GL_VERTEX_ATTRIB_ARRAY_ENABLED;
import static org.lwjgl.opengl.GL20.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED;
import static org.lwjgl.opengl.GL20.GL_VERTEX_ATTRIB_ARRAY_SIZE;
import static org.lwjgl.opengl.GL20.GL_VERTEX_ATTRIB_ARRAY_STRIDE;
import static org.lwjgl.opengl.GL20.GL_VERTEX_ATTRIB_ARRAY_TYPE;
import static org.lwjgl.opengl.GL20.glGetProgramiv;
import static org.lwjgl.opengl.GL20.glGetVertexAttribi;
import static org.lwjgl.opengl.GL20.glIsProgram;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT2x3;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT2x4;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT3x2;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT3x4;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT4x2;
import static org.lwjgl.opengl.GL21.GL_FLOAT_MAT4x3;
import static org.lwjgl.opengl.GL30.GL_VERTEX_ATTRIB_ARRAY_INTEGER;
import static org.lwjgl.opengl.GL30.glBindVertexArray;
import static org.lwjgl.opengl.GL30.glIsVertexArray;
import static org.lwjgl.opengl.GL33.GL_VERTEX_ATTRIB_ARRAY_DIVISOR;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT2;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT2x3;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT2x4;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT3;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT3x2;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT3x4;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT4;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT4x2;
import static org.lwjgl.opengl.GL40.GL_DOUBLE_MAT4x3;
import static org.lwjgl.opengl.GL43.GL_ACTIVE_RESOURCES;
import static org.lwjgl.opengl.GL43.GL_ACTIVE_VARIABLES;
import static org.lwjgl.opengl.GL43.GL_ARRAY_STRIDE;
import static org.lwjgl.opengl.GL43.GL_BLOCK_INDEX;
import static org.lwjgl.opengl.GL43.GL_BUFFER_BINDING;
import static org.lwjgl.opengl.GL43.GL_BUFFER_DATA_SIZE;
import static org.lwjgl.opengl.GL43.GL_IS_ROW_MAJOR;
import static org.lwjgl.opengl.GL43.GL_LOCATION;
import static org.lwjgl.opengl.GL43.GL_MATRIX_STRIDE;
import static org.lwjgl.opengl.GL43.GL_NAME_LENGTH;
import static org.lwjgl.opengl.GL43.GL_NUM_ACTIVE_VARIABLES;
import static org.lwjgl.opengl.GL43.GL_OFFSET;
import static org.lwjgl.opengl.GL43.GL_TYPE;
import static org.lwjgl.opengl.GL43.GL_UNIFORM;
import static org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK;
import static org.lwjgl.opengl.GL43.glGetProgramInterfacei;
import static org.lwjgl.opengl.GL43.glGetProgramResourceName;
import static org.lwjgl.opengl.GL43.glGetProgramResourceiv;

import java.io.PrintStream;
import java.util.HashMap;
import java.util.Map;

import org.lwjgl.opengl.ARBColorBufferFloat;
import org.lwjgl.opengl.ARBTextureCompressionBPTC;
import org.lwjgl.opengl.ATITextureCompression3DC;
import org.lwjgl.opengl.EXTPackedFloat;
import org.lwjgl.opengl.EXTTextureCompressionLATC;
import org.lwjgl.opengl.EXTTextureCompressionS3TC;
import org.lwjgl.opengl.EXTTextureInteger;
import org.lwjgl.opengl.EXTTextureSRGB;
import org.lwjgl.opengl.EXTTextureSnorm;
import org.lwjgl.opengl.GL45;
import org.lwjgl.opengl.GL46;
import org.lwjgl.opengles.APPLERGB422;

import net.abi.abisEngine.rendering.shader.AEShaderResource;

/**
 * A Static Class for grabbing quick and in depth info for certain things GL.
 * This Library has been ported from LightHouse3D's VSLGLInfo.
 * https://github.com/lighthouse3d/VSL
 */
public class AEGLInfo {
	public final static String EXTRACTOR_VERSION = "1.0.0";

	// OpenGL Fields And Variables for use in the Extractor
	// static local variables
	public static Map<Integer, String> spInternalF = new HashMap<>();
	public static Map<Integer, String> spDataF = new HashMap<>();
	public static Map<Integer, String> spTextureDataType = new HashMap<>();
	public static Map<Integer, String> spGLSLType = new HashMap<>();
	public static Map<Integer, Integer> spGLSLTypeSize = new HashMap<>();
	public static Map<Integer, String> spTextureFilter = new HashMap<>();
	public static Map<Integer, String> spTextureWrap = new HashMap<>();
	public static Map<Integer, String> spTextureCompFunc = new HashMap<>();
	public static Map<Integer, String> spTextureCompMode = new HashMap<>();
	public static Map<Integer, String> spTextureUnit = new HashMap<>();
	public static Map<Integer, Integer> spTextureBound = new HashMap<>();
	public static Map<Integer, String> spHint = new HashMap<>();
	public static Map<Integer, String> spTextureTarget = new HashMap<>();
	public static Map<Integer, String> spBufferAccess = new HashMap<>();
	public static Map<Integer, String> spBufferUsage = new HashMap<>();
	public static Map<Integer, String> spBufferBinding = new HashMap<>();
	public static Map<Integer, Integer> spBufferBound = new HashMap<>();
	public static Map<Integer, Integer> spBoundBuffer = new HashMap<>();
	public static Map<Integer, String> spShaderType = new HashMap<>();
	public static Map<Integer, String> spTransFeedBufferMode = new HashMap<>();
	public static Map<Integer, String> spGLSLPrimitives = new HashMap<>();
	public static Map<Integer, String> spTessGenSpacing = new HashMap<>();
	public static Map<Integer, String> spVertexOrder = new HashMap<>();
	public static Map<Integer, String> spShaderPrecision = new HashMap<>();
	public static Map<Integer, String> glslTypeToWord = new HashMap<>();

	public static PrintStream out = System.out;

	public static void setOutputStream(PrintStream _out) {
		out = _out;
	}

	public static void getVAOInfo(int buffer) {
		int count, info, prevBuffer;
		out.println();
		if (!glIsVertexArray(buffer)) {
			out.println("name: " + buffer + " is not a VAO");
			return;
		}
		out.println("VAO Info for name: " + buffer);
		glBindVertexArray(buffer);
		info = glGetInteger(GL_ELEMENT_ARRAY_BUFFER_BINDING);
		if (info != 0) {
			out.println("Element Array: " + info);
		}
		count = glGetInteger(GL_MAX_VERTEX_ATTRIBS);
		for (int i = 0; i < count; i++) {
			info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_ENABLED);
			if (info != 0) {
				out.println("Attrib index: " + i);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);
				out.println("    Buffer bound: " + info);
				prevBuffer = glGetInteger(GL_ARRAY_BUFFER_BINDING);
				glBindBuffer(GL_ARRAY_BUFFER, info);
				info = glGetBufferParameteri(GL_ARRAY_BUFFER, GL_BUFFER_SIZE);
				glBindBuffer(GL_ARRAY_BUFFER, prevBuffer);
				out.println("    Size: " + info);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_SIZE);
				out.println("    Components: " + info);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_TYPE);
				out.println("    Data Type: " + spDataF.get(info));
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_STRIDE);
				out.println("    Stride: " + info);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED);
				out.println("    Normalized: " + info);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_DIVISOR);
				out.println("    Divisor: " + info);
				info = glGetVertexAttribi(i, GL_VERTEX_ATTRIB_ARRAY_INTEGER);
				out.println("    Integer: " + info);
			}
		}
	}

	public static void getUniformsInfo(int program) {
		out.println();
		if (!glIsProgram(program)) {
			out.println("name: " + program + " is not a program");
			return;
		}
		int index, uniSize, uniMatStride, uniArrayStride;
		String name;
		int numUniforms;
		out.println("Uniforms Info for program: " + program + " {");
		int properties[] = { GL_BLOCK_INDEX, GL_TYPE, GL_NAME_LENGTH, GL_LOCATION, GL_ARRAY_STRIDE };
		int[] values = new int[1];
		// glGetProgramInterfaceiv(program, GL_UNIFORM, GL_ACTIVE_RESOURCES, values);
		glGetProgramiv(program, GL_ACTIVE_UNIFORMS, values);
		numUniforms = values[0];
		out.println("Num Uniforms: " + numUniforms + " {");
		for (int i = 0; i < numUniforms; i++) {
			values = new int[properties.length];
			glGetProgramResourceiv(program, GL_UNIFORM, i, properties, null, values);
			index = values[0];
			if (index == -1) {
				name = glGetProgramResourceName(program, GL_UNIFORM, i);
				out.println("\tName: " + name);
				out.println("\tType: " + spGLSLType.get(values[1]));
				out.println("\tLocation: " + values[3]);
				int auxSize;
				if (values[4] > 0) {
					auxSize = values[4] * spGLSLTypeSize.get(values[1]);
				} else {
					auxSize = spGLSLTypeSize.get(values[1]);
				}
				out.println("\tSize: " + auxSize);
				if (values[4] > 0) {
					out.println("\tStride: " + values[4]);
				}
			}
		}
		int blockQueryProperties[] = { GL_BUFFER_DATA_SIZE, GL_BUFFER_BINDING, GL_BLOCK_INDEX };
		int _blockQueryProperties[] = { GL_NUM_ACTIVE_VARIABLES };
		int activeUniformQueryProperties[] = { GL_ACTIVE_VARIABLES };
		int uniformQueryProperties[] = { GL_NAME_LENGTH, GL_TYPE, GL_LOCATION, GL_OFFSET, GL_ARRAY_STRIDE,
				GL_MATRIX_STRIDE, GL_IS_ROW_MAJOR };
		int count = glGetProgramInterfacei(program, GL_UNIFORM_BLOCK, GL_ACTIVE_RESOURCES);
		out.println("Uniform Block Objects: " + count + " {");
		for (int i = 0; i < count; i++) {
			out.println("\tBlock: " + i + " {");
			values = new int[blockQueryProperties.length];
			glGetProgramResourceiv(program, GL_UNIFORM_BLOCK, i, blockQueryProperties, null, values);
			name = glGetProgramResourceName(program, GL_UNIFORM_BLOCK, i);
			out.println("\t\tName: " + name + "\n\t\tSize: " + values[0]);
			out.println("\t\tBlock binding point: " + values[2]);
			out.println("\t\tBuffer Index: " + values[1]);
			values = new int[_blockQueryProperties.length];
			glGetProgramResourceiv(program, GL_UNIFORM_BLOCK, i, _blockQueryProperties, null, values);
			int numActiveUnifs = values[0];
			if (numActiveUnifs == 0) {
				continue;
			}
			values = new int[numActiveUnifs];
			glGetProgramResourceiv(program, GL_UNIFORM_BLOCK, i, activeUniformQueryProperties, null, values);
			int[] blockUnifs = values;
			out.println("\tMembers of block: " + numActiveUnifs + " : {");
			for (int k = 0; k < numActiveUnifs; k++) {
				out.println("\t{");
				values = new int[uniformQueryProperties.length];
				glGetProgramResourceiv(program, GL_UNIFORM, blockUnifs[k], uniformQueryProperties, null, values);
				name = glGetProgramResourceName(program, GL_UNIFORM, blockUnifs[k]);
				out.println("\t\t" + name + "\n\t\t" + spGLSLType.get(values[1]));
				out.println("\t\tOffset: " + values[3]);
				uniSize = spGLSLTypeSize.get(values[1]);
				uniArrayStride = values[4];
				uniMatStride = values[5];
				int auxSize;
				auxSize = getUniformByteSize(uniSize, values[1], uniArrayStride, uniMatStride);
				out.println("\t\tSize: " + auxSize);
				if (uniArrayStride > 0) {
					out.println("\t\tArray stride:" + uniArrayStride);
				}
				if (uniMatStride > 0) {
					out.println("\t\tMatrix stride:" + uniMatStride);
				}
				out.println("\t},");
			}
			out.println("\t}");
		}
		out.println("\t}\n\t}\n}");
	}

	private static void _processUniformBlocks(AEShaderResource _program) {
		String name;
		int activeUnif, actualLen, index, uniType, uniSize, uniMatStride, uniArrayStride, uniOffset;

		int program = _program.getProgram();

		// Get named blocks info
		int count, dataSize, info;
		count = GL45.glGetProgrami(program, GL45.GL_ACTIVE_UNIFORM_BLOCKS);

		for (int i = 0; i < count; i++) {
			// Get blocks name
			name = GL45.glGetActiveUniformBlockName(program, i);
			dataSize = GL45.glGetActiveUniformBlocki(program, i, GL45.GL_UNIFORM_BLOCK_DATA_SIZE);
			out.println(name + "\n  Size " + dataSize);

			index = GL45.glGetActiveUniformBlocki(program, i, GL45.GL_UNIFORM_BLOCK_BINDING);
			out.println("  Block binding point: " + index);
			info = GL45.glGetIntegeri(GL45.GL_UNIFORM_BUFFER_BINDING, index);
			out.println("  Buffer bound to binding point: " + info + " {");

			activeUnif = GL45.glGetActiveUniformBlocki(program, i, GL45.GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS);

			int[] indices;
			indices = new int[activeUnif];
			GL45.glGetActiveUniformBlockiv(program, i, GL45.GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, indices);
			for (int k = 0; k < activeUnif; k++) {
				name = GL45.glGetActiveUniformName(program, indices[k]);
				uniType = GL45.glGetActiveUniformsi(program, indices[k], GL45.GL_UNIFORM_TYPE);
				out.println("\t" + name + "\n\t    " + AEGLInfo.spGLSLType.get(uniType));

				uniOffset = GL45.glGetActiveUniformsi(program, indices[k], GL45.GL_UNIFORM_OFFSET);
				out.println("\t    offset: " + uniOffset);

				uniSize = GL45.glGetActiveUniformsi(program, indices[k], GL45.GL_UNIFORM_SIZE);

				uniArrayStride = GL45.glGetActiveUniformsi(program, indices[k], GL45.GL_UNIFORM_ARRAY_STRIDE);

				uniMatStride = GL45.glGetActiveUniformsi(program, indices[k], GL45.GL_UNIFORM_MATRIX_STRIDE);

				int auxSize;
				auxSize = AEGLInfo.getUniformByteSize(uniSize, uniType, uniArrayStride, uniMatStride);
				out.println("\t    size: " + auxSize);
				if (uniArrayStride > 0) {
					out.println("\t    array stride: " + uniArrayStride);
				}
				if (uniMatStride > 0) {
					out.println("\t    mat stride: " + uniMatStride);
				}
			}
		}
	}

	public static int getUniformByteSize(int uniSize, int uniType, int uniArrayStride, int uniMatStride) {
		int auxSize = 0;
		if (uniArrayStride > 0) {
			auxSize = uniArrayStride * uniSize;
		} else if (uniMatStride > 0) {
			switch (uniType) {
			case GL_FLOAT_MAT2:
			case GL_FLOAT_MAT2x3:
			case GL_FLOAT_MAT2x4:
			case GL_DOUBLE_MAT2:
			case GL_DOUBLE_MAT2x3:
			case GL_DOUBLE_MAT2x4:
				auxSize = 2 * uniMatStride;
				break;
			case GL_FLOAT_MAT3:
			case GL_FLOAT_MAT3x2:
			case GL_FLOAT_MAT3x4:
			case GL_DOUBLE_MAT3:
			case GL_DOUBLE_MAT3x2:
			case GL_DOUBLE_MAT3x4:
				auxSize = 3 * uniMatStride;
				break;
			case GL_FLOAT_MAT4:
			case GL_FLOAT_MAT4x2:
			case GL_FLOAT_MAT4x3:
			case GL_DOUBLE_MAT4:
			case GL_DOUBLE_MAT4x2:
			case GL_DOUBLE_MAT4x3:
				auxSize = 4 * uniMatStride;
				break;
			}
		} else {
			auxSize = spGLSLTypeSize.get(uniType);
		}
		return auxSize;
	}

	static {
		glslTypeToWord.put(GL45.GL_FLOAT, "float");
		glslTypeToWord.put(GL45.GL_FLOAT_VEC2, "vec2");
		glslTypeToWord.put(GL45.GL_FLOAT_VEC3, "vec3");
		glslTypeToWord.put(GL45.GL_FLOAT_VEC4, "vec4");
		glslTypeToWord.put(GL45.GL_DOUBLE, "double");
		glslTypeToWord.put(GL45.GL_DOUBLE_VEC2, "dvec2");
		glslTypeToWord.put(GL45.GL_DOUBLE_VEC3, "dvec3");
		glslTypeToWord.put(GL45.GL_DOUBLE_VEC4, "dvec4");
		glslTypeToWord.put(GL45.GL_INT, "int");
		glslTypeToWord.put(GL45.GL_INT_VEC2, "ivec2");
		glslTypeToWord.put(GL45.GL_INT_VEC3, "ivec3");
		glslTypeToWord.put(GL45.GL_INT_VEC4, "ivec4");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT, "unsigned int");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_VEC2, "uvec2");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_VEC3, "uvec3");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_VEC4, "uvec4");
		glslTypeToWord.put(GL45.GL_BOOL, "bool");
		glslTypeToWord.put(GL45.GL_BOOL_VEC2, "bvec2");
		glslTypeToWord.put(GL45.GL_BOOL_VEC3, "bvec3");
		glslTypeToWord.put(GL45.GL_BOOL_VEC4, "bvec4");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT2, "mat2");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT3, "mat3");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT4, "mat4");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT2x3, "mat2x3");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT2x4, "mat2x4");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT3x2, "mat3x2");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT3x4, "mat3x4");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT4x2, "mat4x2");
		glslTypeToWord.put(GL45.GL_FLOAT_MAT4x3, "mat4x3");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT2, "dmat2");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT3, "dmat3");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT4, "dmat4");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT2x3, "dmat2x3");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT2x4, "dmat2x4");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT3x2, "dmat3x2");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT3x4, "dmat3x4");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT4x2, "dmat4x2");
		glslTypeToWord.put(GL45.GL_DOUBLE_MAT4x3, "dmat4x3");
		glslTypeToWord.put(GL45.GL_SAMPLER_1D, "sampler1D");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D, "sampler2D");
		glslTypeToWord.put(GL45.GL_SAMPLER_3D, "sampler3D");
		glslTypeToWord.put(GL45.GL_SAMPLER_CUBE, "samplerCube");
		glslTypeToWord.put(GL45.GL_SAMPLER_1D_SHADOW, "sampler1DShadow");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_SHADOW, "sampler2DShadow");
		glslTypeToWord.put(GL45.GL_SAMPLER_1D_ARRAY, "sampler1DArray");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_ARRAY, "sampler2DArray");
		glslTypeToWord.put(GL45.GL_SAMPLER_1D_ARRAY_SHADOW, "sampler1DArrayShadow");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_ARRAY_SHADOW, "sampler2DArrayShadow");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_MULTISAMPLE, "sampler2DMS");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "sampler2DMSArray");
		glslTypeToWord.put(GL45.GL_SAMPLER_CUBE_SHADOW, "samplerCubeShadow");
		glslTypeToWord.put(GL45.GL_SAMPLER_BUFFER, "samplerBuffer");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_RECT, "sampler2DRect");
		glslTypeToWord.put(GL45.GL_SAMPLER_2D_RECT_SHADOW, "sampler2DRectShadow");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_1D, "isampler1D");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_2D, "isampler2D");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_3D, "isampler3D");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_CUBE, "isamplerCube");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_1D_ARRAY, "isampler1DArray");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_2D_ARRAY, "isampler2DArray");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_2D_MULTISAMPLE, "isampler2DMS");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "isampler2DMSArray");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_BUFFER, "isamplerBuffer");
		glslTypeToWord.put(GL45.GL_INT_SAMPLER_2D_RECT, "isampler2DRect");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_1D, "usampler1D");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D, "usampler2D");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_3D, "usampler3D");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_CUBE, "usamplerCube");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "usampler1DArray");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "usampler2DArray");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "usampler2DMS");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "usampler2DMSArray");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_BUFFER, "usamplerBuffer");
		glslTypeToWord.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_RECT, "usampler2DRect");

		spShaderPrecision.put(GL46.GL_LOW_FLOAT, "GL_LOW_FLOAT");
		spShaderPrecision.put(GL46.GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
		spShaderPrecision.put(GL46.GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
		spShaderPrecision.put(GL46.GL_LOW_INT, "GL_LOW_INT");
		spShaderPrecision.put(GL46.GL_MEDIUM_INT, "GL_MEDIUM_INT");
		spShaderPrecision.put(GL46.GL_HIGH_INT, "GL_HIGH_INT");

		spTessGenSpacing.put(GL46.GL_EQUAL, "GL_EQUAL");
		spTessGenSpacing.put(GL46.GL_FRACTIONAL_EVEN, "GL_FRACTIONAL_EVEN");
		spTessGenSpacing.put(GL46.GL_FRACTIONAL_ODD, "GL_FRACTIONAL_ODD");

		spVertexOrder.put(GL46.GL_CCW, "GL_CCW");
		spVertexOrder.put(GL46.GL_CW, "GL_CW");

		spGLSLPrimitives.put(GL46.GL_QUADS, "GL_QUADS");
		spGLSLPrimitives.put(GL46.GL_ISOLINES, "GL_ISOLINES");
		spGLSLPrimitives.put(GL46.GL_POINTS, "GL_POINTS");
		spGLSLPrimitives.put(GL46.GL_LINES, "GL_LINES");
		spGLSLPrimitives.put(GL46.GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
		spGLSLPrimitives.put(GL46.GL_TRIANGLES, "GL_TRIANGLES");
		spGLSLPrimitives.put(GL46.GL_LINE_STRIP, "GL_LINE_STRIP");
		spGLSLPrimitives.put(GL46.GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
		spGLSLPrimitives.put(GL46.GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");

		spTransFeedBufferMode.put(GL46.GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
		spTransFeedBufferMode.put(GL46.GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");

		spShaderType.put(GL46.GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
		spShaderType.put(GL46.GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
		spShaderType.put(GL46.GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
		spShaderType.put(GL46.GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
		spShaderType.put(GL46.GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");

		spHint.put(GL46.GL_FASTEST, "GL_FASTEST");
		spHint.put(GL46.GL_NICEST, "GL_NICEST");
		spHint.put(GL46.GL_DONT_CARE, "GL_DONT_CARE");

		spBufferBinding.put(GL46.GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER");
		spBufferBinding.put(GL46.GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER");
		spBufferBinding.put(GL46.GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER");
		spBufferBinding.put(GL46.GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER");
		spBufferBinding.put(GL46.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER");
		spBufferBinding.put(GL46.GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER");

		spBufferBinding.put(GL46.GL_TEXTURE_BUFFER_BINDING, "GL_TEXTURE_BUFFER");
		spBufferBinding.put(GL46.GL_COPY_READ_BUFFER_BINDING, "GL_COPY_READ_BUFFER");
		spBufferBinding.put(GL46.GL_COPY_WRITE_BUFFER_BINDING, "GL_COPY_WRITE_BUFFER");
		spBufferBinding.put(GL46.GL_DRAW_INDIRECT_BUFFER_BINDING, "GL_DRAW_INDIRECT_BUFFER");
		spBufferBinding.put(GL46.GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER");

		spBufferBinding.put(GL46.GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
		spBufferBinding.put(GL46.GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
		spBufferBinding.put(GL46.GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
		spBufferBinding.put(GL46.GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
		spBufferBinding.put(GL46.GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
		spBufferBinding.put(GL46.GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");

		spBufferBinding.put(GL46.GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
		spBufferBinding.put(GL46.GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
		spBufferBinding.put(GL46.GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
		spBufferBinding.put(GL46.GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
		spBufferBinding.put(GL46.GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");

		spBufferBound.put(GL46.GL_ARRAY_BUFFER_BINDING, GL46.GL_ARRAY_BUFFER);
		spBufferBound.put(GL46.GL_ELEMENT_ARRAY_BUFFER_BINDING, GL46.GL_ELEMENT_ARRAY_BUFFER);
		spBufferBound.put(GL46.GL_PIXEL_PACK_BUFFER_BINDING, GL46.GL_PIXEL_PACK_BUFFER);
		spBufferBound.put(GL46.GL_PIXEL_UNPACK_BUFFER_BINDING, GL46.GL_PIXEL_UNPACK_BUFFER);
		spBufferBound.put(GL46.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, GL46.GL_TRANSFORM_FEEDBACK_BUFFER);
		spBufferBound.put(GL46.GL_UNIFORM_BUFFER_BINDING, GL46.GL_UNIFORM_BUFFER);

		spBufferBound.put(GL46.GL_TEXTURE_BUFFER_BINDING, GL46.GL_TEXTURE_BUFFER);
		spBufferBound.put(GL46.GL_COPY_READ_BUFFER_BINDING, GL46.GL_COPY_READ_BUFFER);
		spBufferBound.put(GL46.GL_COPY_WRITE_BUFFER_BINDING, GL46.GL_COPY_WRITE_BUFFER);
		spBufferBound.put(GL46.GL_DRAW_INDIRECT_BUFFER_BINDING, GL46.GL_DRAW_INDIRECT_BUFFER);
		spBufferBound.put(GL46.GL_ATOMIC_COUNTER_BUFFER_BINDING, GL46.GL_ATOMIC_COUNTER_BUFFER);

		spBoundBuffer.put(GL46.GL_ARRAY_BUFFER, GL46.GL_ARRAY_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_ELEMENT_ARRAY_BUFFER, GL46.GL_ELEMENT_ARRAY_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_PIXEL_PACK_BUFFER, GL46.GL_PIXEL_PACK_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_PIXEL_UNPACK_BUFFER, GL46.GL_PIXEL_UNPACK_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_TRANSFORM_FEEDBACK_BUFFER, GL46.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_UNIFORM_BUFFER, GL46.GL_UNIFORM_BUFFER_BINDING);

		spBoundBuffer.put(GL46.GL_TEXTURE_BUFFER, GL46.GL_TEXTURE_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_COPY_READ_BUFFER, GL46.GL_COPY_READ_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_COPY_WRITE_BUFFER, GL46.GL_COPY_WRITE_BUFFER_BINDING);
		spBoundBuffer.put(GL46.GL_DRAW_INDIRECT_BUFFER, GL46.GL_DRAW_INDIRECT_BUFFER);
		spBoundBuffer.put(GL46.GL_ATOMIC_COUNTER_BUFFER, GL46.GL_ATOMIC_COUNTER_BUFFER);

		spBufferUsage.put(GL46.GL_STREAM_DRAW, "GL_STREAM_DRAW");
		spBufferUsage.put(GL46.GL_STREAM_READ, "GL_STREAM_READ");
		spBufferUsage.put(GL46.GL_STREAM_COPY, "GL_STREAM_COPY");
		spBufferUsage.put(GL46.GL_STATIC_DRAW, "GL_STATIC_DRAW");
		spBufferUsage.put(GL46.GL_STATIC_READ, "GL_STATIC_READ");
		spBufferUsage.put(GL46.GL_STATIC_COPY, "GL_STATIC_COPY");
		spBufferUsage.put(GL46.GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
		spBufferUsage.put(GL46.GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
		spBufferUsage.put(GL46.GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");

		spBufferAccess.put(GL46.GL_READ_ONLY, "GL_READ_ONLY");
		spBufferAccess.put(GL46.GL_WRITE_ONLY, "GL_WRITE_ONLY");
		spBufferAccess.put(GL46.GL_READ_WRITE, "GL_READ_WRITE");

		spTextureTarget.put(GL46.GL_TEXTURE_1D, "GL_TEXTURE_1D");
		spTextureTarget.put(GL46.GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
		spTextureTarget.put(GL46.GL_TEXTURE_2D, "GL_TEXTURE_2D");
		spTextureTarget.put(GL46.GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
		spTextureTarget.put(GL46.GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
		spTextureTarget.put(GL46.GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
		spTextureTarget.put(GL46.GL_TEXTURE_3D, "GL_TEXTURE_3D");
		spTextureTarget.put(GL46.GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
		spTextureTarget.put(GL46.GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
		spTextureTarget.put(GL46.GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");

		spTextureBound.put(GL46.GL_TEXTURE_1D, GL46.GL_TEXTURE_BINDING_1D);
		spTextureBound.put(GL46.GL_TEXTURE_1D_ARRAY, GL46.GL_TEXTURE_BINDING_1D_ARRAY);
		spTextureBound.put(GL46.GL_TEXTURE_2D, GL46.GL_TEXTURE_BINDING_2D);
		spTextureBound.put(GL46.GL_TEXTURE_2D_ARRAY, GL46.GL_TEXTURE_BINDING_2D_ARRAY);
		spTextureBound.put(GL46.GL_TEXTURE_2D_MULTISAMPLE, GL46.GL_TEXTURE_BINDING_2D_MULTISAMPLE);
		spTextureBound.put(GL46.GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL46.GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY);
		spTextureBound.put(GL46.GL_TEXTURE_3D, GL46.GL_TEXTURE_BINDING_3D);
		spTextureBound.put(GL46.GL_TEXTURE_BUFFER, GL46.GL_TEXTURE_BINDING_BUFFER);
		spTextureBound.put(GL46.GL_TEXTURE_CUBE_MAP, GL46.GL_TEXTURE_BINDING_CUBE_MAP);
		spTextureBound.put(GL46.GL_TEXTURE_RECTANGLE, GL46.GL_TEXTURE_BINDING_RECTANGLE);

		spTextureUnit.put(GL46.GL_TEXTURE0, "GL_TEXTURE0");
		spTextureUnit.put(GL46.GL_TEXTURE1, "GL_TEXTURE1");
		spTextureUnit.put(GL46.GL_TEXTURE2, "GL_TEXTURE2");
		spTextureUnit.put(GL46.GL_TEXTURE3, "GL_TEXTURE3");
		spTextureUnit.put(GL46.GL_TEXTURE4, "GL_TEXTURE4");
		spTextureUnit.put(GL46.GL_TEXTURE5, "GL_TEXTURE5");
		spTextureUnit.put(GL46.GL_TEXTURE6, "GL_TEXTURE6");
		spTextureUnit.put(GL46.GL_TEXTURE7, "GL_TEXTURE7");

		spTextureCompMode.put(GL46.GL_NONE, "GL_NONE");
		spTextureCompFunc.put(GL46.GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");

		spTextureCompFunc.put(GL46.GL_LEQUAL, "GL_LEQUAL");
		spTextureCompFunc.put(GL46.GL_GEQUAL, "GL_GEQUAL");
		spTextureCompFunc.put(GL46.GL_LESS, "GL_LESS");
		spTextureCompFunc.put(GL46.GL_GREATER, "GL_GREATER");
		spTextureCompFunc.put(GL46.GL_EQUAL, "GL_EQUAL");
		spTextureCompFunc.put(GL46.GL_NOTEQUAL, "GL_NOTEQUAL");
		spTextureCompFunc.put(GL46.GL_ALWAYS, "GL_ALWAYS");
		spTextureCompFunc.put(GL46.GL_NEVER, "GL_NEVER");

		spTextureWrap.put(GL46.GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
		spTextureWrap.put(GL46.GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
		spTextureWrap.put(GL46.GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
		spTextureWrap.put(GL46.GL_REPEAT, "GL_REPEAT");

		spTextureFilter.put(GL46.GL_NEAREST, "GL_NEAREST");
		spTextureFilter.put(GL46.GL_LINEAR, "GL_LINEAR");
		spTextureFilter.put(GL46.GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
		spTextureFilter.put(GL46.GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
		spTextureFilter.put(GL46.GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
		spTextureFilter.put(GL46.GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");

		spGLSLTypeSize.put(GL46.GL_FLOAT, Float.BYTES);
		spGLSLTypeSize.put(GL46.GL_FLOAT_VEC2, Float.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_FLOAT_VEC3, Float.BYTES * 3);
		spGLSLTypeSize.put(GL46.GL_FLOAT_VEC4, Float.BYTES * 4);

		spGLSLTypeSize.put(GL46.GL_DOUBLE, Double.BYTES);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_VEC2, Double.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_VEC3, Double.BYTES * 3);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_VEC4, Double.BYTES * 4);

		spGLSLTypeSize.put(GL46.GL_SAMPLER_1D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_3D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_CUBE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_1D_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_1D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_1D_ARRAY_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_ARRAY_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_MULTISAMPLE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_MULTISAMPLE_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_CUBE_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_BUFFER, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_RECT, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_SAMPLER_2D_RECT_SHADOW, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_1D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_2D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_3D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_CUBE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_1D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_2D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_2D_MULTISAMPLE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_BUFFER, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT_SAMPLER_2D_RECT, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_1D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_3D, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_CUBE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_BUFFER, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_RECT, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_BOOL, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_INT, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_BOOL_VEC2, Integer.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_INT_VEC2, Integer.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_BOOL_VEC3, Integer.BYTES * 3);
		spGLSLTypeSize.put(GL46.GL_INT_VEC3, Integer.BYTES * 3);
		spGLSLTypeSize.put(GL46.GL_BOOL_VEC4, Integer.BYTES * 4);
		spGLSLTypeSize.put(GL46.GL_INT_VEC4, Integer.BYTES * 4);

		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT, Integer.BYTES);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_VEC2, Integer.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_VEC3, Integer.BYTES * 2);
		spGLSLTypeSize.put(GL46.GL_UNSIGNED_INT_VEC4, Integer.BYTES * 2);

		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT2, Float.BYTES * 4);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT3, Float.BYTES * 9);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT4, Float.BYTES * 16);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT2x3, Float.BYTES * 6);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT2x4, Float.BYTES * 8);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT3x2, Float.BYTES * 6);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT3x4, Float.BYTES * 12);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT4x2, Float.BYTES * 8);
		spGLSLTypeSize.put(GL46.GL_FLOAT_MAT4x3, Float.BYTES * 12);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT2, Double.BYTES * 4);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT3, Double.BYTES * 9);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT4, Double.BYTES * 16);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT2x3, Double.BYTES * 6);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT2x4, Double.BYTES * 8);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT3x2, Double.BYTES * 6);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT3x4, Double.BYTES * 12);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT4x2, Double.BYTES * 8);
		spGLSLTypeSize.put(GL46.GL_DOUBLE_MAT4x3, Double.BYTES * 12);

		spGLSLType.put(GL46.GL_FLOAT, "GL_FLOAT");
		spGLSLType.put(GL46.GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
		spGLSLType.put(GL46.GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
		spGLSLType.put(GL46.GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
		spGLSLType.put(GL46.GL_DOUBLE, "GL_DOUBLE");
		spGLSLType.put(GL46.GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
		spGLSLType.put(GL46.GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
		spGLSLType.put(GL46.GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
		spGLSLType.put(GL46.GL_SAMPLER_1D, "GL_SAMPLER_1D");
		spGLSLType.put(GL46.GL_SAMPLER_2D, "GL_SAMPLER_2D");
		spGLSLType.put(GL46.GL_SAMPLER_3D, "GL_SAMPLER_3D");
		spGLSLType.put(GL46.GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
		spGLSLType.put(GL46.GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
		spGLSLType.put(GL46.GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
		spGLSLType.put(GL46.GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
		spGLSLType.put(GL46.GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
		spGLSLType.put(GL46.GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
		spGLSLType.put(GL46.GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
		spGLSLType.put(GL46.GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
		spGLSLType.put(GL46.GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spGLSLType.put(GL46.GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
		spGLSLType.put(GL46.GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
		spGLSLType.put(GL46.GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
		spGLSLType.put(GL46.GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
		spGLSLType.put(GL46.GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
		spGLSLType.put(GL46.GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
		spGLSLType.put(GL46.GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
		spGLSLType.put(GL46.GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
		spGLSLType.put(GL46.GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
		spGLSLType.put(GL46.GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
		spGLSLType.put(GL46.GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
		spGLSLType.put(GL46.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spGLSLType.put(GL46.GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
		spGLSLType.put(GL46.GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
				"GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
		spGLSLType.put(GL46.GL_BOOL, "GL_BOOL");
		spGLSLType.put(GL46.GL_INT, "GL_INT");
		spGLSLType.put(GL46.GL_BOOL_VEC2, "GL_BOOL_VEC2");
		spGLSLType.put(GL46.GL_INT_VEC2, "GL_INT_VEC2");
		spGLSLType.put(GL46.GL_BOOL_VEC3, "GL_BOOL_VEC3");
		spGLSLType.put(GL46.GL_INT_VEC3, "GL_INT_VEC3");
		spGLSLType.put(GL46.GL_BOOL_VEC4, "GL_BOOL_VEC4");
		spGLSLType.put(GL46.GL_INT_VEC4, "GL_INT_VEC4");
		spGLSLType.put(GL46.GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
		spGLSLType.put(GL46.GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
		spGLSLType.put(GL46.GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
		spGLSLType.put(GL46.GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
		spGLSLType.put(GL46.GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
		spGLSLType.put(GL46.GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
		spGLSLType.put(GL46.GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
		spGLSLType.put(GL46.GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
		spGLSLType.put(GL46.GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
		spGLSLType.put(GL46.GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
		spGLSLType.put(GL46.GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
		spGLSLType.put(GL46.GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
		spGLSLType.put(GL46.GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
		spGLSLType.put(GL46.GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
		spGLSLType.put(GL46.GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
		spGLSLType.put(GL46.GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
		spGLSLType.put(GL46.GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
		spGLSLType.put(GL46.GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
		spGLSLType.put(GL46.GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
		spGLSLType.put(GL46.GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");

		spTextureDataType.put(GL46.GL_NONE, "GL_NONE");
		spTextureDataType.put(GL46.GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
		spTextureDataType.put(GL46.GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
		spTextureDataType.put(GL46.GL_FLOAT, "GL_FLOAT");
		spTextureDataType.put(GL46.GL_INT, "GL_INT");
		spTextureDataType.put(GL46.GL_UNSIGNED_INT, "GL_UNSIGNED_INT");

		spDataF.put(GL46.GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
		spDataF.put(GL46.GL_BYTE, "GL_BYTE");
		spDataF.put(GL46.GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
		spDataF.put(GL46.GL_SHORT, "GL_SHORT");
		spDataF.put(GL46.GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
		spDataF.put(GL46.GL_INT, "GL_INT");
		spDataF.put(GL46.GL_HALF_FLOAT, "GL_HALF_FLOAT");
		spDataF.put(GL46.GL_FLOAT, "GL_FLOAT");

		spDataF.put(GL46.GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
		spDataF.put(GL46.GL_UNSIGNED_BYTE_2_3_3_REV, "GL_UNSIGNED_BYTE_2_3_3_REV");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_5_6_5_REV, "GL_UNSIGNED_SHORT_5_6_5_REV");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_4_4_4_4_REV, "GL_UNSIGNED_SHORT_4_4_4_4_REV");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
		spDataF.put(GL46.GL_UNSIGNED_SHORT_1_5_5_5_REV, "GL_UNSIGNED_SHORT_1_5_5_5_REV");
		spDataF.put(GL46.GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
		spDataF.put(GL46.GL_UNSIGNED_INT_8_8_8_8_REV, "GL_UNSIGNED_INT_8_8_8_8_REV");
		spDataF.put(GL46.GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
		spDataF.put(GL46.GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");

		spInternalF.put(GL46.GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
		spInternalF.put(GL46.GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
		spInternalF.put(GL46.GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
		spInternalF.put(GL46.GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
		spInternalF.put(GL46.GL_DEPTH_COMPONENT24, "GL_DEPTH_COMPONENT24");
		spInternalF.put(GL46.GL_DEPTH_COMPONENT32, "GL_DEPTH_COMPONENT32");
		spInternalF.put(GL46.GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
		spInternalF.put(GL46.GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
		spInternalF.put(GL46.GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
		spInternalF.put(GL46.GL_RED_INTEGER, "GL_RED_INTEGER");
		spInternalF.put(GL46.GL_GREEN_INTEGER, "GL_GREEN_INTEGER");
		spInternalF.put(GL46.GL_BLUE_INTEGER, "GL_BLUE_INTEGER");

		spInternalF.put(GL46.GL_RG_INTEGER, "GL_RG_INTEGER");
		spInternalF.put(GL46.GL_RGB_INTEGER, "GL_RGB_INTEGER");
		spInternalF.put(GL46.GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
		spInternalF.put(GL46.GL_BGR_INTEGER, "GL_BGR_INTEGER");
		spInternalF.put(GL46.GL_BGRA_INTEGER, "GL_BGRA_INTEGER");

		spInternalF.put(GL46.GL_RED, "GL_RED");
		spInternalF.put(GL46.GL_RG, "GL_RG");
		spInternalF.put(GL46.GL_RGB, "GL_RGB");
		spInternalF.put(GL46.GL_RGBA, "GL_RGBA");
		spInternalF.put(GL46.GL_R3_G3_B2, "GL_R3_G3_B2");
		/* TODO: Not Available in current lwjgl build */
		/* spInternalF.put(GL46.GL_RGB2_EXT, "GL_RGB2_EXT"); */
		spInternalF.put(0x804E, "GL_RGB2_EXT");

		spInternalF.put(GL46.GL_COMPRESSED_RED, "GL_COMPRESSED_RED");
		spInternalF.put(GL46.GL_COMPRESSED_RG, "GL_COMPRESSED_RG");
		spInternalF.put(GL46.GL_COMPRESSED_RGB, "GL_COMPRESSED_RGB");
		spInternalF.put(GL46.GL_COMPRESSED_RGBA, "GL_COMPRESSED_RGBA");
		spInternalF.put(GL46.GL_COMPRESSED_SRGB, "GL_COMPRESSED_SRGB");
		spInternalF.put(GL46.GL_COMPRESSED_SRGB_ALPHA, "GL_COMPRESSED_SRGB_ALPHA");
		spInternalF.put(GL46.GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
		spInternalF.put(GL46.GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
		spInternalF.put(GL46.GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
		spInternalF.put(GL46.GL_RG, "GL_RG");
		spInternalF.put(GL46.GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");

		spInternalF.put(GL46.GL_COMPRESSED_RGBA_BPTC_UNORM, "GL_COMPRESSED_RGBA_BPTC_UNORM");
		spInternalF.put(GL46.GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM");
		spInternalF.put(GL46.GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT");
		spInternalF.put(GL46.GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT");

		spInternalF.put(GL46.GL_R8, "GL_R8");
		spInternalF.put(GL46.GL_R16, "GL_R16");
		spInternalF.put(GL46.GL_RG8, "GL_RG8");
		spInternalF.put(GL46.GL_RG16, "GL_RG16");
		spInternalF.put(GL46.GL_R16F, "GL_R16F");
		spInternalF.put(GL46.GL_R32F, "GL_R32F");
		spInternalF.put(GL46.GL_RG16F, "GL_RG16F");
		spInternalF.put(GL46.GL_RG32F, "GL_RG32F");
		spInternalF.put(GL46.GL_R8I, "GL_R8I");
		spInternalF.put(GL46.GL_R8UI, "GL_R8UI");
		spInternalF.put(GL46.GL_R16I, "GL_R16I");
		spInternalF.put(GL46.GL_R16UI, "GL_R16UI");
		spInternalF.put(GL46.GL_R32I, "GL_R32I");
		spInternalF.put(GL46.GL_R32UI, "GL_R32UI");
		spInternalF.put(GL46.GL_RG8I, "GL_RG8I");
		spInternalF.put(GL46.GL_RG8UI, "GL_RG8UI");
		spInternalF.put(GL46.GL_RG16I, "GL_RG16I");
		spInternalF.put(GL46.GL_RG16UI, "GL_RG16UI");
		spInternalF.put(GL46.GL_RG32I, "GL_RG32I");
		spInternalF.put(GL46.GL_RG32UI, "GL_RG32UI");
		/* TODO: Not Available in current lwjgl build */
		/*
		 * spInternalF.put(GL46.GL_RGB_S3TC, "GL_RGB_S3TC");
		 * spInternalF.put(GL46.GL_RGB4_S3TC, "GL_RGB4_S3TC");
		 * spInternalF.put(GL46.GL_RGBA_S3TC, "GL_RGBA_S3TC");
		 * spInternalF.put(GL46.GL_RGBA4_S3TC, "GL_RGBA4_S3TC");
		 * spInternalF.put(GL46.GL_RGBA_DXT5_S3TC, "GL_RGBA_DXT5_S3TC");
		 * spInternalF.put(GL46.GL_RGBA4_DXT5_S3TC, "GL_RGBA4_DXT5_S3TC");
		 */
		spInternalF.put(0x83A0, "GL_RGB_S3TC");
		spInternalF.put(0x83A1, "GL_RGB4_S3TC");
		spInternalF.put(0x83A2, "GL_RGBA_S3TC");
		spInternalF.put(0x83A3, "GL_RGBA4_S3TC");
		spInternalF.put(0x83A4, "GL_RGBA_DXT5_S3TC");
		spInternalF.put(0x83A5, "GL_RGBA4_DXT5_S3TC");

		spInternalF.put(EXTTextureCompressionS3TC.GL_COMPRESSED_RGB_S3TC_DXT1_EXT, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT");
		spInternalF.put(EXTTextureCompressionS3TC.GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT");
		spInternalF.put(EXTTextureCompressionS3TC.GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT");
		spInternalF.put(EXTTextureCompressionS3TC.GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT");
		/* TODO: Not Available in current lwjgl build */
		/*
		 * spInternalF.put(GL_R1UI_V3F_SUN, "GL_R1UI_V3F_SUN");
		 * spInternalF.put(GL_R1UI_C4UB_V3F_SUN, "GL_R1UI_C4UB_V3F_SUN");
		 * spInternalF.put(GL_R1UI_C3F_V3F_SUN, "GL_R1UI_C3F_V3F_SUN");
		 * spInternalF.put(GL_R1UI_N3F_V3F_SUN, "GL_R1UI_N3F_V3F_SUN");
		 * spInternalF.put(GL_R1UI_C4F_N3F_V3F_SUN, "GL_R1UI_C4F_N3F_V3F_SUN");
		 * spInternalF.put(GL_R1UI_T2F_V3F_SUN, "GL_R1UI_T2F_V3F_SUN");
		 * spInternalF.put(GL_R1UI_T2F_N3F_V3F_SUN, "GL_R1UI_T2F_N3F_V3F_SUN");
		 * spInternalF.put(GL_R1UI_T2F_C4F_N3F_V3F_SUN, "GL_R1UI_T2F_C4F_N3F_V3F_SUN");
		 * 
		 * spInternalF.put(GL_RGB_SIGNED_SGIX, "GL_RGB_SIGNED_SGIX");
		 * spInternalF.put(GL_RGBA_SIGNED_SGIX, "GL_RGBA_SIGNED_SGIX");
		 * spInternalF.put(GL_RGB16_SIGNED_SGIX, "GL_RGB16_SIGNED_SGIX");
		 * spInternalF.put(GL_RGBA16_SIGNED_SGIX, "GL_RGBA16_SIGNED_SGIX");
		 * spInternalF.put(GL_RGB_EXTENDED_RANGE_SGIX, "GL_RGB_EXTENDED_RANGE_SGIX");
		 * spInternalF.put(GL_RGBA_EXTENDED_RANGE_SGIX, "GL_RGBA_EXTENDED_RANGE_SGIX");
		 * spInternalF.put(GL_RGB16_EXTENDED_RANGE_SGIX,
		 * "GL_RGB16_EXTENDED_RANGE_SGIX");
		 * spInternalF.put(GL_RGBA16_EXTENDED_RANGE_SGIX,
		 * "GL_RGBA16_EXTENDED_RANGE_SGIX");
		 * 
		 * spInternalF.put(GL_COMPRESSED_RGB_FXT1_3DFX, "GL_COMPRESSED_RGB_FXT1_3DFX");
		 * spInternalF.put(GL_COMPRESSED_RGBA_FXT1_3DFX,
		 * "GL_COMPRESSED_RGBA_FXT1_3DFX");
		 * spInternalF.put(GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV,
		 * "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV");
		 */
		spInternalF.put(0x85C4, "GL_R1UI_V3F_SUN");
		spInternalF.put(0x85C5, "GL_R1UI_C4UB_V3F_SUN");
		spInternalF.put(0x85C6, "GL_R1UI_C3F_V3F_SUN");
		spInternalF.put(0x85C7, "GL_R1UI_N3F_V3F_SUN");
		spInternalF.put(0x85C8, "GL_R1UI_C4F_N3F_V3F_SUN");
		spInternalF.put(0x85C9, "GL_R1UI_T2F_V3F_SUN");
		spInternalF.put(0x85CA, "GL_R1UI_T2F_N3F_V3F_SUN");
		spInternalF.put(0x85CB, "GL_R1UI_T2F_C4F_N3F_V3F_SUN");
		spInternalF.put(0x85E0, "GL_RGB_SIGNED_SGIX");
		spInternalF.put(0x85E1, "GL_RGBA_SIGNED_SGIX");
		spInternalF.put(0x85E6, "GL_RGB16_SIGNED_SGIX");
		spInternalF.put(0x85E7, "GL_RGBA16_SIGNED_SGIX");
		spInternalF.put(0x85EC, "GL_RGB_EXTENDED_RANGE_SGIX");
		spInternalF.put(0x85ED, "GL_RGBA_EXTENDED_RANGE_SGIX");
		spInternalF.put(0x85F2, "GL_RGB16_EXTENDED_RANGE_SGIX");
		spInternalF.put(0x85F3, "GL_RGBA16_EXTENDED_RANGE_SGIX");
		spInternalF.put(0x86B0, "GL_COMPRESSED_RGB_FXT1_3DFX");
		spInternalF.put(0x86B1, "GL_COMPRESSED_RGBA_FXT1_3DFX");
		spInternalF.put(0x86D9, "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV");
		spInternalF.put(ARBColorBufferFloat.GL_RGBA_FLOAT_MODE_ARB, "GL_RGBA_FLOAT_MODE_ARB");
		spInternalF.put(ATITextureCompression3DC.GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI,
				"GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI");
		spInternalF.put(APPLERGB422.GL_RGB_422_APPLE, "GL_RGB_422_APPLE");
		spInternalF.put(EXTPackedFloat.GL_RGBA_SIGNED_COMPONENTS_EXT, "GL_RGBA_SIGNED_COMPONENTS_EXT");
		spInternalF.put(EXTTextureSRGB.GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT");
		spInternalF.put(EXTTextureSRGB.GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,
				"GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT");
		spInternalF.put(EXTTextureSRGB.GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,
				"GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT");
		spInternalF.put(EXTTextureSRGB.GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,
				"GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT");
		spInternalF.put(EXTTextureCompressionLATC.GL_COMPRESSED_LUMINANCE_LATC1_EXT,
				"GL_COMPRESSED_LUMINANCE_LATC1_EXT");
		spInternalF.put(EXTTextureCompressionLATC.GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT,
				"GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT");
		spInternalF.put(EXTTextureCompressionLATC.GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT,
				"GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT");
		spInternalF.put(EXTTextureCompressionLATC.GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT,
				"GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT");
		spInternalF.put(EXTTextureInteger.GL_RGBA_INTEGER_MODE_EXT, "GL_RGBA_INTEGER_MODE_EXT");
		spInternalF.put(ARBTextureCompressionBPTC.GL_COMPRESSED_RGBA_BPTC_UNORM_ARB,
				"GL_COMPRESSED_RGBA_BPTC_UNORM_ARB");
		spInternalF.put(ARBTextureCompressionBPTC.GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB,
				"GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB");
		spInternalF.put(ARBTextureCompressionBPTC.GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB,
				"GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB");
		spInternalF.put(ARBTextureCompressionBPTC.GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB,
				"GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB");
		spInternalF.put(EXTTextureSnorm.GL_RG_SNORM, "GL_RG_SNORM");
		spInternalF.put(EXTTextureSnorm.GL_RGB_SNORM, "GL_RGB_SNORM");
		spInternalF.put(EXTTextureSnorm.GL_RGBA_SNORM, "GL_RGBA_SNORM");
		spInternalF.put(GL46.GL_R8_SNORM, "GL_R8_SNORM");
		spInternalF.put(GL46.GL_RG8_SNORM, "GL_RG8_SNORM");
		spInternalF.put(GL46.GL_RGB8_SNORM, "GL_RGB8_SNORM");
		spInternalF.put(GL46.GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
		spInternalF.put(GL46.GL_R16_SNORM, "GL_R16_SNORM");
		spInternalF.put(GL46.GL_RG16_SNORM, "GL_RG16_SNORM");
		spInternalF.put(GL46.GL_RGB16_SNORM, "GL_RGB16_SNORM");
		spInternalF.put(GL46.GL_RGBA16_SNORM, "GL_RGBA16_SNORM");
		spInternalF.put(GL46.GL_RGB10_A2UI, "GL_RGB10_A2UI");
		spInternalF.put(GL45.GL_MAX_VERTEX_OUTPUT_COMPONENTS, "GL_MAX_VERTEX_OUTPUT_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_INPUT_COMPONENTS, "GL_MAX_GEOMETRY_INPUT_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_FRAGMENT_INPUT_COMPONENTS, "GL_MAX_FRAGMENT_INPUT_COMPONENTS");
		spInternalF.put(GL45.GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
		spInternalF.put(GL45.GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
		spInternalF.put(GL45.GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
		spInternalF.put(GL45.GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION,
				"GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
		spInternalF.put(GL45.GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
		spInternalF.put(GL45.GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
		spInternalF.put(GL45.GL_SAMPLE_MASK_VALUE, "GL_SAMPLE_MASK_VALUE");
		spInternalF.put(GL45.GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_2D_MULTISAMPLE, "GL_PROXY_TEXTURE_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
		spInternalF.put(GL45.GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
		spInternalF.put(GL45.GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
		spInternalF.put(GL45.GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_TEXTURE_SAMPLES, "GL_TEXTURE_SAMPLES");
		spInternalF.put(GL45.GL_TEXTURE_FIXED_SAMPLE_LOCATIONS, "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS");
		spInternalF.put(GL45.GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
		spInternalF.put(GL45.GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
				"GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
		spInternalF.put(GL45.GL_DEPTH_CLAMP, "GL_DEPTH_CLAMP");
		spInternalF.put(GL45.GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
		spInternalF.put(GL45.GL_GEOMETRY_VERTICES_OUT, "GL_GEOMETRY_VERTICES_OUT");
		spInternalF.put(GL45.GL_GEOMETRY_INPUT_TYPE, "GL_GEOMETRY_INPUT_TYPE");
		spInternalF.put(GL45.GL_GEOMETRY_OUTPUT_TYPE, "GL_GEOMETRY_OUTPUT_TYPE");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_OUTPUT_VERTICES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS");
		spInternalF.put(GL45.GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
		spInternalF.put(GL45.GL_LINE_STRIP_ADJACENCY, "GL_LINE_STRIP_ADJACENCY");
		spInternalF.put(GL45.GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");
		spInternalF.put(GL45.GL_TRIANGLE_STRIP_ADJACENCY, "GL_TRIANGLE_STRIP_ADJACENCY");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_LAYERED, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED");
		spInternalF.put(GL45.GL_PROGRAM_POINT_SIZE, "GL_PROGRAM_POINT_SIZE");
		spInternalF.put(GL45.GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
		spInternalF.put(GL45.GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
		spInternalF.put(GL45.GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
		spInternalF.put(GL45.GL_SYNC_STATUS, "GL_SYNC_STATUS");
		spInternalF.put(GL45.GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
		spInternalF.put(GL45.GL_SYNC_FENCE, "GL_SYNC_FENCE");
		spInternalF.put(GL45.GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
		spInternalF.put(GL45.GL_UNSIGNALED, "GL_UNSIGNALED");
		spInternalF.put(GL45.GL_SIGNALED, "GL_SIGNALED");
		spInternalF.put(GL45.GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
		spInternalF.put((int) GL45.GL_TIMEOUT_IGNORED, "GL_TIMEOUT_IGNORED");
		spInternalF.put(GL45.GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
		spInternalF.put(GL45.GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
		spInternalF.put(GL45.GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
		spInternalF.put(GL45.GL_WAIT_FAILED, "GL_WAIT_FAILED");
		spInternalF.put(GL45.GL_R8_SNORM, "GL_R8_SNORM");
		spInternalF.put(GL45.GL_RG8_SNORM, "GL_RG8_SNORM");
		spInternalF.put(GL45.GL_RGB8_SNORM, "GL_RGB8_SNORM");
		spInternalF.put(GL45.GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
		spInternalF.put(GL45.GL_R16_SNORM, "GL_R16_SNORM");
		spInternalF.put(GL45.GL_RG16_SNORM, "GL_RG16_SNORM");
		spInternalF.put(GL45.GL_RGB16_SNORM, "GL_RGB16_SNORM");
		spInternalF.put(GL45.GL_RGBA16_SNORM, "GL_RGBA16_SNORM");
		spInternalF.put(GL45.GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
		spInternalF.put(GL45.GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
		spInternalF.put(GL45.GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
		spInternalF.put(GL45.GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
		spInternalF.put(GL45.GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
		spInternalF.put(GL45.GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
		spInternalF.put(GL45.GL_PRIMITIVE_RESTART, "GL_PRIMITIVE_RESTART");
		spInternalF.put(GL45.GL_PRIMITIVE_RESTART_INDEX, "GL_PRIMITIVE_RESTART_INDEX");
		spInternalF.put(GL45.GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
		spInternalF.put(GL45.GL_MAX_TEXTURE_BUFFER_SIZE, "GL_MAX_TEXTURE_BUFFER_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
		spInternalF.put(GL45.GL_TEXTURE_BUFFER_DATA_STORE_BINDING, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING");
		spInternalF.put(GL45.GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_RECTANGLE, "GL_PROXY_TEXTURE_RECTANGLE");
		spInternalF.put(GL45.GL_MAX_RECTANGLE_TEXTURE_SIZE, "GL_MAX_RECTANGLE_TEXTURE_SIZE");
		spInternalF.put(GL45.GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
		spInternalF.put(GL45.GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
		spInternalF.put(GL45.GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
		spInternalF.put(GL45.GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
		spInternalF.put(GL45.GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
		spInternalF.put(GL45.GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
		spInternalF.put(GL45.GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
		spInternalF.put(GL45.GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
		spInternalF.put(GL45.GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
		spInternalF.put(GL45.GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
		spInternalF.put(GL45.GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
		spInternalF.put(GL45.GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
		spInternalF.put(GL45.GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS,
				"GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS,
				"GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
		spInternalF.put(GL45.GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
		spInternalF.put(GL45.GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
		spInternalF.put(GL45.GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
		spInternalF.put(GL45.GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
		spInternalF.put(GL45.GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
		spInternalF.put(GL45.GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
		spInternalF.put(GL45.GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
		spInternalF.put(GL45.GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER,
				"GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER,
				"GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER,
				"GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
		spInternalF.put(GL45.GL_INVALID_INDEX, "GL_INVALID_INDEX");
		spInternalF.put(GL45.GL_MAJOR_VERSION, "GL_MAJOR_VERSION");
		spInternalF.put(GL45.GL_MINOR_VERSION, "GL_MINOR_VERSION");
		spInternalF.put(GL45.GL_NUM_EXTENSIONS, "GL_NUM_EXTENSIONS");
		spInternalF.put(GL45.GL_CONTEXT_FLAGS, "GL_CONTEXT_FLAGS");
		spInternalF.put(GL45.GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT, "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT");
		spInternalF.put(GL45.GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");
		spInternalF.put(GL45.GL_CLIP_DISTANCE0, "GL_CLIP_DISTANCE0");
		spInternalF.put(GL45.GL_CLIP_DISTANCE1, "GL_CLIP_DISTANCE1");
		spInternalF.put(GL45.GL_CLIP_DISTANCE2, "GL_CLIP_DISTANCE2");
		spInternalF.put(GL45.GL_CLIP_DISTANCE3, "GL_CLIP_DISTANCE3");
		spInternalF.put(GL45.GL_CLIP_DISTANCE4, "GL_CLIP_DISTANCE4");
		spInternalF.put(GL45.GL_CLIP_DISTANCE5, "GL_CLIP_DISTANCE5");
		spInternalF.put(GL45.GL_CLIP_DISTANCE6, "GL_CLIP_DISTANCE6");
		spInternalF.put(GL45.GL_CLIP_DISTANCE7, "GL_CLIP_DISTANCE7");
		spInternalF.put(GL45.GL_MAX_CLIP_DISTANCES, "GL_MAX_CLIP_DISTANCES");
		spInternalF.put(GL45.GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
		spInternalF.put(GL45.GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
		spInternalF.put(GL45.GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
		spInternalF.put(GL45.GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
		spInternalF.put(GL45.GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
		spInternalF.put(GL45.GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
		spInternalF.put(GL45.GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
		spInternalF.put(GL45.GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
		spInternalF.put(GL45.GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
		spInternalF.put(GL45.GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
		spInternalF.put(GL45.GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
		spInternalF.put(GL45.GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
		spInternalF.put(GL45.GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
		spInternalF.put(GL45.GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
		spInternalF.put(GL45.GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
		spInternalF.put(GL45.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
		spInternalF.put(GL45.GL_MIN_PROGRAM_TEXEL_OFFSET, "GL_MIN_PROGRAM_TEXEL_OFFSET");
		spInternalF.put(GL45.GL_MAX_PROGRAM_TEXEL_OFFSET, "GL_MAX_PROGRAM_TEXEL_OFFSET");
		spInternalF.put(GL45.GL_QUERY_WAIT, "GL_QUERY_WAIT");
		spInternalF.put(GL45.GL_QUERY_NO_WAIT, "GL_QUERY_NO_WAIT");
		spInternalF.put(GL45.GL_QUERY_BY_REGION_WAIT, "GL_QUERY_BY_REGION_WAIT");
		spInternalF.put(GL45.GL_QUERY_BY_REGION_NO_WAIT, "GL_QUERY_BY_REGION_NO_WAIT");
		spInternalF.put(GL45.GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
		spInternalF.put(GL45.GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
		spInternalF.put(GL45.GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
		spInternalF.put(GL45.GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
		spInternalF.put(GL45.GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
		spInternalF.put(GL45.GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
		spInternalF.put(GL45.GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
		spInternalF.put(GL45.GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
		spInternalF.put(GL45.GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
		spInternalF.put(GL45.GL_CLAMP_VERTEX_COLOR, "GL_CLAMP_VERTEX_COLOR");
		spInternalF.put(GL45.GL_CLAMP_FRAGMENT_COLOR, "GL_CLAMP_FRAGMENT_COLOR");
		spInternalF.put(GL45.GL_CLAMP_READ_COLOR, "GL_CLAMP_READ_COLOR");
		spInternalF.put(GL45.GL_FIXED_ONLY, "GL_FIXED_ONLY");
		spInternalF.put(GL45.GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
		spInternalF.put(GL45.GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
		spInternalF.put(GL45.GL_FLOAT_32_UNSIGNED_INT_24_8_REV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV");
		spInternalF.put(GL45.GL_TEXTURE_RED_TYPE, "GL_TEXTURE_RED_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_GREEN_TYPE, "GL_TEXTURE_GREEN_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_BLUE_TYPE, "GL_TEXTURE_BLUE_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_ALPHA_TYPE, "GL_TEXTURE_ALPHA_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_LUMINANCE_TYPE, "GL_TEXTURE_LUMINANCE_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_INTENSITY_TYPE, "GL_TEXTURE_INTENSITY_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_DEPTH_TYPE, "GL_TEXTURE_DEPTH_TYPE");
		spInternalF.put(GL45.GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
		spInternalF.put(GL45.GL_RGBA32F, "GL_RGBA32F");
		spInternalF.put(GL45.GL_RGB32F, "GL_RGB32F");
		spInternalF.put(GL45.GL_RGBA16F, "GL_RGBA16F");
		spInternalF.put(GL45.GL_RGB16F, "GL_RGB16F");
		spInternalF.put(GL45.GL_R11F_G11F_B10F, "GL_R11F_G11F_B10F");
		spInternalF.put(GL45.GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
		spInternalF.put(GL45.GL_RGB9_E5, "GL_RGB9_E5");
		spInternalF.put(GL45.GL_UNSIGNED_INT_5_9_9_9_REV, "GL_UNSIGNED_INT_5_9_9_9_REV");
		spInternalF.put(GL45.GL_TEXTURE_SHARED_SIZE, "GL_TEXTURE_SHARED_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
		spInternalF.put(GL45.GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
		spInternalF.put(GL45.GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
		spInternalF.put(GL45.GL_RENDERBUFFER, "GL_RENDERBUFFER");
		spInternalF.put(GL45.GL_STENCIL_INDEX1, "GL_STENCIL_INDEX1");
		spInternalF.put(GL45.GL_STENCIL_INDEX4, "GL_STENCIL_INDEX4");
		spInternalF.put(GL45.GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
		spInternalF.put(GL45.GL_STENCIL_INDEX16, "GL_STENCIL_INDEX16");
		spInternalF.put(GL45.GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
		spInternalF.put(GL45.GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
		spInternalF.put(GL45.GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
		spInternalF.put(GL45.GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
		spInternalF.put(GL45.GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,
				"GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_DEFAULT, "GL_FRAMEBUFFER_DEFAULT");
		spInternalF.put(GL45.GL_INDEX, "GL_INDEX");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
		spInternalF.put(GL45.GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
		spInternalF.put(GL45.GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
		spInternalF.put(GL45.GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
		spInternalF.put(GL45.GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
		spInternalF.put(GL45.GL_MAX_SAMPLES, "GL_MAX_SAMPLES");
		spInternalF.put(GL45.GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
				"GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER");
		spInternalF.put(GL45.GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
		spInternalF.put(GL45.GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
		spInternalF.put(GL45.GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
		spInternalF.put(GL45.GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
		spInternalF.put(GL45.GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
		spInternalF.put(GL45.GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
		spInternalF.put(GL45.GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
		spInternalF.put(GL45.GL_MAX_COLOR_ATTACHMENTS, "GL_MAX_COLOR_ATTACHMENTS");
		spInternalF.put(GL45.GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
		spInternalF.put(GL45.GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
		spInternalF.put(GL45.GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
		spInternalF.put(GL45.GL_UNSIGNED_INT_24_8, "GL_UNSIGNED_INT_24_8");
		spInternalF.put(GL45.GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
		spInternalF.put(GL45.GL_TEXTURE_STENCIL_SIZE, "GL_TEXTURE_STENCIL_SIZE");
		spInternalF.put(GL45.GL_HALF_FLOAT, "GL_HALF_FLOAT");
		spInternalF.put(GL45.GL_RGBA32UI, "GL_RGBA32UI");
		spInternalF.put(GL45.GL_RGB32UI, "GL_RGB32UI");
		spInternalF.put(GL45.GL_RGBA16UI, "GL_RGBA16UI");
		spInternalF.put(GL45.GL_RGB16UI, "GL_RGB16UI");
		spInternalF.put(GL45.GL_RGBA8UI, "GL_RGBA8UI");
		spInternalF.put(GL45.GL_RGB8UI, "GL_RGB8UI");
		spInternalF.put(GL45.GL_RGBA32I, "GL_RGBA32I");
		spInternalF.put(GL45.GL_RGB32I, "GL_RGB32I");
		spInternalF.put(GL45.GL_RGBA16I, "GL_RGBA16I");
		spInternalF.put(GL45.GL_RGB16I, "GL_RGB16I");
		spInternalF.put(GL45.GL_RGBA8I, "GL_RGBA8I");
		spInternalF.put(GL45.GL_RGB8I, "GL_RGB8I");
		spInternalF.put(GL45.GL_RED_INTEGER, "GL_RED_INTEGER");
		spInternalF.put(GL45.GL_GREEN_INTEGER, "GL_GREEN_INTEGER");
		spInternalF.put(GL45.GL_BLUE_INTEGER, "GL_BLUE_INTEGER");
		spInternalF.put(GL45.GL_ALPHA_INTEGER, "GL_ALPHA_INTEGER");
		spInternalF.put(GL45.GL_RGB_INTEGER, "GL_RGB_INTEGER");
		spInternalF.put(GL45.GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
		spInternalF.put(GL45.GL_BGR_INTEGER, "GL_BGR_INTEGER");
		spInternalF.put(GL45.GL_BGRA_INTEGER, "GL_BGRA_INTEGER");
		spInternalF.put(GL45.GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
		spInternalF.put(GL45.GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_2D_ARRAY, "GL_PROXY_TEXTURE_2D_ARRAY");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_1D_ARRAY, "GL_PROXY_TEXTURE_1D_ARRAY");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
		spInternalF.put(GL45.GL_MAX_ARRAY_TEXTURE_LAYERS, "GL_MAX_ARRAY_TEXTURE_LAYERS");
		spInternalF.put(GL45.GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
		spInternalF.put(GL45.GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
		spInternalF.put(GL45.GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
		spInternalF.put(GL45.GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");
		spInternalF.put(GL45.GL_R8, "GL_R8");
		spInternalF.put(GL45.GL_R16, "GL_R16");
		spInternalF.put(GL45.GL_RG8, "GL_RG8");
		spInternalF.put(GL45.GL_RG16, "GL_RG16");
		spInternalF.put(GL45.GL_R16F, "GL_R16F");
		spInternalF.put(GL45.GL_R32F, "GL_R32F");
		spInternalF.put(GL45.GL_RG16F, "GL_RG16F");
		spInternalF.put(GL45.GL_RG32F, "GL_RG32F");
		spInternalF.put(GL45.GL_R8I, "GL_R8I");
		spInternalF.put(GL45.GL_R8UI, "GL_R8UI");
		spInternalF.put(GL45.GL_R16I, "GL_R16I");
		spInternalF.put(GL45.GL_R16UI, "GL_R16UI");
		spInternalF.put(GL45.GL_R32I, "GL_R32I");
		spInternalF.put(GL45.GL_R32UI, "GL_R32UI");
		spInternalF.put(GL45.GL_RG8I, "GL_RG8I");
		spInternalF.put(GL45.GL_RG8UI, "GL_RG8UI");
		spInternalF.put(GL45.GL_RG16I, "GL_RG16I");
		spInternalF.put(GL45.GL_RG16UI, "GL_RG16UI");
		spInternalF.put(GL45.GL_RG32I, "GL_RG32I");
		spInternalF.put(GL45.GL_RG32UI, "GL_RG32UI");
		spInternalF.put(GL45.GL_RG, "GL_RG");
		spInternalF.put(GL45.GL_COMPRESSED_RED, "GL_COMPRESSED_RED");
		spInternalF.put(GL45.GL_COMPRESSED_RG, "GL_COMPRESSED_RG");
		spInternalF.put(GL45.GL_RG_INTEGER, "GL_RG_INTEGER");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
		spInternalF.put(GL45.GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");
		spInternalF.put(GL45.GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
		spInternalF.put(GL45.GL_PRIMITIVES_GENERATED, "GL_PRIMITIVES_GENERATED");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
		spInternalF.put(GL45.GL_RASTERIZER_DISCARD, "GL_RASTERIZER_DISCARD");
		spInternalF.put(GL45.GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS,
				"GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
		spInternalF.put(GL45.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS,
				"GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_VARYINGS, "GL_TRANSFORM_FEEDBACK_VARYINGS");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_BUFFER_MODE, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
		spInternalF.put(GL45.GL_FRAMEBUFFER_SRGB, "GL_FRAMEBUFFER_SRGB");
		spInternalF.put(GL45.GL_CURRENT_RASTER_SECONDARY_COLOR, "GL_CURRENT_RASTER_SECONDARY_COLOR");
		spInternalF.put(GL45.GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
		spInternalF.put(GL45.GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
		spInternalF.put(GL45.GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
		spInternalF.put(GL45.GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
		spInternalF.put(GL45.GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
		spInternalF.put(GL45.GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
		spInternalF.put(GL45.GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
		spInternalF.put(GL45.GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
		spInternalF.put(GL45.GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER_BINDING");
		spInternalF.put(GL45.GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER_BINDING");
		spInternalF.put(GL45.GL_SRGB, "GL_SRGB");
		spInternalF.put(GL45.GL_SRGB8, "GL_SRGB8");
		spInternalF.put(GL45.GL_SRGB_ALPHA, "GL_SRGB_ALPHA");
		spInternalF.put(GL45.GL_SRGB8_ALPHA8, "GL_SRGB8_ALPHA8");
		spInternalF.put(GL45.GL_SLUMINANCE_ALPHA, "GL_SLUMINANCE_ALPHA");
		spInternalF.put(GL45.GL_SLUMINANCE8_ALPHA8, "GL_SLUMINANCE8_ALPHA8");
		spInternalF.put(GL45.GL_SLUMINANCE, "GL_SLUMINANCE");
		spInternalF.put(GL45.GL_SLUMINANCE8, "GL_SLUMINANCE8");
		spInternalF.put(GL45.GL_COMPRESSED_SRGB, "GL_COMPRESSED_SRGB");
		spInternalF.put(GL45.GL_COMPRESSED_SRGB_ALPHA, "GL_COMPRESSED_SRGB_ALPHA");
		spInternalF.put(GL45.GL_COMPRESSED_SLUMINANCE, "GL_COMPRESSED_SLUMINANCE");
		spInternalF.put(GL45.GL_COMPRESSED_SLUMINANCE_ALPHA, "GL_COMPRESSED_SLUMINANCE_ALPHA");
		spInternalF.put(GL45.GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
		spInternalF.put(GL45.GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
		spInternalF.put(GL45.GL_SHADER_TYPE, "GL_SHADER_TYPE");
		spInternalF.put(GL45.GL_DELETE_STATUS, "GL_DELETE_STATUS");
		spInternalF.put(GL45.GL_COMPILE_STATUS, "GL_COMPILE_STATUS");
		spInternalF.put(GL45.GL_LINK_STATUS, "GL_LINK_STATUS");
		spInternalF.put(GL45.GL_VALIDATE_STATUS, "GL_VALIDATE_STATUS");
		spInternalF.put(GL45.GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
		spInternalF.put(GL45.GL_ATTACHED_SHADERS, "GL_ATTACHED_SHADERS");
		spInternalF.put(GL45.GL_ACTIVE_UNIFORMS, "GL_ACTIVE_UNIFORMS");
		spInternalF.put(GL45.GL_ACTIVE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_UNIFORM_MAX_LENGTH");
		spInternalF.put(GL45.GL_ACTIVE_ATTRIBUTES, "GL_ACTIVE_ATTRIBUTES");
		spInternalF.put(GL45.GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH");
		spInternalF.put(GL45.GL_SHADER_SOURCE_LENGTH, "GL_SHADER_SOURCE_LENGTH");
		spInternalF.put(GL45.GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
		spInternalF.put(GL45.GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
		spInternalF.put(GL45.GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
		spInternalF.put(GL45.GL_INT_VEC2, "GL_INT_VEC2");
		spInternalF.put(GL45.GL_INT_VEC3, "GL_INT_VEC3");
		spInternalF.put(GL45.GL_INT_VEC4, "GL_INT_VEC4");
		spInternalF.put(GL45.GL_BOOL, "GL_BOOL");
		spInternalF.put(GL45.GL_BOOL_VEC2, "GL_BOOL_VEC2");
		spInternalF.put(GL45.GL_BOOL_VEC3, "GL_BOOL_VEC3");
		spInternalF.put(GL45.GL_BOOL_VEC4, "GL_BOOL_VEC4");
		spInternalF.put(GL45.GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
		spInternalF.put(GL45.GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
		spInternalF.put(GL45.GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
		spInternalF.put(GL45.GL_SAMPLER_1D, "GL_SAMPLER_1D");
		spInternalF.put(GL45.GL_SAMPLER_2D, "GL_SAMPLER_2D");
		spInternalF.put(GL45.GL_SAMPLER_3D, "GL_SAMPLER_3D");
		spInternalF.put(GL45.GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
		spInternalF.put(GL45.GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
		spInternalF.put(GL45.GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
		spInternalF.put(GL45.GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
		spInternalF.put(GL45.GL_MAX_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_VERTEX_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_MAX_VARYING_FLOATS, "GL_MAX_VARYING_FLOATS");
		spInternalF.put(GL45.GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
		spInternalF.put(GL45.GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
		spInternalF.put(GL45.GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
		spInternalF.put(GL45.GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
		spInternalF.put(GL45.GL_MAX_TEXTURE_COORDS, "GL_MAX_TEXTURE_COORDS");
		spInternalF.put(GL45.GL_VERTEX_PROGRAM_POINT_SIZE, "GL_VERTEX_PROGRAM_POINT_SIZE");
		spInternalF.put(GL45.GL_VERTEX_PROGRAM_TWO_SIDE, "GL_VERTEX_PROGRAM_TWO_SIDE");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
		spInternalF.put(GL45.GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
		spInternalF.put(GL45.GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
		spInternalF.put(GL45.GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS");
		spInternalF.put(GL45.GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
		spInternalF.put(GL45.GL_MAX_DRAW_BUFFERS, "GL_MAX_DRAW_BUFFERS");
		spInternalF.put(GL45.GL_DRAW_BUFFER0, "GL_DRAW_BUFFER0");
		spInternalF.put(GL45.GL_DRAW_BUFFER1, "GL_DRAW_BUFFER1");
		spInternalF.put(GL45.GL_DRAW_BUFFER2, "GL_DRAW_BUFFER2");
		spInternalF.put(GL45.GL_DRAW_BUFFER3, "GL_DRAW_BUFFER3");
		spInternalF.put(GL45.GL_DRAW_BUFFER4, "GL_DRAW_BUFFER4");
		spInternalF.put(GL45.GL_DRAW_BUFFER5, "GL_DRAW_BUFFER5");
		spInternalF.put(GL45.GL_DRAW_BUFFER6, "GL_DRAW_BUFFER6");
		spInternalF.put(GL45.GL_DRAW_BUFFER7, "GL_DRAW_BUFFER7");
		spInternalF.put(GL45.GL_DRAW_BUFFER8, "GL_DRAW_BUFFER8");
		spInternalF.put(GL45.GL_DRAW_BUFFER9, "GL_DRAW_BUFFER9");
		spInternalF.put(GL45.GL_DRAW_BUFFER10, "GL_DRAW_BUFFER10");
		spInternalF.put(GL45.GL_DRAW_BUFFER11, "GL_DRAW_BUFFER11");
		spInternalF.put(GL45.GL_DRAW_BUFFER12, "GL_DRAW_BUFFER12");
		spInternalF.put(GL45.GL_DRAW_BUFFER13, "GL_DRAW_BUFFER13");
		spInternalF.put(GL45.GL_DRAW_BUFFER14, "GL_DRAW_BUFFER14");
		spInternalF.put(GL45.GL_DRAW_BUFFER15, "GL_DRAW_BUFFER15");
		spInternalF.put(GL45.GL_POINT_SPRITE, "GL_POINT_SPRITE");
		spInternalF.put(GL45.GL_COORD_REPLACE, "GL_COORD_REPLACE");
		spInternalF.put(GL45.GL_POINT_SPRITE_COORD_ORIGIN, "GL_POINT_SPRITE_COORD_ORIGIN");
		spInternalF.put(GL45.GL_LOWER_LEFT, "GL_LOWER_LEFT");
		spInternalF.put(GL45.GL_UPPER_LEFT, "GL_UPPER_LEFT");
		spInternalF.put(GL45.GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
		spInternalF.put(GL45.GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
		spInternalF.put(GL45.GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
		spInternalF.put(GL45.GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
		spInternalF.put(GL45.GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
		spInternalF.put(GL45.GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
		spInternalF.put(GL45.GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
		spInternalF.put(GL45.GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
		spInternalF.put(GL45.GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
		spInternalF.put(GL45.GL_FOG_COORD_SRC, "GL_FOG_COORD_SRC");
		spInternalF.put(GL45.GL_FOG_COORD, "GL_FOG_COORD");
		spInternalF.put(GL45.GL_CURRENT_FOG_COORD, "GL_CURRENT_FOG_COORD");
		spInternalF.put(GL45.GL_FOG_COORD_ARRAY_TYPE, "GL_FOG_COORD_ARRAY_TYPE");
		spInternalF.put(GL45.GL_FOG_COORD_ARRAY_STRIDE, "GL_FOG_COORD_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_FOG_COORD_ARRAY_POINTER, "GL_FOG_COORD_ARRAY_POINTER");
		spInternalF.put(GL45.GL_FOG_COORD_ARRAY, "GL_FOG_COORD_ARRAY");
		spInternalF.put(GL45.GL_FOG_COORD_ARRAY_BUFFER_BINDING, "GL_FOG_COORD_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_SRC0_RGB, "GL_SRC0_RGB");
		spInternalF.put(GL45.GL_SRC1_RGB, "GL_SRC1_RGB");
		spInternalF.put(GL45.GL_SRC2_RGB, "GL_SRC2_RGB");
		spInternalF.put(GL45.GL_SRC0_ALPHA, "GL_SRC0_ALPHA");
		spInternalF.put(GL45.GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
		spInternalF.put(GL45.GL_SRC2_ALPHA, "GL_SRC2_ALPHA");
		spInternalF.put(GL45.GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
		spInternalF.put(GL45.GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
		spInternalF.put(GL45.GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_BUFFER_BINDING, "GL_VERTEX_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_NORMAL_ARRAY_BUFFER_BINDING, "GL_NORMAL_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_COLOR_ARRAY_BUFFER_BINDING, "GL_COLOR_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_INDEX_ARRAY_BUFFER_BINDING, "GL_INDEX_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_EDGE_FLAG_ARRAY_BUFFER_BINDING, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_WEIGHT_ARRAY_BUFFER_BINDING, "GL_WEIGHT_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
		spInternalF.put(GL45.GL_STREAM_DRAW, "GL_STREAM_DRAW");
		spInternalF.put(GL45.GL_STREAM_READ, "GL_STREAM_READ");
		spInternalF.put(GL45.GL_STREAM_COPY, "GL_STREAM_COPY");
		spInternalF.put(GL45.GL_STATIC_DRAW, "GL_STATIC_DRAW");
		spInternalF.put(GL45.GL_STATIC_READ, "GL_STATIC_READ");
		spInternalF.put(GL45.GL_STATIC_COPY, "GL_STATIC_COPY");
		spInternalF.put(GL45.GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
		spInternalF.put(GL45.GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
		spInternalF.put(GL45.GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
		spInternalF.put(GL45.GL_READ_ONLY, "GL_READ_ONLY");
		spInternalF.put(GL45.GL_WRITE_ONLY, "GL_WRITE_ONLY");
		spInternalF.put(GL45.GL_READ_WRITE, "GL_READ_WRITE");
		spInternalF.put(GL45.GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
		spInternalF.put(GL45.GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
		spInternalF.put(GL45.GL_BUFFER_ACCESS, "GL_BUFFER_ACCESS");
		spInternalF.put(GL45.GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
		spInternalF.put(GL45.GL_BUFFER_MAP_POINTER, "GL_BUFFER_MAP_POINTER");
		spInternalF.put(GL45.GL_SAMPLES_PASSED, "GL_SAMPLES_PASSED");
		spInternalF.put(GL45.GL_QUERY_COUNTER_BITS, "GL_QUERY_COUNTER_BITS");
		spInternalF.put(GL45.GL_CURRENT_QUERY, "GL_CURRENT_QUERY");
		spInternalF.put(GL45.GL_QUERY_RESULT, "GL_QUERY_RESULT");
		spInternalF.put(GL45.GL_QUERY_RESULT_AVAILABLE, "GL_QUERY_RESULT_AVAILABLE");
		spInternalF.put(GL45.GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
		spInternalF.put(GL45.GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
		spInternalF.put(GL45.GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
		spInternalF.put(GL45.GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
		spInternalF.put(GL45.GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
		spInternalF.put(GL45.GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
		spInternalF.put(GL45.GL_FUNC_ADD, "GL_FUNC_ADD");
		spInternalF.put(GL45.GL_MIN, "GL_MIN");
		spInternalF.put(GL45.GL_MAX, "GL_MAX");
		spInternalF.put(GL45.GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
		spInternalF.put(GL45.GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
		spInternalF.put(GL45.GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
		spInternalF.put(GL45.GL_DEPTH_COMPONENT24, "GL_DEPTH_COMPONENT24");
		spInternalF.put(GL45.GL_DEPTH_COMPONENT32, "GL_DEPTH_COMPONENT32");
		spInternalF.put(GL45.GL_TEXTURE_DEPTH_SIZE, "GL_TEXTURE_DEPTH_SIZE");
		spInternalF.put(GL45.GL_DEPTH_TEXTURE_MODE, "GL_DEPTH_TEXTURE_MODE");
		spInternalF.put(GL45.GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
		spInternalF.put(GL45.GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
		spInternalF.put(GL45.GL_COMPARE_R_TO_TEXTURE, "GL_COMPARE_R_TO_TEXTURE");
		spInternalF.put(GL45.GL_FOG_COORDINATE_SOURCE, "GL_FOG_COORDINATE_SOURCE");
		spInternalF.put(GL45.GL_FOG_COORDINATE, "GL_FOG_COORDINATE");
		spInternalF.put(GL45.GL_FRAGMENT_DEPTH, "GL_FRAGMENT_DEPTH");
		spInternalF.put(GL45.GL_CURRENT_FOG_COORDINATE, "GL_CURRENT_FOG_COORDINATE");
		spInternalF.put(GL45.GL_FOG_COORDINATE_ARRAY_TYPE, "GL_FOG_COORDINATE_ARRAY_TYPE");
		spInternalF.put(GL45.GL_FOG_COORDINATE_ARRAY_STRIDE, "GL_FOG_COORDINATE_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_FOG_COORDINATE_ARRAY_POINTER, "GL_FOG_COORDINATE_ARRAY_POINTER");
		spInternalF.put(GL45.GL_FOG_COORDINATE_ARRAY, "GL_FOG_COORDINATE_ARRAY");
		spInternalF.put(GL45.GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
		spInternalF.put(GL45.GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
		spInternalF.put(GL45.GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
		spInternalF.put(GL45.GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
		spInternalF.put(GL45.GL_COLOR_SUM, "GL_COLOR_SUM");
		spInternalF.put(GL45.GL_CURRENT_SECONDARY_COLOR, "GL_CURRENT_SECONDARY_COLOR");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY_SIZE, "GL_SECONDARY_COLOR_ARRAY_SIZE");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY_TYPE, "GL_SECONDARY_COLOR_ARRAY_TYPE");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY_STRIDE, "GL_SECONDARY_COLOR_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY_POINTER, "GL_SECONDARY_COLOR_ARRAY_POINTER");
		spInternalF.put(GL45.GL_SECONDARY_COLOR_ARRAY, "GL_SECONDARY_COLOR_ARRAY");
		spInternalF.put(GL45.GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
		spInternalF.put(GL45.GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
		spInternalF.put(GL45.GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
		spInternalF.put(GL45.GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
		spInternalF.put(GL45.GL_INCR_WRAP, "GL_INCR_WRAP");
		spInternalF.put(GL45.GL_DECR_WRAP, "GL_DECR_WRAP");
		spInternalF.put(GL45.GL_TEXTURE_FILTER_CONTROL, "GL_TEXTURE_FILTER_CONTROL");
		spInternalF.put(GL45.GL_TEXTURE_LOD_BIAS, "GL_TEXTURE_LOD_BIAS");
		spInternalF.put(GL45.GL_MAX_TEXTURE_LOD_BIAS, "GL_MAX_TEXTURE_LOD_BIAS");
		spInternalF.put(GL45.GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
		spInternalF.put(GL45.GL_COMPRESSED_ALPHA, "GL_COMPRESSED_ALPHA");
		spInternalF.put(GL45.GL_COMPRESSED_LUMINANCE, "GL_COMPRESSED_LUMINANCE");
		spInternalF.put(GL45.GL_COMPRESSED_LUMINANCE_ALPHA, "GL_COMPRESSED_LUMINANCE_ALPHA");
		spInternalF.put(GL45.GL_COMPRESSED_INTENSITY, "GL_COMPRESSED_INTENSITY");
		spInternalF.put(GL45.GL_COMPRESSED_RGB, "GL_COMPRESSED_RGB");
		spInternalF.put(GL45.GL_COMPRESSED_RGBA, "GL_COMPRESSED_RGBA");
		spInternalF.put(GL45.GL_TEXTURE_COMPRESSION_HINT, "GL_TEXTURE_COMPRESSION_HINT");
		spInternalF.put(GL45.GL_TEXTURE_COMPRESSED_IMAGE_SIZE, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
		spInternalF.put(GL45.GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
		spInternalF.put(GL45.GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
		spInternalF.put(GL45.GL_NORMAL_MAP, "GL_NORMAL_MAP");
		spInternalF.put(GL45.GL_REFLECTION_MAP, "GL_REFLECTION_MAP");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_POSITIVE_X, "GL_TEXTURE_CUBE_MAP_POSITIVE_X");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_NEGATIVE_X, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_POSITIVE_Y, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_POSITIVE_Z, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
		spInternalF.put(GL45.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_CUBE_MAP, "GL_PROXY_TEXTURE_CUBE_MAP");
		spInternalF.put(GL45.GL_MAX_CUBE_MAP_TEXTURE_SIZE, "GL_MAX_CUBE_MAP_TEXTURE_SIZE");
		spInternalF.put(GL45.GL_MULTISAMPLE, "GL_MULTISAMPLE");
		spInternalF.put(GL45.GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
		spInternalF.put(GL45.GL_SAMPLE_ALPHA_TO_ONE, "GL_SAMPLE_ALPHA_TO_ONE");
		spInternalF.put(GL45.GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
		spInternalF.put(GL45.GL_MULTISAMPLE_BIT, "GL_MULTISAMPLE_BIT");
		spInternalF.put(GL45.GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
		spInternalF.put(GL45.GL_SAMPLES, "GL_SAMPLES");
		spInternalF.put(GL45.GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
		spInternalF.put(GL45.GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
		spInternalF.put(GL45.GL_TEXTURE0, "GL_TEXTURE0");
		spInternalF.put(GL45.GL_TEXTURE1, "GL_TEXTURE1");
		spInternalF.put(GL45.GL_TEXTURE2, "GL_TEXTURE2");
		spInternalF.put(GL45.GL_TEXTURE3, "GL_TEXTURE3");
		spInternalF.put(GL45.GL_TEXTURE4, "GL_TEXTURE4");
		spInternalF.put(GL45.GL_TEXTURE5, "GL_TEXTURE5");
		spInternalF.put(GL45.GL_TEXTURE6, "GL_TEXTURE6");
		spInternalF.put(GL45.GL_TEXTURE7, "GL_TEXTURE7");
		spInternalF.put(GL45.GL_TEXTURE8, "GL_TEXTURE8");
		spInternalF.put(GL45.GL_TEXTURE9, "GL_TEXTURE9");
		spInternalF.put(GL45.GL_TEXTURE10, "GL_TEXTURE10");
		spInternalF.put(GL45.GL_TEXTURE11, "GL_TEXTURE11");
		spInternalF.put(GL45.GL_TEXTURE12, "GL_TEXTURE12");
		spInternalF.put(GL45.GL_TEXTURE13, "GL_TEXTURE13");
		spInternalF.put(GL45.GL_TEXTURE14, "GL_TEXTURE14");
		spInternalF.put(GL45.GL_TEXTURE15, "GL_TEXTURE15");
		spInternalF.put(GL45.GL_TEXTURE16, "GL_TEXTURE16");
		spInternalF.put(GL45.GL_TEXTURE17, "GL_TEXTURE17");
		spInternalF.put(GL45.GL_TEXTURE18, "GL_TEXTURE18");
		spInternalF.put(GL45.GL_TEXTURE19, "GL_TEXTURE19");
		spInternalF.put(GL45.GL_TEXTURE20, "GL_TEXTURE20");
		spInternalF.put(GL45.GL_TEXTURE21, "GL_TEXTURE21");
		spInternalF.put(GL45.GL_TEXTURE22, "GL_TEXTURE22");
		spInternalF.put(GL45.GL_TEXTURE23, "GL_TEXTURE23");
		spInternalF.put(GL45.GL_TEXTURE24, "GL_TEXTURE24");
		spInternalF.put(GL45.GL_TEXTURE25, "GL_TEXTURE25");
		spInternalF.put(GL45.GL_TEXTURE26, "GL_TEXTURE26");
		spInternalF.put(GL45.GL_TEXTURE27, "GL_TEXTURE27");
		spInternalF.put(GL45.GL_TEXTURE28, "GL_TEXTURE28");
		spInternalF.put(GL45.GL_TEXTURE29, "GL_TEXTURE29");
		spInternalF.put(GL45.GL_TEXTURE30, "GL_TEXTURE30");
		spInternalF.put(GL45.GL_TEXTURE31, "GL_TEXTURE31");
		spInternalF.put(GL45.GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
		spInternalF.put(GL45.GL_CLIENT_ACTIVE_TEXTURE, "GL_CLIENT_ACTIVE_TEXTURE");
		spInternalF.put(GL45.GL_MAX_TEXTURE_UNITS, "GL_MAX_TEXTURE_UNITS");
		spInternalF.put(GL45.GL_COMBINE, "GL_COMBINE");
		spInternalF.put(GL45.GL_COMBINE_RGB, "GL_COMBINE_RGB");
		spInternalF.put(GL45.GL_COMBINE_ALPHA, "GL_COMBINE_ALPHA");
		spInternalF.put(GL45.GL_SOURCE0_RGB, "GL_SOURCE0_RGB");
		spInternalF.put(GL45.GL_SOURCE1_RGB, "GL_SOURCE1_RGB");
		spInternalF.put(GL45.GL_SOURCE2_RGB, "GL_SOURCE2_RGB");
		spInternalF.put(GL45.GL_SOURCE0_ALPHA, "GL_SOURCE0_ALPHA");
		spInternalF.put(GL45.GL_SOURCE1_ALPHA, "GL_SOURCE1_ALPHA");
		spInternalF.put(GL45.GL_SOURCE2_ALPHA, "GL_SOURCE2_ALPHA");
		spInternalF.put(GL45.GL_OPERAND0_RGB, "GL_OPERAND0_RGB");
		spInternalF.put(GL45.GL_OPERAND1_RGB, "GL_OPERAND1_RGB");
		spInternalF.put(GL45.GL_OPERAND2_RGB, "GL_OPERAND2_RGB");
		spInternalF.put(GL45.GL_OPERAND0_ALPHA, "GL_OPERAND0_ALPHA");
		spInternalF.put(GL45.GL_OPERAND1_ALPHA, "GL_OPERAND1_ALPHA");
		spInternalF.put(GL45.GL_OPERAND2_ALPHA, "GL_OPERAND2_ALPHA");
		spInternalF.put(GL45.GL_RGB_SCALE, "GL_RGB_SCALE");
		spInternalF.put(GL45.GL_ADD_SIGNED, "GL_ADD_SIGNED");
		spInternalF.put(GL45.GL_INTERPOLATE, "GL_INTERPOLATE");
		spInternalF.put(GL45.GL_SUBTRACT, "GL_SUBTRACT");
		spInternalF.put(GL45.GL_CONSTANT, "GL_CONSTANT");
		spInternalF.put(GL45.GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
		spInternalF.put(GL45.GL_PREVIOUS, "GL_PREVIOUS");
		spInternalF.put(GL45.GL_DOT3_RGB, "GL_DOT3_RGB");
		spInternalF.put(GL45.GL_DOT3_RGBA, "GL_DOT3_RGBA");
		spInternalF.put(GL45.GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
		spInternalF.put(GL45.GL_TRANSPOSE_MODELVIEW_MATRIX, "GL_TRANSPOSE_MODELVIEW_MATRIX");
		spInternalF.put(GL45.GL_TRANSPOSE_PROJECTION_MATRIX, "GL_TRANSPOSE_PROJECTION_MATRIX");
		spInternalF.put(GL45.GL_TRANSPOSE_TEXTURE_MATRIX, "GL_TRANSPOSE_TEXTURE_MATRIX");
		spInternalF.put(GL45.GL_TRANSPOSE_COLOR_MATRIX, "GL_TRANSPOSE_COLOR_MATRIX");
		spInternalF.put(GL45.GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
		spInternalF.put(GL45.GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
		spInternalF.put(GL45.GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
		spInternalF.put(GL45.GL_SMOOTH_POINT_SIZE_GRANULARITY, "GL_SMOOTH_POINT_SIZE_GRANULARITY");
		spInternalF.put(GL45.GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
		spInternalF.put(GL45.GL_SMOOTH_LINE_WIDTH_GRANULARITY, "GL_SMOOTH_LINE_WIDTH_GRANULARITY");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
		spInternalF.put(GL45.GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
		spInternalF.put(GL45.GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
		spInternalF.put(GL45.GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
		spInternalF.put(GL45.GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
		spInternalF.put(GL45.GL_TEXTURE_3D, "GL_TEXTURE_3D");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_3D, "GL_PROXY_TEXTURE_3D");
		spInternalF.put(GL45.GL_TEXTURE_DEPTH, "GL_TEXTURE_DEPTH");
		spInternalF.put(GL45.GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
		spInternalF.put(GL45.GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
		spInternalF.put(GL45.GL_BGR, "GL_BGR");
		spInternalF.put(GL45.GL_BGRA, "GL_BGRA");
		spInternalF.put(GL45.GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
		spInternalF.put(GL45.GL_UNSIGNED_BYTE_2_3_3_REV, "GL_UNSIGNED_BYTE_2_3_3_REV");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_5_6_5_REV, "GL_UNSIGNED_SHORT_5_6_5_REV");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_4_4_4_4_REV, "GL_UNSIGNED_SHORT_4_4_4_4_REV");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT_1_5_5_5_REV, "GL_UNSIGNED_SHORT_1_5_5_5_REV");
		spInternalF.put(GL45.GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
		spInternalF.put(GL45.GL_UNSIGNED_INT_8_8_8_8_REV, "GL_UNSIGNED_INT_8_8_8_8_REV");
		spInternalF.put(GL45.GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
		spInternalF.put(GL45.GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
		spInternalF.put(GL45.GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
		spInternalF.put(GL45.GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
		spInternalF.put(GL45.GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
		spInternalF.put(GL45.GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
		spInternalF.put(GL45.GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
		spInternalF.put(GL45.GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
		spInternalF.put(GL45.GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
		spInternalF.put(GL45.GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
		spInternalF.put(GL45.GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
		spInternalF.put(GL45.GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
		spInternalF.put(GL45.GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
		spInternalF.put(GL45.GL_ACCUM, "GL_ACCUM");
		spInternalF.put(GL45.GL_LOAD, "GL_LOAD");
		spInternalF.put(GL45.GL_RETURN, "GL_RETURN");
		spInternalF.put(GL45.GL_MULT, "GL_MULT");
		spInternalF.put(GL45.GL_ADD, "GL_ADD");
		spInternalF.put(GL45.GL_NEVER, "GL_NEVER");
		spInternalF.put(GL45.GL_LESS, "GL_LESS");
		spInternalF.put(GL45.GL_EQUAL, "GL_EQUAL");
		spInternalF.put(GL45.GL_LEQUAL, "GL_LEQUAL");
		spInternalF.put(GL45.GL_GREATER, "GL_GREATER");
		spInternalF.put(GL45.GL_NOTEQUAL, "GL_NOTEQUAL");
		spInternalF.put(GL45.GL_GEQUAL, "GL_GEQUAL");
		spInternalF.put(GL45.GL_ALWAYS, "GL_ALWAYS");
		spInternalF.put(GL45.GL_CURRENT_BIT, "GL_CURRENT_BIT");
		spInternalF.put(GL45.GL_POINT_BIT, "GL_POINT_BIT");
		spInternalF.put(GL45.GL_LINE_BIT, "GL_LINE_BIT");
		spInternalF.put(GL45.GL_POLYGON_BIT, "GL_POLYGON_BIT");
		spInternalF.put(GL45.GL_POLYGON_STIPPLE_BIT, "GL_POLYGON_STIPPLE_BIT");
		spInternalF.put(GL45.GL_PIXEL_MODE_BIT, "GL_PIXEL_MODE_BIT");
		spInternalF.put(GL45.GL_LIGHTING_BIT, "GL_LIGHTING_BIT");
		spInternalF.put(GL45.GL_FOG_BIT, "GL_FOG_BIT");
		spInternalF.put(GL45.GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
		spInternalF.put(GL45.GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
		spInternalF.put(GL45.GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
		spInternalF.put(GL45.GL_VIEWPORT_BIT, "GL_VIEWPORT_BIT");
		spInternalF.put(GL45.GL_TRANSFORM_BIT, "GL_TRANSFORM_BIT");
		spInternalF.put(GL45.GL_ENABLE_BIT, "GL_ENABLE_BIT");
		spInternalF.put(GL45.GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
		spInternalF.put(GL45.GL_HINT_BIT, "GL_HINT_BIT");
		spInternalF.put(GL45.GL_EVAL_BIT, "GL_EVAL_BIT");
		spInternalF.put(GL45.GL_LIST_BIT, "GL_LIST_BIT");
		spInternalF.put(GL45.GL_TEXTURE_BIT, "GL_TEXTURE_BIT");
		spInternalF.put(GL45.GL_SCISSOR_BIT, "GL_SCISSOR_BIT");
		spInternalF.put(GL45.GL_ALL_ATTRIB_BITS, "GL_ALL_ATTRIB_BITS");
		spInternalF.put(GL45.GL_POINTS, "GL_POINTS");
		spInternalF.put(GL45.GL_LINES, "GL_LINES");
		spInternalF.put(GL45.GL_LINE_LOOP, "GL_LINE_LOOP");
		spInternalF.put(GL45.GL_LINE_STRIP, "GL_LINE_STRIP");
		spInternalF.put(GL45.GL_TRIANGLES, "GL_TRIANGLES");
		spInternalF.put(GL45.GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
		spInternalF.put(GL45.GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
		spInternalF.put(GL45.GL_QUADS, "GL_QUADS");
		spInternalF.put(GL45.GL_QUAD_STRIP, "GL_QUAD_STRIP");
		spInternalF.put(GL45.GL_POLYGON, "GL_POLYGON");
		spInternalF.put(GL45.GL_ZERO, "GL_ZERO");
		spInternalF.put(GL45.GL_ONE, "GL_ONE");
		spInternalF.put(GL45.GL_SRC_COLOR, "GL_SRC_COLOR");
		spInternalF.put(GL45.GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
		spInternalF.put(GL45.GL_SRC_ALPHA, "GL_SRC_ALPHA");
		spInternalF.put(GL45.GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
		spInternalF.put(GL45.GL_DST_ALPHA, "GL_DST_ALPHA");
		spInternalF.put(GL45.GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
		spInternalF.put(GL45.GL_DST_COLOR, "GL_DST_COLOR");
		spInternalF.put(GL45.GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
		spInternalF.put(GL45.GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
		spInternalF.put(GL45.GL_TRUE, "GL_TRUE");
		spInternalF.put(GL45.GL_FALSE, "GL_FALSE");
		spInternalF.put(GL45.GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
		spInternalF.put(GL45.GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
		spInternalF.put(GL45.GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
		spInternalF.put(GL45.GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
		spInternalF.put(GL45.GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
		spInternalF.put(GL45.GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
		spInternalF.put(GL45.GL_BYTE, "GL_BYTE");
		spInternalF.put(GL45.GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
		spInternalF.put(GL45.GL_SHORT, "GL_SHORT");
		spInternalF.put(GL45.GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
		spInternalF.put(GL45.GL_INT, "GL_INT");
		spInternalF.put(GL45.GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
		spInternalF.put(GL45.GL_FLOAT, "GL_FLOAT");
		spInternalF.put(GL45.GL_2_BYTES, "GL_2_BYTES");
		spInternalF.put(GL45.GL_3_BYTES, "GL_3_BYTES");
		spInternalF.put(GL45.GL_4_BYTES, "GL_4_BYTES");
		spInternalF.put(GL45.GL_DOUBLE, "GL_DOUBLE");
		spInternalF.put(GL45.GL_NONE, "GL_NONE");
		spInternalF.put(GL45.GL_FRONT_LEFT, "GL_FRONT_LEFT");
		spInternalF.put(GL45.GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
		spInternalF.put(GL45.GL_BACK_LEFT, "GL_BACK_LEFT");
		spInternalF.put(GL45.GL_BACK_RIGHT, "GL_BACK_RIGHT");
		spInternalF.put(GL45.GL_FRONT, "GL_FRONT");
		spInternalF.put(GL45.GL_BACK, "GL_BACK");
		spInternalF.put(GL45.GL_LEFT, "GL_LEFT");
		spInternalF.put(GL45.GL_RIGHT, "GL_RIGHT");
		spInternalF.put(GL45.GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
		spInternalF.put(GL45.GL_AUX0, "GL_AUX0");
		spInternalF.put(GL45.GL_AUX1, "GL_AUX1");
		spInternalF.put(GL45.GL_AUX2, "GL_AUX2");
		spInternalF.put(GL45.GL_AUX3, "GL_AUX3");
		spInternalF.put(GL45.GL_NO_ERROR, "GL_NO_ERROR");
		spInternalF.put(GL45.GL_INVALID_ENUM, "GL_INVALID_ENUM");
		spInternalF.put(GL45.GL_INVALID_VALUE, "GL_INVALID_VALUE");
		spInternalF.put(GL45.GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
		spInternalF.put(GL45.GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
		spInternalF.put(GL45.GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
		spInternalF.put(GL45.GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
		spInternalF.put(GL45.GL_2D, "GL_2D");
		spInternalF.put(GL45.GL_3D, "GL_3D");
		spInternalF.put(GL45.GL_3D_COLOR, "GL_3D_COLOR");
		spInternalF.put(GL45.GL_3D_COLOR_TEXTURE, "GL_3D_COLOR_TEXTURE");
		spInternalF.put(GL45.GL_4D_COLOR_TEXTURE, "GL_4D_COLOR_TEXTURE");
		spInternalF.put(GL45.GL_PASS_THROUGH_TOKEN, "GL_PASS_THROUGH_TOKEN");
		spInternalF.put(GL45.GL_POINT_TOKEN, "GL_POINT_TOKEN");
		spInternalF.put(GL45.GL_LINE_TOKEN, "GL_LINE_TOKEN");
		spInternalF.put(GL45.GL_POLYGON_TOKEN, "GL_POLYGON_TOKEN");
		spInternalF.put(GL45.GL_BITMAP_TOKEN, "GL_BITMAP_TOKEN");
		spInternalF.put(GL45.GL_DRAW_PIXEL_TOKEN, "GL_DRAW_PIXEL_TOKEN");
		spInternalF.put(GL45.GL_COPY_PIXEL_TOKEN, "GL_COPY_PIXEL_TOKEN");
		spInternalF.put(GL45.GL_LINE_RESET_TOKEN, "GL_LINE_RESET_TOKEN");
		spInternalF.put(GL45.GL_EXP, "GL_EXP");
		spInternalF.put(GL45.GL_EXP2, "GL_EXP2");
		spInternalF.put(GL45.GL_CW, "GL_CW");
		spInternalF.put(GL45.GL_CCW, "GL_CCW");
		spInternalF.put(GL45.GL_COEFF, "GL_COEFF");
		spInternalF.put(GL45.GL_ORDER, "GL_ORDER");
		spInternalF.put(GL45.GL_DOMAIN, "GL_DOMAIN");
		spInternalF.put(GL45.GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
		spInternalF.put(GL45.GL_CURRENT_INDEX, "GL_CURRENT_INDEX");
		spInternalF.put(GL45.GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
		spInternalF.put(GL45.GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
		spInternalF.put(GL45.GL_CURRENT_RASTER_COLOR, "GL_CURRENT_RASTER_COLOR");
		spInternalF.put(GL45.GL_CURRENT_RASTER_INDEX, "GL_CURRENT_RASTER_INDEX");
		spInternalF.put(GL45.GL_CURRENT_RASTER_TEXTURE_COORDS, "GL_CURRENT_RASTER_TEXTURE_COORDS");
		spInternalF.put(GL45.GL_CURRENT_RASTER_POSITION, "GL_CURRENT_RASTER_POSITION");
		spInternalF.put(GL45.GL_CURRENT_RASTER_POSITION_VALID, "GL_CURRENT_RASTER_POSITION_VALID");
		spInternalF.put(GL45.GL_CURRENT_RASTER_DISTANCE, "GL_CURRENT_RASTER_DISTANCE");
		spInternalF.put(GL45.GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
		spInternalF.put(GL45.GL_POINT_SIZE, "GL_POINT_SIZE");
		spInternalF.put(GL45.GL_POINT_SIZE_RANGE, "GL_POINT_SIZE_RANGE");
		spInternalF.put(GL45.GL_POINT_SIZE_GRANULARITY, "GL_POINT_SIZE_GRANULARITY");
		spInternalF.put(GL45.GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
		spInternalF.put(GL45.GL_LINE_WIDTH, "GL_LINE_WIDTH");
		spInternalF.put(GL45.GL_LINE_WIDTH_RANGE, "GL_LINE_WIDTH_RANGE");
		spInternalF.put(GL45.GL_LINE_WIDTH_GRANULARITY, "GL_LINE_WIDTH_GRANULARITY");
		spInternalF.put(GL45.GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
		spInternalF.put(GL45.GL_LINE_STIPPLE_PATTERN, "GL_LINE_STIPPLE_PATTERN");
		spInternalF.put(GL45.GL_LINE_STIPPLE_REPEAT, "GL_LINE_STIPPLE_REPEAT");
		spInternalF.put(GL45.GL_LIST_MODE, "GL_LIST_MODE");
		spInternalF.put(GL45.GL_MAX_LIST_NESTING, "GL_MAX_LIST_NESTING");
		spInternalF.put(GL45.GL_LIST_BASE, "GL_LIST_BASE");
		spInternalF.put(GL45.GL_LIST_INDEX, "GL_LIST_INDEX");
		spInternalF.put(GL45.GL_POLYGON_MODE, "GL_POLYGON_MODE");
		spInternalF.put(GL45.GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH");
		spInternalF.put(GL45.GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
		spInternalF.put(GL45.GL_EDGE_FLAG, "GL_EDGE_FLAG");
		spInternalF.put(GL45.GL_CULL_FACE, "GL_CULL_FACE");
		spInternalF.put(GL45.GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
		spInternalF.put(GL45.GL_FRONT_FACE, "GL_FRONT_FACE");
		spInternalF.put(GL45.GL_LIGHTING, "GL_LIGHTING");
		spInternalF.put(GL45.GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
		spInternalF.put(GL45.GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
		spInternalF.put(GL45.GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
		spInternalF.put(GL45.GL_SHADE_MODEL, "GL_SHADE_MODEL");
		spInternalF.put(GL45.GL_COLOR_MATERIAL_FACE, "GL_COLOR_MATERIAL_FACE");
		spInternalF.put(GL45.GL_COLOR_MATERIAL_PARAMETER, "GL_COLOR_MATERIAL_PARAMETER");
		spInternalF.put(GL45.GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
		spInternalF.put(GL45.GL_FOG, "GL_FOG");
		spInternalF.put(GL45.GL_FOG_INDEX, "GL_FOG_INDEX");
		spInternalF.put(GL45.GL_FOG_DENSITY, "GL_FOG_DENSITY");
		spInternalF.put(GL45.GL_FOG_START, "GL_FOG_START");
		spInternalF.put(GL45.GL_FOG_END, "GL_FOG_END");
		spInternalF.put(GL45.GL_FOG_MODE, "GL_FOG_MODE");
		spInternalF.put(GL45.GL_FOG_COLOR, "GL_FOG_COLOR");
		spInternalF.put(GL45.GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
		spInternalF.put(GL45.GL_DEPTH_TEST, "GL_DEPTH_TEST");
		spInternalF.put(GL45.GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
		spInternalF.put(GL45.GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
		spInternalF.put(GL45.GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
		spInternalF.put(GL45.GL_ACCUM_CLEAR_VALUE, "GL_ACCUM_CLEAR_VALUE");
		spInternalF.put(GL45.GL_STENCIL_TEST, "GL_STENCIL_TEST");
		spInternalF.put(GL45.GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
		spInternalF.put(GL45.GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
		spInternalF.put(GL45.GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
		spInternalF.put(GL45.GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
		spInternalF.put(GL45.GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
		spInternalF.put(GL45.GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
		spInternalF.put(GL45.GL_STENCIL_REF, "GL_STENCIL_REF");
		spInternalF.put(GL45.GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
		spInternalF.put(GL45.GL_MATRIX_MODE, "GL_MATRIX_MODE");
		spInternalF.put(GL45.GL_NORMALIZE, "GL_NORMALIZE");
		spInternalF.put(GL45.GL_VIEWPORT, "GL_VIEWPORT");
		spInternalF.put(GL45.GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
		spInternalF.put(GL45.GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
		spInternalF.put(GL45.GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
		spInternalF.put(GL45.GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
		spInternalF.put(GL45.GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
		spInternalF.put(GL45.GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
		spInternalF.put(GL45.GL_ATTRIB_STACK_DEPTH, "GL_ATTRIB_STACK_DEPTH");
		spInternalF.put(GL45.GL_CLIENT_ATTRIB_STACK_DEPTH, "GL_CLIENT_ATTRIB_STACK_DEPTH");
		spInternalF.put(GL45.GL_ALPHA_TEST, "GL_ALPHA_TEST");
		spInternalF.put(GL45.GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
		spInternalF.put(GL45.GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
		spInternalF.put(GL45.GL_DITHER, "GL_DITHER");
		spInternalF.put(GL45.GL_BLEND_DST, "GL_BLEND_DST");
		spInternalF.put(GL45.GL_BLEND_SRC, "GL_BLEND_SRC");
		spInternalF.put(GL45.GL_BLEND, "GL_BLEND");
		spInternalF.put(GL45.GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE");
		spInternalF.put(GL45.GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
		spInternalF.put(GL45.GL_LOGIC_OP, "GL_LOGIC_OP");
		spInternalF.put(GL45.GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
		spInternalF.put(GL45.GL_AUX_BUFFERS, "GL_AUX_BUFFERS");
		spInternalF.put(GL45.GL_DRAW_BUFFER, "GL_DRAW_BUFFER");
		spInternalF.put(GL45.GL_READ_BUFFER, "GL_READ_BUFFER");
		spInternalF.put(GL45.GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
		spInternalF.put(GL45.GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
		spInternalF.put(GL45.GL_INDEX_CLEAR_VALUE, "GL_INDEX_CLEAR_VALUE");
		spInternalF.put(GL45.GL_INDEX_WRITEMASK, "GL_INDEX_WRITEMASK");
		spInternalF.put(GL45.GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
		spInternalF.put(GL45.GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
		spInternalF.put(GL45.GL_INDEX_MODE, "GL_INDEX_MODE");
		spInternalF.put(GL45.GL_RGBA_MODE, "GL_RGBA_MODE");
		spInternalF.put(GL45.GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER");
		spInternalF.put(GL45.GL_STEREO, "GL_STEREO");
		spInternalF.put(GL45.GL_RENDER_MODE, "GL_RENDER_MODE");
		spInternalF.put(GL45.GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
		spInternalF.put(GL45.GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
		spInternalF.put(GL45.GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
		spInternalF.put(GL45.GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT");
		spInternalF.put(GL45.GL_FOG_HINT, "GL_FOG_HINT");
		spInternalF.put(GL45.GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
		spInternalF.put(GL45.GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
		spInternalF.put(GL45.GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
		spInternalF.put(GL45.GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
		spInternalF.put(GL45.GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
		spInternalF.put(GL45.GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
		spInternalF.put(GL45.GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
		spInternalF.put(GL45.GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
		spInternalF.put(GL45.GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_I_SIZE, "GL_PIXEL_MAP_I_TO_I_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_S_TO_S_SIZE, "GL_PIXEL_MAP_S_TO_S_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_R_SIZE, "GL_PIXEL_MAP_I_TO_R_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_G_SIZE, "GL_PIXEL_MAP_I_TO_G_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_B_SIZE, "GL_PIXEL_MAP_I_TO_B_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_I_TO_A_SIZE, "GL_PIXEL_MAP_I_TO_A_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_R_TO_R_SIZE, "GL_PIXEL_MAP_R_TO_R_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_G_TO_G_SIZE, "GL_PIXEL_MAP_G_TO_G_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_B_TO_B_SIZE, "GL_PIXEL_MAP_B_TO_B_SIZE");
		spInternalF.put(GL45.GL_PIXEL_MAP_A_TO_A_SIZE, "GL_PIXEL_MAP_A_TO_A_SIZE");
		spInternalF.put(GL45.GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES");
		spInternalF.put(GL45.GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST");
		spInternalF.put(GL45.GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
		spInternalF.put(GL45.GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
		spInternalF.put(GL45.GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
		spInternalF.put(GL45.GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
		spInternalF.put(GL45.GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES");
		spInternalF.put(GL45.GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST");
		spInternalF.put(GL45.GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
		spInternalF.put(GL45.GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
		spInternalF.put(GL45.GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
		spInternalF.put(GL45.GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
		spInternalF.put(GL45.GL_MAP_COLOR, "GL_MAP_COLOR");
		spInternalF.put(GL45.GL_MAP_STENCIL, "GL_MAP_STENCIL");
		spInternalF.put(GL45.GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
		spInternalF.put(GL45.GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
		spInternalF.put(GL45.GL_RED_SCALE, "GL_RED_SCALE");
		spInternalF.put(GL45.GL_RED_BIAS, "GL_RED_BIAS");
		spInternalF.put(GL45.GL_ZOOM_X, "GL_ZOOM_X");
		spInternalF.put(GL45.GL_ZOOM_Y, "GL_ZOOM_Y");
		spInternalF.put(GL45.GL_GREEN_SCALE, "GL_GREEN_SCALE");
		spInternalF.put(GL45.GL_GREEN_BIAS, "GL_GREEN_BIAS");
		spInternalF.put(GL45.GL_BLUE_SCALE, "GL_BLUE_SCALE");
		spInternalF.put(GL45.GL_BLUE_BIAS, "GL_BLUE_BIAS");
		spInternalF.put(GL45.GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
		spInternalF.put(GL45.GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
		spInternalF.put(GL45.GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
		spInternalF.put(GL45.GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
		spInternalF.put(GL45.GL_MAX_EVAL_ORDER, "GL_MAX_EVAL_ORDER");
		spInternalF.put(GL45.GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
		spInternalF.put(GL45.GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
		spInternalF.put(GL45.GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
		spInternalF.put(GL45.GL_MAX_PIXEL_MAP_TABLE, "GL_MAX_PIXEL_MAP_TABLE");
		spInternalF.put(GL45.GL_MAX_ATTRIB_STACK_DEPTH, "GL_MAX_ATTRIB_STACK_DEPTH");
		spInternalF.put(GL45.GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
		spInternalF.put(GL45.GL_MAX_NAME_STACK_DEPTH, "GL_MAX_NAME_STACK_DEPTH");
		spInternalF.put(GL45.GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
		spInternalF.put(GL45.GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
		spInternalF.put(GL45.GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
		spInternalF.put(GL45.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
		spInternalF.put(GL45.GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
		spInternalF.put(GL45.GL_INDEX_BITS, "GL_INDEX_BITS");
		spInternalF.put(GL45.GL_RED_BITS, "GL_RED_BITS");
		spInternalF.put(GL45.GL_GREEN_BITS, "GL_GREEN_BITS");
		spInternalF.put(GL45.GL_BLUE_BITS, "GL_BLUE_BITS");
		spInternalF.put(GL45.GL_ALPHA_BITS, "GL_ALPHA_BITS");
		spInternalF.put(GL45.GL_DEPTH_BITS, "GL_DEPTH_BITS");
		spInternalF.put(GL45.GL_STENCIL_BITS, "GL_STENCIL_BITS");
		spInternalF.put(GL45.GL_ACCUM_RED_BITS, "GL_ACCUM_RED_BITS");
		spInternalF.put(GL45.GL_ACCUM_GREEN_BITS, "GL_ACCUM_GREEN_BITS");
		spInternalF.put(GL45.GL_ACCUM_BLUE_BITS, "GL_ACCUM_BLUE_BITS");
		spInternalF.put(GL45.GL_ACCUM_ALPHA_BITS, "GL_ACCUM_ALPHA_BITS");
		spInternalF.put(GL45.GL_NAME_STACK_DEPTH, "GL_NAME_STACK_DEPTH");
		spInternalF.put(GL45.GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
		spInternalF.put(GL45.GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
		spInternalF.put(GL45.GL_MAP1_INDEX, "GL_MAP1_INDEX");
		spInternalF.put(GL45.GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
		spInternalF.put(GL45.GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
		spInternalF.put(GL45.GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
		spInternalF.put(GL45.GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
		spInternalF.put(GL45.GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
		spInternalF.put(GL45.GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
		spInternalF.put(GL45.GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
		spInternalF.put(GL45.GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
		spInternalF.put(GL45.GL_MAP2_INDEX, "GL_MAP2_INDEX");
		spInternalF.put(GL45.GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
		spInternalF.put(GL45.GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
		spInternalF.put(GL45.GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
		spInternalF.put(GL45.GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
		spInternalF.put(GL45.GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
		spInternalF.put(GL45.GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
		spInternalF.put(GL45.GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
		spInternalF.put(GL45.GL_MAP1_GRID_DOMAIN, "GL_MAP1_GRID_DOMAIN");
		spInternalF.put(GL45.GL_MAP1_GRID_SEGMENTS, "GL_MAP1_GRID_SEGMENTS");
		spInternalF.put(GL45.GL_MAP2_GRID_DOMAIN, "GL_MAP2_GRID_DOMAIN");
		spInternalF.put(GL45.GL_MAP2_GRID_SEGMENTS, "GL_MAP2_GRID_SEGMENTS");
		spInternalF.put(GL45.GL_TEXTURE_1D, "GL_TEXTURE_1D");
		spInternalF.put(GL45.GL_TEXTURE_2D, "GL_TEXTURE_2D");
		spInternalF.put(GL45.GL_FEEDBACK_BUFFER_POINTER, "GL_FEEDBACK_BUFFER_POINTER");
		spInternalF.put(GL45.GL_FEEDBACK_BUFFER_SIZE, "GL_FEEDBACK_BUFFER_SIZE");
		spInternalF.put(GL45.GL_FEEDBACK_BUFFER_TYPE, "GL_FEEDBACK_BUFFER_TYPE");
		spInternalF.put(GL45.GL_SELECTION_BUFFER_POINTER, "GL_SELECTION_BUFFER_POINTER");
		spInternalF.put(GL45.GL_SELECTION_BUFFER_SIZE, "GL_SELECTION_BUFFER_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
		spInternalF.put(GL45.GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
		spInternalF.put(GL45.GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
		spInternalF.put(GL45.GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
		spInternalF.put(GL45.GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
		spInternalF.put(GL45.GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
		spInternalF.put(GL45.GL_DONT_CARE, "GL_DONT_CARE");
		spInternalF.put(GL45.GL_FASTEST, "GL_FASTEST");
		spInternalF.put(GL45.GL_NICEST, "GL_NICEST");
		spInternalF.put(GL45.GL_LIGHT0, "GL_LIGHT0");
		spInternalF.put(GL45.GL_LIGHT1, "GL_LIGHT1");
		spInternalF.put(GL45.GL_LIGHT2, "GL_LIGHT2");
		spInternalF.put(GL45.GL_LIGHT3, "GL_LIGHT3");
		spInternalF.put(GL45.GL_LIGHT4, "GL_LIGHT4");
		spInternalF.put(GL45.GL_LIGHT5, "GL_LIGHT5");
		spInternalF.put(GL45.GL_LIGHT6, "GL_LIGHT6");
		spInternalF.put(GL45.GL_LIGHT7, "GL_LIGHT7");
		spInternalF.put(GL45.GL_AMBIENT, "GL_AMBIENT");
		spInternalF.put(GL45.GL_DIFFUSE, "GL_DIFFUSE");
		spInternalF.put(GL45.GL_SPECULAR, "GL_SPECULAR");
		spInternalF.put(GL45.GL_POSITION, "GL_POSITION");
		spInternalF.put(GL45.GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
		spInternalF.put(GL45.GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
		spInternalF.put(GL45.GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
		spInternalF.put(GL45.GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
		spInternalF.put(GL45.GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
		spInternalF.put(GL45.GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
		spInternalF.put(GL45.GL_COMPILE, "GL_COMPILE");
		spInternalF.put(GL45.GL_COMPILE_AND_EXECUTE, "GL_COMPILE_AND_EXECUTE");
		spInternalF.put(GL45.GL_CLEAR, "GL_CLEAR");
		spInternalF.put(GL45.GL_AND, "GL_AND");
		spInternalF.put(GL45.GL_AND_REVERSE, "GL_AND_REVERSE");
		spInternalF.put(GL45.GL_COPY, "GL_COPY");
		spInternalF.put(GL45.GL_AND_INVERTED, "GL_AND_INVERTED");
		spInternalF.put(GL45.GL_NOOP, "GL_NOOP");
		spInternalF.put(GL45.GL_XOR, "GL_XOR");
		spInternalF.put(GL45.GL_OR, "GL_OR");
		spInternalF.put(GL45.GL_NOR, "GL_NOR");
		spInternalF.put(GL45.GL_EQUIV, "GL_EQUIV");
		spInternalF.put(GL45.GL_INVERT, "GL_INVERT");
		spInternalF.put(GL45.GL_OR_REVERSE, "GL_OR_REVERSE");
		spInternalF.put(GL45.GL_COPY_INVERTED, "GL_COPY_INVERTED");
		spInternalF.put(GL45.GL_OR_INVERTED, "GL_OR_INVERTED");
		spInternalF.put(GL45.GL_NAND, "GL_NAND");
		spInternalF.put(GL45.GL_SET, "GL_SET");
		spInternalF.put(GL45.GL_EMISSION, "GL_EMISSION");
		spInternalF.put(GL45.GL_SHININESS, "GL_SHININESS");
		spInternalF.put(GL45.GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
		spInternalF.put(GL45.GL_COLOR_INDEXES, "GL_COLOR_INDEXES");
		spInternalF.put(GL45.GL_MODELVIEW, "GL_MODELVIEW");
		spInternalF.put(GL45.GL_PROJECTION, "GL_PROJECTION");
		spInternalF.put(GL45.GL_TEXTURE, "GL_TEXTURE");
		spInternalF.put(GL45.GL_COLOR, "GL_COLOR");
		spInternalF.put(GL45.GL_DEPTH, "GL_DEPTH");
		spInternalF.put(GL45.GL_STENCIL, "GL_STENCIL");
		spInternalF.put(GL45.GL_COLOR_INDEX, "GL_COLOR_INDEX");
		spInternalF.put(GL45.GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
		spInternalF.put(GL45.GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
		spInternalF.put(GL45.GL_RED, "GL_RED");
		spInternalF.put(GL45.GL_GREEN, "GL_GREEN");
		spInternalF.put(GL45.GL_BLUE, "GL_BLUE");
		spInternalF.put(GL45.GL_ALPHA, "GL_ALPHA");
		spInternalF.put(GL45.GL_RGB, "GL_RGB");
		spInternalF.put(GL45.GL_RGBA, "GL_RGBA");
		spInternalF.put(GL45.GL_LUMINANCE, "GL_LUMINANCE");
		spInternalF.put(GL45.GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
		spInternalF.put(GL45.GL_BITMAP, "GL_BITMAP");
		spInternalF.put(GL45.GL_POINT, "GL_POINT");
		spInternalF.put(GL45.GL_LINE, "GL_LINE");
		spInternalF.put(GL45.GL_FILL, "GL_FILL");
		spInternalF.put(GL45.GL_RENDER, "GL_RENDER");
		spInternalF.put(GL45.GL_FEEDBACK, "GL_FEEDBACK");
		spInternalF.put(GL45.GL_SELECT, "GL_SELECT");
		spInternalF.put(GL45.GL_FLAT, "GL_FLAT");
		spInternalF.put(GL45.GL_SMOOTH, "GL_SMOOTH");
		spInternalF.put(GL45.GL_KEEP, "GL_KEEP");
		spInternalF.put(GL45.GL_REPLACE, "GL_REPLACE");
		spInternalF.put(GL45.GL_INCR, "GL_INCR");
		spInternalF.put(GL45.GL_DECR, "GL_DECR");
		spInternalF.put(GL45.GL_VENDOR, "GL_VENDOR");
		spInternalF.put(GL45.GL_RENDERER, "GL_RENDERER");
		spInternalF.put(GL45.GL_VERSION, "GL_VERSION");
		spInternalF.put(GL45.GL_EXTENSIONS, "GL_EXTENSIONS");
		spInternalF.put(GL45.GL_S, "GL_S");
		spInternalF.put(GL45.GL_T, "GL_T");
		spInternalF.put(GL45.GL_R, "GL_R");
		spInternalF.put(GL45.GL_Q, "GL_Q");
		spInternalF.put(GL45.GL_MODULATE, "GL_MODULATE");
		spInternalF.put(GL45.GL_DECAL, "GL_DECAL");
		spInternalF.put(GL45.GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
		spInternalF.put(GL45.GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
		spInternalF.put(GL45.GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
		spInternalF.put(GL45.GL_EYE_LINEAR, "GL_EYE_LINEAR");
		spInternalF.put(GL45.GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
		spInternalF.put(GL45.GL_SPHERE_MAP, "GL_SPHERE_MAP");
		spInternalF.put(GL45.GL_TEXTURE_GEN_MODE, "GL_TEXTURE_GEN_MODE");
		spInternalF.put(GL45.GL_OBJECT_PLANE, "GL_OBJECT_PLANE");
		spInternalF.put(GL45.GL_EYE_PLANE, "GL_EYE_PLANE");
		spInternalF.put(GL45.GL_NEAREST, "GL_NEAREST");
		spInternalF.put(GL45.GL_LINEAR, "GL_LINEAR");
		spInternalF.put(GL45.GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
		spInternalF.put(GL45.GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
		spInternalF.put(GL45.GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
		spInternalF.put(GL45.GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
		spInternalF.put(GL45.GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
		spInternalF.put(GL45.GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
		spInternalF.put(GL45.GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
		spInternalF.put(GL45.GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
		spInternalF.put(GL45.GL_CLAMP, "GL_CLAMP");
		spInternalF.put(GL45.GL_REPEAT, "GL_REPEAT");
		spInternalF.put(GL45.GL_CLIENT_PIXEL_STORE_BIT, "GL_CLIENT_PIXEL_STORE_BIT");
		spInternalF.put(GL45.GL_CLIENT_VERTEX_ARRAY_BIT, "GL_CLIENT_VERTEX_ARRAY_BIT");
		spInternalF.put(GL45.GL_CLIENT_ALL_ATTRIB_BITS, "GL_CLIENT_ALL_ATTRIB_BITS");
		spInternalF.put(GL45.GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
		spInternalF.put(GL45.GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
		spInternalF.put(GL45.GL_POLYGON_OFFSET_POINT, "GL_POLYGON_OFFSET_POINT");
		spInternalF.put(GL45.GL_POLYGON_OFFSET_LINE, "GL_POLYGON_OFFSET_LINE");
		spInternalF.put(GL45.GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
		spInternalF.put(GL45.GL_ALPHA4, "GL_ALPHA4");
		spInternalF.put(GL45.GL_ALPHA8, "GL_ALPHA8");
		spInternalF.put(GL45.GL_ALPHA12, "GL_ALPHA12");
		spInternalF.put(GL45.GL_ALPHA16, "GL_ALPHA16");
		spInternalF.put(GL45.GL_LUMINANCE4, "GL_LUMINANCE4");
		spInternalF.put(GL45.GL_LUMINANCE8, "GL_LUMINANCE8");
		spInternalF.put(GL45.GL_LUMINANCE12, "GL_LUMINANCE12");
		spInternalF.put(GL45.GL_LUMINANCE16, "GL_LUMINANCE16");
		spInternalF.put(GL45.GL_LUMINANCE4_ALPHA4, "GL_LUMINANCE4_ALPHA4");
		spInternalF.put(GL45.GL_LUMINANCE6_ALPHA2, "GL_LUMINANCE6_ALPHA2");
		spInternalF.put(GL45.GL_LUMINANCE8_ALPHA8, "GL_LUMINANCE8_ALPHA8");
		spInternalF.put(GL45.GL_LUMINANCE12_ALPHA4, "GL_LUMINANCE12_ALPHA4");
		spInternalF.put(GL45.GL_LUMINANCE12_ALPHA12, "GL_LUMINANCE12_ALPHA12");
		spInternalF.put(GL45.GL_LUMINANCE16_ALPHA16, "GL_LUMINANCE16_ALPHA16");
		spInternalF.put(GL45.GL_INTENSITY, "GL_INTENSITY");
		spInternalF.put(GL45.GL_INTENSITY4, "GL_INTENSITY4");
		spInternalF.put(GL45.GL_INTENSITY8, "GL_INTENSITY8");
		spInternalF.put(GL45.GL_INTENSITY12, "GL_INTENSITY12");
		spInternalF.put(GL45.GL_INTENSITY16, "GL_INTENSITY16");
		spInternalF.put(GL45.GL_R3_G3_B2, "GL_R3_G3_B2");
		spInternalF.put(GL45.GL_RGB4, "GL_RGB4");
		spInternalF.put(GL45.GL_RGB5, "GL_RGB5");
		spInternalF.put(GL45.GL_RGB8, "GL_RGB8");
		spInternalF.put(GL45.GL_RGB10, "GL_RGB10");
		spInternalF.put(GL45.GL_RGB12, "GL_RGB12");
		spInternalF.put(GL45.GL_RGB16, "GL_RGB16");
		spInternalF.put(GL45.GL_RGBA2, "GL_RGBA2");
		spInternalF.put(GL45.GL_RGBA4, "GL_RGBA4");
		spInternalF.put(GL45.GL_RGB5_A1, "GL_RGB5_A1");
		spInternalF.put(GL45.GL_RGBA8, "GL_RGBA8");
		spInternalF.put(GL45.GL_RGB10_A2, "GL_RGB10_A2");
		spInternalF.put(GL45.GL_RGBA12, "GL_RGBA12");
		spInternalF.put(GL45.GL_RGBA16, "GL_RGBA16");
		spInternalF.put(GL45.GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_1D, "GL_PROXY_TEXTURE_1D");
		spInternalF.put(GL45.GL_PROXY_TEXTURE_2D, "GL_PROXY_TEXTURE_2D");
		spInternalF.put(GL45.GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
		spInternalF.put(GL45.GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
		spInternalF.put(GL45.GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
		spInternalF.put(GL45.GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
		spInternalF.put(GL45.GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
		spInternalF.put(GL45.GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
		spInternalF.put(GL45.GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
		spInternalF.put(GL45.GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
		spInternalF.put(GL45.GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
		spInternalF.put(GL45.GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
		spInternalF.put(GL45.GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_INDEX_ARRAY_TYPE, "GL_INDEX_ARRAY_TYPE");
		spInternalF.put(GL45.GL_INDEX_ARRAY_STRIDE, "GL_INDEX_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_EDGE_FLAG_ARRAY_STRIDE, "GL_EDGE_FLAG_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
		spInternalF.put(GL45.GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
		spInternalF.put(GL45.GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
		spInternalF.put(GL45.GL_INDEX_ARRAY_POINTER, "GL_INDEX_ARRAY_POINTER");
		spInternalF.put(GL45.GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
		spInternalF.put(GL45.GL_EDGE_FLAG_ARRAY_POINTER, "GL_EDGE_FLAG_ARRAY_POINTER");
		spInternalF.put(GL45.GL_V2F, "GL_V2F");
		spInternalF.put(GL45.GL_V3F, "GL_V3F");
		spInternalF.put(GL45.GL_C4UB_V2F, "GL_C4UB_V2F");
		spInternalF.put(GL45.GL_C4UB_V3F, "GL_C4UB_V3F");
		spInternalF.put(GL45.GL_C3F_V3F, "GL_C3F_V3F");
		spInternalF.put(GL45.GL_N3F_V3F, "GL_N3F_V3F");
		spInternalF.put(GL45.GL_C4F_N3F_V3F, "GL_C4F_N3F_V3F");
		spInternalF.put(GL45.GL_T2F_V3F, "GL_T2F_V3F");
		spInternalF.put(GL45.GL_T4F_V4F, "GL_T4F_V4F");
		spInternalF.put(GL45.GL_T2F_C4UB_V3F, "GL_T2F_C4UB_V3F");
		spInternalF.put(GL45.GL_T2F_C3F_V3F, "GL_T2F_C3F_V3F");
		spInternalF.put(GL45.GL_T2F_N3F_V3F, "GL_T2F_N3F_V3F");
		spInternalF.put(GL45.GL_T2F_C4F_N3F_V3F, "GL_T2F_C4F_N3F_V3F");
		spInternalF.put(GL45.GL_T4F_C4F_N3F_V4F, "GL_T4F_C4F_N3F_V4F");

		spInternalF.put(GL45.GL_UNIFORM, "GL_UNIFORM");
		spInternalF.put(GL45.GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
		spInternalF.put(GL45.GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
		spInternalF.put(GL45.GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
		spInternalF.put(GL45.GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
		spInternalF.put(GL45.GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
		spInternalF.put(GL45.GL_VERTEX_SUBROUTINE, "GL_VERTEX_SUBROUTINE");
		spInternalF.put(GL45.GL_TESS_CONTROL_SUBROUTINE, "GL_TESS_CONTROL_SUBROUTINE");
		spInternalF.put(GL45.GL_TESS_EVALUATION_SUBROUTINE, "GL_TESS_EVALUATION_SUBROUTINE");
		spInternalF.put(GL45.GL_GEOMETRY_SUBROUTINE, "GL_GEOMETRY_SUBROUTINE");
		spInternalF.put(GL45.GL_FRAGMENT_SUBROUTINE, "GL_FRAGMENT_SUBROUTINE");
		spInternalF.put(GL45.GL_COMPUTE_SUBROUTINE, "GL_COMPUTE_SUBROUTINE");
		spInternalF.put(GL45.GL_VERTEX_SUBROUTINE_UNIFORM, "GL_VERTEX_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_TESS_CONTROL_SUBROUTINE_UNIFORM, "GL_TESS_CONTROL_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_TESS_EVALUATION_SUBROUTINE_UNIFORM, "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_GEOMETRY_SUBROUTINE_UNIFORM, "GL_GEOMETRY_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_FRAGMENT_SUBROUTINE_UNIFORM, "GL_FRAGMENT_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_COMPUTE_SUBROUTINE_UNIFORM, "GL_COMPUTE_SUBROUTINE_UNIFORM");
		spInternalF.put(GL45.GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
		spInternalF.put(GL45.GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
		spInternalF.put(GL45.GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
		spInternalF.put(GL45.GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
		spInternalF.put(GL45.GL_MAX_NUM_COMPATIBLE_SUBROUTINES, "GL_MAX_NUM_COMPATIBLE_SUBROUTINES");
		spInternalF.put(GL45.GL_NAME_LENGTH, "GL_NAME_LENGTH");
		spInternalF.put(GL45.GL_TYPE, "GL_TYPE");
		spInternalF.put(GL45.GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
		spInternalF.put(GL45.GL_OFFSET, "GL_OFFSET");
		spInternalF.put(GL45.GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
		spInternalF.put(GL45.GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
		spInternalF.put(GL45.GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
		spInternalF.put(GL45.GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
		spInternalF.put(GL45.GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
		spInternalF.put(GL45.GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
		spInternalF.put(GL45.GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
		spInternalF.put(GL45.GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
		spInternalF.put(GL45.GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
		spInternalF.put(GL45.GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
		spInternalF.put(GL45.GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
		spInternalF.put(GL45.GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
		spInternalF.put(GL45.GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
		spInternalF.put(GL45.GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
		spInternalF.put(GL45.GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
		spInternalF.put(GL45.GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
		spInternalF.put(GL45.GL_LOCATION, "GL_LOCATION");
		spInternalF.put(GL45.GL_LOCATION_INDEX, "GL_LOCATION_INDEX");
		spInternalF.put(GL45.GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
	}
}
